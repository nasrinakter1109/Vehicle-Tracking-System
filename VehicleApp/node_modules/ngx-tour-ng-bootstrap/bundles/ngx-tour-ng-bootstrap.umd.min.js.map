{"version":3,"sources":["ng://ngx-tour-ng-bootstrap/lib/ng-bootstrap-tour.service.ts","ng://ngx-tour-ng-bootstrap/lib/tour-step-template.service.ts","ng://ngx-tour-ng-bootstrap/lib/tour-anchor.directive.ts","ng://ngx-tour-ng-bootstrap/lib/tour-step-template.component.ts","ng://ngx-tour-ng-bootstrap/lib/ng-bootstrap.module.ts"],"names":["tslib_1.__extends","Injectable","TourService","TourStepTemplateService","Directive","args","selector","NgbPopover","TourAnchorNgBootstrapDirective","tourService","tourStepTemplate","element","popoverDirective","this","toggle","prototype","ngOnInit","register","tourAnchor","ngOnDestroy","unregister","showTourStep","step","isActive","ngbPopover","template","popoverTitle","title","container","placement","replace","prevBtnTitle","nextBtnTitle","endBtnTitle","open","preventScrolling","withinviewport","nativeElement","sides","scrollIntoView","hideTourStep","close","NgbTourService","ElementRef","TourAnchorNgBootstrapPopoverDirective","decorators","type","Host","Input","HostBinding","TourStepTemplateComponent","tourStepTemplateService","_this","_super","call","ngAfterContentInit","stepTemplate","defaultTourStepTemplate","Component","encapsulation","ViewEncapsulation","None","ViewChild","read","TemplateRef","ContentChild","TourHotkeyListenerComponent","TourNgBootstrapModule","forRoot","ngModule","providers","tslib_1","__spread","TourModule","NgModule","declarations","exports","imports","CommonModule","NgbPopoverModule"],"mappings":"uqBAMoCA,EAAAA,UAAAA,EAAAA,uBADnCC,EAAAA,gBACmCC,EAAAA,aCNpCC,EAAA,oDAECF,EAAAA,eAFD,oFCW2DD,EAAAA,UAAAA,EAAAA,uBAD1DI,EAAAA,UAASC,KAAA,CAAC,CAAEC,SAAU,sBACoCC,EAAAA,yBAWzD,SAAAC,EACUC,EACAC,EACAC,EACQC,GAHRC,KAAAJ,YAAAA,EACAI,KAAAH,iBAAAA,EACAG,KAAAF,QAAAA,EACQE,KAAAD,iBAAAA,EAGhBC,KAAKD,iBAAiBE,OAAS,oBAG1BN,EAAAO,UAAAC,oBACLH,KAAKJ,YAAYQ,SAASJ,KAAKK,WAAYL,OAGtCL,EAAAO,UAAAI,uBACLN,KAAKJ,YAAYW,WAAWP,KAAKK,aAG5BV,EAAAO,UAAAM,sBAAaC,GAClBT,KAAKU,UAAW,EAChBV,KAAKD,iBAAiBY,WAAaX,KAAKH,iBAAiBe,SACzDZ,KAAKD,iBAAiBc,aAAeJ,EAAKK,MAC1Cd,KAAKD,iBAAiBgB,UAAa,OACnCf,KAAKD,iBAAiBiB,WAAwBP,EAAKO,WAAa,OAC7DC,QAAQ,SAAU,QAAQA,QAAQ,QAAS,SAC3CA,QAAQ,QAAS,UAAUA,QAAQ,QAAS,OAC/CR,EAAKS,aAAeT,EAAKS,cAAgB,OACzCT,EAAKU,aAAeV,EAAKU,cAAgB,OACzCV,EAAKW,YAAcX,EAAKW,aAAe,MAEvCpB,KAAKD,iBAAiBsB,KAAK,CAAEZ,KAAIA,IAC5BA,EAAKa,mBACHC,EAAevB,KAAKF,QAAQ0B,cAAe,CAAEC,MAAO,WAE7CF,EAAevB,KAAKF,QAAQ0B,cAAe,CAAEC,MAAO,oBAChDzB,KAAKF,QAAqB,cAAE4B,gBAAe,GAF3C1B,KAAKF,QAAqB,cAAE4B,gBAAe,KAOxD/B,EAAAO,UAAAyB,wBACL3B,KAAKU,UAAW,EAChBV,KAAKD,iBAAiB6B,6BAnDzBrC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,4DATHoC,SAEAvC,SAPWwC,EAAAA,kBAWPC,EAAqCC,WAAA,CAAA,CAAAC,KAe7CC,EAAAA,8CATFC,EAAAA,wBAEAC,EAAAA,YAAW5C,KAAA,CAAC,qDCOb,SAAA6C,EAAoBC,EAAyD1C,GAA7E,IAAA2C,EACEC,EAAAC,KAAAzC,KAAMJ,IAAYI,YADAuC,EAAAD,wBAAAA,EAAyDC,EAAA3C,YAAAA,WAPhCT,EAAAA,UAAAA,EAAAA,GAWtCkD,EAAAnC,UAAAwC,8BACL1C,KAAKsC,wBAAwB1B,SAAWZ,KAAK2C,cAAgB3C,KAAK4C,6CA1BrEC,EAAAA,UAASrD,KAAA,CAAC,CACTsD,cAAeC,EAAAA,kBAAkBC,KACjCvD,SAAU,qBACVmB,SAAU,onBAPHtB,SAEAuC,sDAiBNoB,EAAAA,UAASzD,KAAA,CAAC,WAAY,CAAE0D,KAAMC,EAAAA,oCAE9BhB,EAAAA,OAAK,CAAAF,KACLmB,EAAAA,aAAY5D,KAAA,CAAC2D,EAAAA,mBAJ+BE,EAAAA,+DCD/BC,EAAAC,mBACZ,MAAO,CACLC,SAAUF,EACVG,UAASC,EAAAC,SAAA,CACPrE,GACGsE,EAAAA,WAAWL,UAAUE,UAAS,CACjC5B,0BAZPgC,EAAAA,SAAQrE,KAAA,CAAC,CACRsE,aAAc,CAACnE,EAAgCoC,EAAuCM,GACtF0B,QAAS,CAACpE,EAAgCoC,EAAuCM,GACjF2B,QAAS,CAACC,EAAAA,aAAcC,EAAAA,iBAAiBX","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TourService } from 'ngx-tour-core';\n\nimport { INgbStepOption } from './step-option.interface';\n\n@Injectable()\nexport class NgbTourService extends TourService<INgbStepOption> {}\n","import { Injectable, TemplateRef } from '@angular/core';\n\n@Injectable()\nexport class TourStepTemplateService {\n  public template: TemplateRef<{content: string}>;\n}\n","import { Directive, ElementRef, Host, HostBinding, Input, OnDestroy, OnInit } from '@angular/core';\nimport { NgbPopover, Placement } from '@ng-bootstrap/ng-bootstrap';\nimport { TourAnchorDirective } from 'ngx-tour-core';\nimport withinviewport from 'withinviewport';\n\nimport { NgbTourService } from './ng-bootstrap-tour.service';\nimport { INgbStepOption } from './step-option.interface';\nimport { TourStepTemplateService } from './tour-step-template.service';\n\n\n@Directive({ selector: '[tourAnchor]' })\nexport class TourAnchorNgBootstrapPopoverDirective extends NgbPopover { }\n\n@Directive({\n  selector: '[tourAnchor]',\n})\nexport class TourAnchorNgBootstrapDirective implements OnInit, OnDestroy, TourAnchorDirective {\n  @Input() public tourAnchor: string;\n\n  @HostBinding('class.touranchor--is-active')\n  public isActive: boolean;\n\n  constructor(\n    private tourService: NgbTourService,\n    private tourStepTemplate: TourStepTemplateService,\n    private element: ElementRef,\n    @Host() private popoverDirective: TourAnchorNgBootstrapPopoverDirective,\n  ) {\n\n    this.popoverDirective.toggle = () => { };\n  }\n\n  public ngOnInit(): void {\n    this.tourService.register(this.tourAnchor, this);\n  }\n\n  public ngOnDestroy(): void {\n    this.tourService.unregister(this.tourAnchor);\n  }\n\n  public showTourStep(step: INgbStepOption): void {\n    this.isActive = true;\n    this.popoverDirective.ngbPopover = this.tourStepTemplate.template;\n    this.popoverDirective.popoverTitle = step.title;\n    this.popoverDirective.container =  'body';\n    this.popoverDirective.placement = <Placement>(step.placement || 'top')\n      .replace('before', 'left').replace('after', 'right')\n      .replace('below', 'bottom').replace('above', 'top');\n    step.prevBtnTitle = step.prevBtnTitle || 'Prev';\n    step.nextBtnTitle = step.nextBtnTitle || 'Next';\n    step.endBtnTitle = step.endBtnTitle || 'End';\n\n    this.popoverDirective.open({ step });\n    if (!step.preventScrolling) {\n      if (!withinviewport(this.element.nativeElement, { sides: 'bottom' })) {\n        (<HTMLElement>this.element.nativeElement).scrollIntoView(false);\n      } else if (!withinviewport(this.element.nativeElement, { sides: 'left top right' })) {\n        (<HTMLElement>this.element.nativeElement).scrollIntoView(true);\n      }\n    }\n  }\n\n  public hideTourStep(): void {\n    this.isActive = false;\n    this.popoverDirective.close();\n  }\n}\n","import { TourHotkeyListenerComponent, IStepOption } from 'ngx-tour-core';\nimport { TourStepTemplateService } from './tour-step-template.service';\nimport { Component, TemplateRef, ViewChild, AfterContentInit, ViewEncapsulation, Input, ContentChild } from '@angular/core';\nimport { NgbTourService } from './ng-bootstrap-tour.service';\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'tour-step-template',\n  template: `\n    <ng-template #tourStep let-step=\"step\">\n      <p class=\"tour-step-content\">{{step?.content}}</p>\n      <div class=\"tour-step-navigation\">\n        <button *ngIf=\"tourService.hasPrev(step)\" class=\"btn btn-sm btn-default\" (click)=\"tourService.prev()\">Â« {{step?.prevBtnTitle}}</button>\n        <button *ngIf=\"tourService.hasNext(step)\" class=\"btn btn-sm btn-default\" (click)=\"tourService.next()\">{{step?.nextBtnTitle}} Â»</button>\n        <button class=\"btn btn-sm btn-default\" (click)=\"tourService.end()\">{{step?.endBtnTitle}}</button>\n      </div>\n    </ng-template>\n  `,\n})\nexport class TourStepTemplateComponent extends TourHotkeyListenerComponent implements AfterContentInit {\n  @ViewChild('tourStep', { read: TemplateRef }) public defaultTourStepTemplate: TemplateRef<any>;\n\n  @Input()\n  @ContentChild(TemplateRef)\n  public stepTemplate: TemplateRef<{ step: IStepOption }>;\n\n  constructor(private tourStepTemplateService: TourStepTemplateService, public tourService: NgbTourService) {\n    super(tourService);\n  }\n\n  public ngAfterContentInit(): void {\n    this.tourStepTemplateService.template = this.stepTemplate || this.defaultTourStepTemplate;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { NgbPopoverModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TourModule } from 'ngx-tour-core';\n\nimport { NgbTourService } from './ng-bootstrap-tour.service';\nimport { TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective } from './tour-anchor.directive';\nimport { TourStepTemplateComponent } from './tour-step-template.component';\nimport { TourStepTemplateService } from './tour-step-template.service';\n\nexport { TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective, TourStepTemplateComponent, NgbTourService };\n\n@NgModule({\n  declarations: [TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective, TourStepTemplateComponent],\n  exports: [TourAnchorNgBootstrapDirective, TourAnchorNgBootstrapPopoverDirective, TourStepTemplateComponent],\n  imports: [CommonModule, NgbPopoverModule.forRoot()],\n})\nexport class TourNgBootstrapModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TourNgBootstrapModule,\n      providers: [\n        TourStepTemplateService,\n        ...TourModule.forRoot().providers,\n        NgbTourService\n      ],\n    };\n  }\n}\n"]}