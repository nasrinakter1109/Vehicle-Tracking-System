{"version":3,"file":"ngx-tour-core.umd.js.map","sources":["ng://ngx-tour-core/lib/tour.service.ts","ng://ngx-tour-core/lib/tour-hotkey-listener.component.ts","ng://ngx-tour-core/lib/tour.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { NavigationStart, Router, UrlSegment } from '@angular/router';\n\nimport { TourAnchorDirective } from './tour-anchor.directive';\nimport { Subject, Observable, merge as mergeStatic } from 'rxjs';\nimport { first, map, filter } from 'rxjs/operators';\n\nexport interface IStepOption {\n  stepId?: string;\n  anchorId?: string;\n  title?: string;\n  content?: string;\n  route?: string | UrlSegment[];\n  nextStep?: number | string;\n  prevStep?: number | string;\n  placement?: any;\n  preventScrolling?: boolean;\n  prevBtnTitle?: string;\n  nextBtnTitle?: string;\n  endBtnTitle?: string;\n}\n\nexport enum TourState {\n  OFF,\n  ON,\n  PAUSED\n}\n\n@Injectable()\nexport class TourService<T extends IStepOption = IStepOption> {\n  public stepShow$: Subject<T> = new Subject();\n  public stepHide$: Subject<T> = new Subject();\n  public initialize$: Subject<T[]> = new Subject();\n  public start$: Subject<T> = new Subject();\n  public end$: Subject<any> = new Subject();\n  public pause$: Subject<T> = new Subject();\n  public resume$: Subject<T> = new Subject();\n  public anchorRegister$: Subject<string> = new Subject();\n  public anchorUnregister$: Subject<string> = new Subject();\n  public events$: Observable<{ name: string; value: any }> = mergeStatic(\n    this.stepShow$.pipe(map(value => ({ name: 'stepShow', value }))),\n    this.stepHide$.pipe(map(value => ({ name: 'stepHide', value }))),\n    this.initialize$.pipe(map(value => ({ name: 'initialize', value }))),\n    this.start$.pipe(map(value => ({ name: 'start', value }))),\n    this.end$.pipe(map(value => ({ name: 'end', value }))),\n    this.pause$.pipe(map(value => ({ name: 'pause', value }))),\n    this.resume$.pipe(map(value => ({ name: 'resume', value }))),\n    this.anchorRegister$.pipe(\n      map(value => ({\n        name: 'anchorRegister',\n        value\n      }))\n    ),\n    this.anchorUnregister$.pipe(\n      map(value => ({\n        name: 'anchorUnregister',\n        value\n      }))\n    )\n  );\n\n  public steps: T[] = [];\n  public currentStep: T;\n\n  public anchors: { [anchorId: string]: TourAnchorDirective } = {};\n  private status: TourState = TourState.OFF;\n  private isHotKeysEnabled = true;\n\n  constructor(private router: Router) {}\n\n  public initialize(steps: T[], stepDefaults?: T): void {\n    if (steps && steps.length > 0) {\n      this.status = TourState.OFF;\n      this.steps = steps.map(step => Object.assign({}, stepDefaults, step));\n      this.initialize$.next(this.steps);\n    }\n  }\n\n  public disableHotkeys(): void {\n    this.isHotKeysEnabled = false;\n  }\n\n  public enableHotkeys(): void {\n    this.isHotKeysEnabled = true;\n  }\n\n  public start(): void {\n    this.startAt(0);\n  }\n\n  public startAt(stepId: number | string): void {\n    this.status = TourState.ON;\n    this.goToStep(this.loadStep(stepId));\n    this.start$.next();\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationStart), first())\n      .subscribe(() => {\n        if (this.currentStep) {\n          this.hideStep(this.currentStep);\n        }\n      });\n  }\n\n  public end(): void {\n    this.status = TourState.OFF;\n    this.hideStep(this.currentStep);\n    this.currentStep = undefined;\n    this.end$.next();\n  }\n\n  public pause(): void {\n    this.status = TourState.PAUSED;\n    this.hideStep(this.currentStep);\n    this.pause$.next();\n  }\n\n  public resume(): void {\n    this.status = TourState.ON;\n    this.showStep(this.currentStep);\n    this.resume$.next();\n  }\n\n  public toggle(pause?: boolean): void {\n    if (pause) {\n      if (this.currentStep) {\n        this.pause();\n      } else {\n        this.resume();\n      }\n    } else {\n      if (this.currentStep) {\n        this.end();\n      } else {\n        this.start();\n      }\n    }\n  }\n\n  public next(): void {\n    if (this.hasNext(this.currentStep)) {\n      this.goToStep(\n        this.loadStep(\n          this.currentStep.nextStep || this.steps.indexOf(this.currentStep) + 1\n        )\n      );\n    }\n  }\n\n  public hasNext(step: T): boolean {\n    if (!step) {\n      console.warn('Can\\'t get next step. No currentStep.');\n      return false;\n    }\n    return (\n      step.nextStep !== undefined ||\n      this.steps.indexOf(step) < this.steps.length - 1\n    );\n  }\n\n  public prev(): void {\n    if (this.hasPrev(this.currentStep)) {\n      this.goToStep(\n        this.loadStep(\n          this.currentStep.prevStep || this.steps.indexOf(this.currentStep) - 1\n        )\n      );\n    }\n  }\n\n  public hasPrev(step: T): boolean {\n    if (!step) {\n      console.warn('Can\\'t get previous step. No currentStep.');\n      return false;\n    }\n    return step.prevStep !== undefined || this.steps.indexOf(step) > 0;\n  }\n\n  public goto(stepId: number | string): void {\n    this.goToStep(this.loadStep(stepId));\n  }\n\n  public register(anchorId: string, anchor: TourAnchorDirective): void {\n    if (this.anchors[anchorId]) {\n      throw new Error('anchorId ' + anchorId + ' already registered!');\n    }\n    this.anchors[anchorId] = anchor;\n    this.anchorRegister$.next(anchorId);\n  }\n\n  public unregister(anchorId: string): void {\n    delete this.anchors[anchorId];\n    this.anchorUnregister$.next(anchorId);\n  }\n\n  public getStatus(): TourState {\n    return this.status;\n  }\n\n  public isHotkeysEnabled(): boolean {\n    return this.isHotKeysEnabled;\n  }\n\n  private goToStep(step: T): void {\n    if (!step) {\n      console.warn('Can\\'t go to non-existent step');\n      this.end();\n      return;\n    }\n    let navigatePromise: Promise<boolean> = new Promise(resolve =>\n      resolve(true)\n    );\n    if (step.route !== undefined && typeof step.route === 'string') {\n      navigatePromise = this.router.navigateByUrl(step.route);\n    } else if (step.route && Array.isArray(step.route)) {\n      navigatePromise = this.router.navigate(step.route);\n    }\n    navigatePromise.then(navigated => {\n      if (navigated !== false) {\n        setTimeout(() => this.setCurrentStep(step));\n      }\n    });\n  }\n\n  private loadStep(stepId: number | string): T {\n    if (typeof stepId === 'number') {\n      return this.steps[stepId];\n    } else {\n      return this.steps.find(step => step.stepId === stepId);\n    }\n  }\n\n  private setCurrentStep(step: T): void {\n    if (this.currentStep) {\n      this.hideStep(this.currentStep);\n    }\n    this.currentStep = step;\n    this.showStep(this.currentStep);\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationStart), first())\n      .subscribe(() => {\n        if (this.currentStep) {\n          this.hideStep(this.currentStep);\n        }\n      });\n  }\n\n  private showStep(step: T): void {\n    const anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      console.warn(\n        'Can\\'t attach to unregistered anchor with id ' + step.anchorId\n      );\n      this.end();\n      return;\n    }\n    anchor.showTourStep(step);\n    this.stepShow$.next(step);\n  }\n\n  private hideStep(step: T): void {\n    const anchor = this.anchors[step && step.anchorId];\n    if (!anchor) {\n      return;\n    }\n    anchor.hideTourStep();\n    this.stepHide$.next(step);\n  }\n}\n","import { Component, HostListener } from '@angular/core';\n\nimport { TourService, TourState } from './tour.service';\n\n@Component({\n  selector: 'tour-hotkey-listener',\n  template: `<ng-content></ng-content>`\n})\nexport class TourHotkeyListenerComponent {\n  constructor(public tourService: TourService) {}\n\n  /**\n   * Configures hot keys for controlling the tour with the keyboard\n   */\n  @HostListener('window:keydown.Escape')\n  public onEscapeKey(): void {\n    if (\n      this.tourService.getStatus() === TourState.ON &&\n      this.tourService.isHotkeysEnabled()\n    ) {\n      this.tourService.end();\n    }\n  }\n\n  @HostListener('window:keydown.ArrowRight')\n  public onArrowRightKey(): void {\n    if (\n      this.tourService.getStatus() === TourState.ON &&\n      this.tourService.hasNext(this.tourService.currentStep) &&\n      this.tourService.isHotkeysEnabled()\n    ) {\n      this.tourService.next();\n    }\n  }\n\n  @HostListener('window:keydown.ArrowLeft')\n  public onArrowLeftKey(): void {\n    if (\n      this.tourService.getStatus() === TourState.ON &&\n      this.tourService.hasPrev(this.tourService.currentStep) &&\n      this.tourService.isHotkeysEnabled()\n    ) {\n      this.tourService.prev();\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\nimport { TourHotkeyListenerComponent } from './tour-hotkey-listener.component';\nimport { TourService } from './tour.service';\n\n@NgModule({\n    declarations: [TourHotkeyListenerComponent],\n    exports: [TourHotkeyListenerComponent],\n    imports: [CommonModule, RouterModule],\n})\nexport class TourModule {\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: TourModule,\n            providers: [\n                TourService,\n            ],\n        };\n    }\n};\n\nexport { TourService };\n"],"names":["router","Subject","mergeStatic","map","filter","NavigationStart","first","Injectable","Router","Component","HostListener","NgModule","CommonModule","RouterModule"],"mappings":"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"}
