/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Component, HostListener } from '@angular/core';
import { TourService, TourState } from './tour.service';
export class TourHotkeyListenerComponent {
    /**
     * @param {?} tourService
     */
    constructor(tourService) {
        this.tourService = tourService;
    }
    /**
     * Configures hot keys for controlling the tour with the keyboard
     * @return {?}
     */
    onEscapeKey() {
        if (this.tourService.getStatus() === TourState.ON &&
            this.tourService.isHotkeysEnabled()) {
            this.tourService.end();
        }
    }
    /**
     * @return {?}
     */
    onArrowRightKey() {
        if (this.tourService.getStatus() === TourState.ON &&
            this.tourService.hasNext(this.tourService.currentStep) &&
            this.tourService.isHotkeysEnabled()) {
            this.tourService.next();
        }
    }
    /**
     * @return {?}
     */
    onArrowLeftKey() {
        if (this.tourService.getStatus() === TourState.ON &&
            this.tourService.hasPrev(this.tourService.currentStep) &&
            this.tourService.isHotkeysEnabled()) {
            this.tourService.prev();
        }
    }
}
TourHotkeyListenerComponent.decorators = [
    { type: Component, args: [{
                selector: 'tour-hotkey-listener',
                template: `<ng-content></ng-content>`
            },] },
];
/** @nocollapse */
TourHotkeyListenerComponent.ctorParameters = () => [
    { type: TourService, },
];
TourHotkeyListenerComponent.propDecorators = {
    "onEscapeKey": [{ type: HostListener, args: ['window:keydown.Escape',] },],
    "onArrowRightKey": [{ type: HostListener, args: ['window:keydown.ArrowRight',] },],
    "onArrowLeftKey": [{ type: HostListener, args: ['window:keydown.ArrowLeft',] },],
};
function TourHotkeyListenerComponent_tsickle_Closure_declarations() {
    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */
    TourHotkeyListenerComponent.decorators;
    /**
     * @nocollapse
     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}
     */
    TourHotkeyListenerComponent.ctorParameters;
    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */
    TourHotkeyListenerComponent.propDecorators;
    /** @type {?} */
    TourHotkeyListenerComponent.prototype.tourService;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG91ci1ob3RrZXktbGlzdGVuZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXRvdXItY29yZS8iLCJzb3VyY2VzIjpbImxpYi90b3VyLWhvdGtleS1saXN0ZW5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhELE9BQU8sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFNeEQsTUFBTTs7OztJQUNKLFlBQW1CLFdBQXdCO1FBQXhCLGdCQUFXLEdBQVgsV0FBVyxDQUFhO0tBQUk7Ozs7O0lBTXhDLFdBQVc7UUFDaEIsRUFBRSxDQUFDLENBQ0QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLEVBQUUsS0FBSyxTQUFTLENBQUMsRUFBRTtZQUM3QyxJQUFJLENBQUMsV0FBVyxDQUFDLGdCQUFnQixFQUNuQyxDQUFDLENBQUMsQ0FBQztZQUNELElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLENBQUM7U0FDeEI7Ozs7O0lBSUksZUFBZTtRQUNwQixFQUFFLENBQUMsQ0FDRCxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxLQUFLLFNBQVMsQ0FBQyxFQUFFO1lBQzdDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDO1lBQ3RELElBQUksQ0FBQyxXQUFXLENBQUMsZ0JBQWdCLEVBQ25DLENBQUMsQ0FBQyxDQUFDO1lBQ0QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUN6Qjs7Ozs7SUFJSSxjQUFjO1FBQ25CLEVBQUUsQ0FBQyxDQUNELElBQUksQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLEtBQUssU0FBUyxDQUFDLEVBQUU7WUFDN0MsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUM7WUFDdEQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsRUFDbkMsQ0FBQyxDQUFDLENBQUM7WUFDRCxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQ3pCOzs7O1lBdkNKLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsc0JBQXNCO2dCQUNoQyxRQUFRLEVBQUUsMkJBQTJCO2FBQ3RDOzs7O1lBTFEsV0FBVzs7OzRCQVlqQixZQUFZLFNBQUMsdUJBQXVCO2dDQVVwQyxZQUFZLFNBQUMsMkJBQTJCOytCQVd4QyxZQUFZLFNBQUMsMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBIb3N0TGlzdGVuZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHsgVG91clNlcnZpY2UsIFRvdXJTdGF0ZSB9IGZyb20gJy4vdG91ci5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAndG91ci1ob3RrZXktbGlzdGVuZXInLFxuICB0ZW1wbGF0ZTogYDxuZy1jb250ZW50PjwvbmctY29udGVudD5gXG59KVxuZXhwb3J0IGNsYXNzIFRvdXJIb3RrZXlMaXN0ZW5lckNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyB0b3VyU2VydmljZTogVG91clNlcnZpY2UpIHt9XG5cbiAgLyoqXG4gICAqIENvbmZpZ3VyZXMgaG90IGtleXMgZm9yIGNvbnRyb2xsaW5nIHRoZSB0b3VyIHdpdGggdGhlIGtleWJvYXJkXG4gICAqL1xuICBASG9zdExpc3RlbmVyKCd3aW5kb3c6a2V5ZG93bi5Fc2NhcGUnKVxuICBwdWJsaWMgb25Fc2NhcGVLZXkoKTogdm9pZCB7XG4gICAgaWYgKFxuICAgICAgdGhpcy50b3VyU2VydmljZS5nZXRTdGF0dXMoKSA9PT0gVG91clN0YXRlLk9OICYmXG4gICAgICB0aGlzLnRvdXJTZXJ2aWNlLmlzSG90a2V5c0VuYWJsZWQoKVxuICAgICkge1xuICAgICAgdGhpcy50b3VyU2VydmljZS5lbmQoKTtcbiAgICB9XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCd3aW5kb3c6a2V5ZG93bi5BcnJvd1JpZ2h0JylcbiAgcHVibGljIG9uQXJyb3dSaWdodEtleSgpOiB2b2lkIHtcbiAgICBpZiAoXG4gICAgICB0aGlzLnRvdXJTZXJ2aWNlLmdldFN0YXR1cygpID09PSBUb3VyU3RhdGUuT04gJiZcbiAgICAgIHRoaXMudG91clNlcnZpY2UuaGFzTmV4dCh0aGlzLnRvdXJTZXJ2aWNlLmN1cnJlbnRTdGVwKSAmJlxuICAgICAgdGhpcy50b3VyU2VydmljZS5pc0hvdGtleXNFbmFibGVkKClcbiAgICApIHtcbiAgICAgIHRoaXMudG91clNlcnZpY2UubmV4dCgpO1xuICAgIH1cbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ3dpbmRvdzprZXlkb3duLkFycm93TGVmdCcpXG4gIHB1YmxpYyBvbkFycm93TGVmdEtleSgpOiB2b2lkIHtcbiAgICBpZiAoXG4gICAgICB0aGlzLnRvdXJTZXJ2aWNlLmdldFN0YXR1cygpID09PSBUb3VyU3RhdGUuT04gJiZcbiAgICAgIHRoaXMudG91clNlcnZpY2UuaGFzUHJldih0aGlzLnRvdXJTZXJ2aWNlLmN1cnJlbnRTdGVwKSAmJlxuICAgICAgdGhpcy50b3VyU2VydmljZS5pc0hvdGtleXNFbmFibGVkKClcbiAgICApIHtcbiAgICAgIHRoaXMudG91clNlcnZpY2UucHJldigpO1xuICAgIH1cbiAgfVxufVxuIl19