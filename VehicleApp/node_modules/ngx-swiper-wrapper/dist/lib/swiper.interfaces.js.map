{"version":3,"file":"swiper.interfaces.js","sourceRoot":"","sources":["../../src/lib/swiper.interfaces.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,eAAe,CAAC;;AAE/C,WAAa,aAAa,GAAG,IAAI,cAAc,CAAwB,eAAe,CAAC,CAAC;;;;;AAYxF,WAAa,YAAY,GAAkB;IACzC,MAAM;IACN,eAAe;IAEf,QAAQ;IACR,UAAU;IACV,UAAU;IAEV,cAAc;IACd,aAAa;IAEb,QAAQ;IACR,YAAY;IACZ,cAAc;IAEd,YAAY;IACZ,aAAa;IAEb,cAAc;IACd,eAAe;IAEf,UAAU;IACV,UAAU;IACV,gBAAgB;IAEhB,UAAU;IACV,cAAc;IACd,eAAe;IAEf,aAAa;IACb,eAAe;IACf,gBAAgB;IAEhB,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IAEjB,WAAW;IACX,aAAa;IACb,iBAAiB;IACjB,gBAAgB;IAChB,iBAAiB;IACjB,kBAAkB;IAClB,yBAAyB;IACzB,qBAAqB;IACrB,uBAAuB;IAEvB,wBAAwB;IACxB,0BAA0B;IAC1B,wBAAwB;IACxB,0BAA0B;IAC1B,0BAA0B;IAC1B,4BAA4B;CAC7B,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmRF,IAAA;IAyIE,sBAAY,MAAkC;QAAlC,uBAAA,EAAA,WAAkC;QAC5C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;KACrB;;;;;;IAED,6BAAM;;;;;IAAN,UAAO,MAAwC,EAAE,MAAY;QAAtD,uBAAA,EAAA,WAAwC;QAC7C,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC;QAExB,KAAK,IAAM,GAAG,IAAI,MAAM,EAAE;YACxB,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ;gBACtF,CAAC,OAAO,WAAW,KAAK,WAAW,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY,WAAW,CAAC,CAAC,EAChF;gBACE,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;gBAEjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aACvC;iBAAM;gBACL,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;aAC3B;SACF;KACF;uBAjfH;IAkfC,CAAA;AA5JD,wBA4JC","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const SWIPER_CONFIG = new InjectionToken<SwiperConfigInterface>('SWIPER_CONFIG');\n\nexport type SwiperEvent = 'init' | 'beforeDestroy' | 'scroll' | 'progress' | 'keyPress' |\n  'beforeResize' | 'afterResize' | 'resize' | 'breakpoint' | 'beforeResize' | 'sliderMove' |\n  'slideChange' | 'setTranslate' | 'setTransition' | 'fromEdge' | 'reachEnd' | 'reachBeginning' |\n  'autoplay' | 'autoplayStop' | 'autoplayStart' | 'imagesReady' | 'lazyImageLoad' |\n  'lazyImageReady' | 'scrollDragEnd' | 'scrollDragMove' | 'scrollDragStart' | 'swiperTap' |\n  'swiperClick' | 'swiperDoubleTap' | 'swiperTouchEnd' | 'swiperTouchMove' | 'swiperTouchStart' |\n  'swiperTouchMoveOpposite' | 'swiperTransitionEnd' | 'swiperTransitionStart' |\n  'slideNextTransitionEnd' | 'slideNextTransitionStart' | 'slidePrevTransitionEnd' |\n  'slidePrevTransitionStart' | 'slideChangeTransitionEnd' | 'slideChangeTransitionStart';\n\nexport const SwiperEvents: SwiperEvent[] = [\n  'init',\n  'beforeDestroy',\n\n  'scroll',\n  'progress',\n  'keyPress',\n\n  'beforeResize',\n  'afterResize',\n\n  'resize',\n  'breakpoint',\n  'beforeResize',\n\n  'sliderMove',\n  'slideChange',\n\n  'setTranslate',\n  'setTransition',\n\n  'fromEdge',\n  'reachEnd',\n  'reachBeginning',\n\n  'autoplay',\n  'autoplayStop',\n  'autoplayStart',\n\n  'imagesReady',\n  'lazyImageLoad',\n  'lazyImageReady',\n\n  'scrollDragEnd',\n  'scrollDragMove',\n  'scrollDragStart',\n\n  'swiperTap',\n  'swiperClick',\n  'swiperDoubleTap',\n  'swiperTouchEnd',\n  'swiperTouchMove',\n  'swiperTouchStart',\n  'swiperTouchMoveOpposite',\n  'swiperTransitionEnd',\n  'swiperTransitionStart',\n\n  'slideNextTransitionEnd',\n  'slideNextTransitionStart',\n  'slidePrevTransitionEnd',\n  'slidePrevTransitionStart',\n  'slideChangeTransitionEnd',\n  'slideChangeTransitionStart'\n];\n\nexport interface SwiperConfigInterface {\n  // Swiper parameters\n  init?: boolean,\n  initialSlide?: number,\n  direction?: string,\n  speed?: number,\n  setWrapperSize?: boolean,\n  virtualTranslate?: boolean,\n  width?: number,\n  height?: number,\n  autoHeight?: boolean,\n  roundLengths?: boolean,\n  nested?: boolean,\n  uniqueNavElements?: boolean,\n  effect?: string,\n  runCallbacksOnInit?: boolean,\n  watchOverflow?: boolean,\n\n  // Slides grid\n  spaceBetween?: number,\n  slidesPerView?: number | 'auto',\n  slidesPerColumn?: number,\n  slidesPerColumnFill?: string,\n  slidesPerGroup?: number,\n  centeredSlides?: boolean,\n  slidesOffsetBefore?: number,\n  slidesOffsetAfter?: number,\n  normalizeSlideIndex?: boolean,\n\n  // Grab cursor\n  grabCursor?: boolean,\n\n  // Touches\n  touchEventsTarget?: string,\n  touchRatio?: number,\n  touchAngle?: number,\n  simulateTouch?: boolean,\n  shortSwipes?: boolean,\n  longSwipes?: boolean,\n  longSwipesRatio?: number,\n  longSwipesMs?: number,\n  followFinger?: boolean,\n  allowTouchMove?: boolean,\n  threshold?: number,\n  touchMoveStopPropagation?: boolean,\n  iOSEdgeSwipeDetection?: boolean,\n  iOSEdgeSwipeThreshold?: number,\n  touchReleaseOnEdges?: boolean,\n  passiveListeners?: boolean,\n\n  // Touch resistance\n  resistance?: boolean,\n  resistanceRatio?: number,\n\n  // Swiping / no swiping\n  preventInteractionOnTransition?: boolean,\n  allowSlidePrev?: boolean,\n  allowSlideNext?: boolean,\n  noSwiping?: boolean,\n  noSwipingClass?: string,\n  noSwipingSelector?: string,\n  swipeHandler?: string | HTMLElement,\n\n  // Clicks\n  preventClicks?: boolean,\n  preventClicksPropagation?: boolean,\n  slideToClickedSlide?: boolean,\n\n  // Freemode\n  freeMode?: boolean,\n  freeModeMomentum?: boolean,\n  freeModeMomentumRatio?: number,\n  freeModeMomentumVelocityRatio?: number,\n  freeModeMomentumBounce?: boolean,\n  freeModeMomentumBounceRatio?: number,\n  freeModeMinimumVelocity?: number,\n  freeModeSticky?: boolean,\n\n  // Progress\n  watchSlidesProgress?: boolean,\n  watchSlidesVisibility?: boolean,\n\n  // Images\n  preloadImages?: boolean,\n  updateOnImagesReady?: boolean,\n\n  // Loop\n  loop?: boolean,\n  loopAdditionalSlides?: number,\n  loopedSlides?: number,\n  loopFillGroupWithBlank?: boolean,\n\n  // Breakpoints\n  breakpoints?: SwiperBreakpointsInterface,\n\n  // Observer\n  observer?: boolean,\n  observeParents?: boolean,\n\n  // Namespace\n  containerModifierClass?: string,\n  slideClass?: string,\n  slideActiveClass?: string,\n  slideDuplicatedActiveClass?: string,\n  slideVisibleClass?: string,\n  slideDuplicateClass?: string,\n  slideNextClass?: string,\n  slideDuplicatedNextClass?: string,\n  slidePrevClass?: string,\n  slideDuplicatedPrevClass?: string,\n  wrapperClass?: string,\n\n  // Effects\n  fadeEffect?: SwiperFadeEffectInterface,\n  flipEffect?: SwiperFlipEffectInterface,\n  cubeEffect?: SwiperCubeEffectInterface,\n  coverflowEffect?: SwiperCoverflowEffectInterface,\n\n  // Components\n  parallax?: boolean,\n\n  a11y?: boolean | SwiperA11YInterface,\n  lazy?: boolean | SwiperLazyInterface,\n  zoom?: boolean | SwiperZoomInterface,\n  history?: boolean | SwiperHistoryInterface,\n  virtual?: boolean | SwiperVirtualInterface,\n  autoplay?: boolean | SwiperAutoplayInterface,\n  keyboard?: boolean | SwiperKeyboardInterface,\n  scrollbar?: boolean | SwiperScrollbarInterface,\n  mousewheel?: boolean | SwiperMousewheelInterface,\n  controller?: boolean | SwiperControllerInterface,\n  navigation?: boolean | SwiperNavigationInterface,\n  pagination?: boolean | SwiperPaginationInterface,\n  hashNavigation?: boolean | SwiperHashNavigationInterface\n}\n\nexport interface SwiperA11YInterface {\n  prevSlideMessage?: string,\n  nextSlideMessage?: string,\n  firstSlideMessage?: string,\n  lastSlideMessage?: string,\n  paginationBulletMessage?: string,\n  notificationClass?: string\n}\n\nexport interface SwiperLazyInterface {\n  loadPrevNext?: boolean,\n  loadPrevNextAmount?: number,\n  loadOnTransitionStart?: boolean,\n  elementClass?: string,\n  loadingClass?: string,\n  loadedClass?: string,\n  preloaderClass?: string\n}\n\nexport interface SwiperZoomInterface {\n  maxRatio?: number,\n  minRatio?: number,\n  toggle?: boolean,\n  containerClass?: string,\n  zoomedSlideClass?: string\n}\n\nexport interface SwiperHistoryInterface {\n  replaceState?: boolean,\n  key?: string\n}\n\nexport interface SwiperVirtualInterface {\n  slides?: any[],\n  cache?: boolean,\n  renderSlide?: SwiperRenderSlideFunction,\n  renderExternal?: SwiperRenderExternalFunction\n}\n\nexport interface SwiperKeyboardInterface {\n  enabled?: boolean,\n  onlyInViewport?: boolean\n}\n\nexport interface SwiperAutoplayInterface {\n  delay?: number,\n  stopOnLastSlide?: boolean,\n  disableOnInteraction?: boolean,\n  reverseDirection?: boolean,\n  waitForTransition?: boolean\n}\n\nexport interface SwiperScrollbarInterface {\n  el?: string | HTMLElement,\n  hide?: boolean,\n  draggable?: boolean,\n  snapOnRelease?: boolean,\n  dragSize?: number | 'auto'\n}\n\nexport interface SwiperControllerInterface {\n  control?: any,\n  inverse?: boolean,\n  by?: 'slide' | 'container'\n}\n\nexport interface SwiperNavigationInterface {\n  nextEl?: string | HTMLElement,\n  prevEl?: string | HTMLElement,\n  hideOnClick?: boolean,\n  disabledClass?: string,\n  hiddenClass?: string\n}\n\nexport interface SwiperPaginationInterface {\n  el?: string | HTMLElement,\n  type?: 'bullets' | 'fraction' | 'progressbar' | 'custom',\n  bulletElement?: string,\n  dynamicBullets?: boolean,\n  dynamicMainBullets?: number,\n  hideOnClick?: boolean,\n  clickable?: boolean,\n  renderBullet?: SwiperRenderBulletFunction,\n  renderFraction?: SwiperRenderFractionFunction,\n  renderProgressbar?: SwiperRenderProgressbarFunction,\n  renderCustom?: SwiperRenderCustomFunction,\n  bulletClass?: string,\n  bulletActiveClass?: string,\n  modifierClass?: string,\n  currentClass?: string,\n  totalClass?: string,\n  hiddenClass?: string,\n  progressbarFillClass?: string,\n  clickableClass?: string\n}\n\nexport interface SwiperMousewheelInterface {\n  forceToAxis?: boolean,\n  releaseOnEdges?: boolean,\n  invert?: boolean,\n  sensitivity?: number,\n  eventsTarget?: string | HTMLElement\n}\n\nexport interface SwiperHashNavigationInterface {\n  watchState?: boolean,\n  replaceState?: boolean\n}\n\nexport interface SwiperFadeEffectInterface {\n  crossFade?: boolean\n}\n\nexport interface SwiperFlipEffectInterface {\n  limitRotation?: boolean,\n  slideShadows?: boolean\n}\n\nexport interface SwiperCubeEffectInterface {\n  shadow?: boolean,\n  shadowScale?: number,\n  shadowOffset?: number,\n  slideShadows?: boolean\n}\n\nexport interface SwiperCoverflowEffectInterface {\n  depth?: number,\n  rotate?: number,\n  stretch?: number,\n  modifier?: number,\n  slideShadows?: boolean\n}\n\nexport interface SwiperBreakpointsInterface {\n  [size: number]: SwiperConfigInterface\n}\n\nexport class SwiperConfig implements SwiperConfigInterface {\n  public on?: any;\n\n  // Swiper parameters\n  public init?: boolean;\n  public initialSlide?: number;\n  public direction?: string;\n  public speed?: number;\n  public setWrapperSize?: boolean;\n  public virtualTranslate?: boolean;\n  public width?: number;\n  public height?: number;\n  public autoHeight?: boolean;\n  public roundLengths?: boolean;\n  public nested?: boolean;\n  public uniqueNavElements?: boolean;\n  public effect?: string;\n  public runCallbacksOnInit?: boolean;\n  public watchOverflow?: boolean;\n\n  // Slides grid\n  public spaceBetween?: number;\n  public slidesPerView?: number | 'auto';\n  public slidesPerColumn?: number;\n  public slidesPerColumnFill?: string;\n  public slidesPerGroup?: number;\n  public centeredSlides?: boolean;\n  public slidesOffsetBefore?: number;\n  public slidesOffsetAfter?: number;\n  public normalizeSlideIndex?: boolean;\n\n  // Grab cursor\n  public grabCursor?: boolean;\n\n  // Touches\n  public touchEventsTarget?: string;\n  public touchRatio?: number;\n  public touchAngle?: number;\n  public simulateTouch?: boolean;\n  public shortSwipes?: boolean;\n  public longSwipes?: boolean;\n  public longSwipesRatio?: number;\n  public longSwipesMs?: number;\n  public followFinger?: boolean;\n  public allowTouchMove?: boolean;\n  public threshold?: number;\n  public touchMoveStopPropagation?: boolean;\n  public iOSEdgeSwipeDetection?: boolean;\n  public iOSEdgeSwipeThreshold?: number;\n  public touchReleaseOnEdges?: boolean;\n  public passiveListeners?: boolean;\n\n  // Touch resistance\n  public resistance?: boolean;\n  public resistanceRatio?: number;\n\n  // Swiping / no swiping\n  public preventInteractionOnTransition?: boolean;\n  public allowSlidePrev?: boolean;\n  public allowSlideNext?: boolean;\n  public noSwiping?: boolean;\n  public noSwipingClass?: string;\n  public noSwipingSelector?: string;\n  public swipeHandler?: string | HTMLElement;\n\n  // Clicks\n  public preventClicks?: boolean;\n  public preventClicksPropagation?: boolean;\n  public slideToClickedSlide?: boolean;\n\n  // Freemode\n  public freeMode?: boolean;\n  public freeModeMomentum?: boolean;\n  public freeModeMomentumRatio?: number;\n  public freeModeMomentumVelocityRatio?: number;\n  public freeModeMomentumBounce?: boolean;\n  public freeModeMomentumBounceRatio?: number;\n  public freeModeMinimumVelocity?: number;\n  public freeModeSticky?: boolean;\n\n  // Progress\n  public watchSlidesProgress?: boolean;\n  public watchSlidesVisibility?: boolean;\n\n  // Images\n  public preloadImages?: boolean;\n  public updateOnImagesReady?: boolean;\n\n  // Loop\n  public loop?: boolean;\n  public loopAdditionalSlides?: number;\n  public loopedSlides?: number;\n  public loopFillGroupWithBlank?: boolean;\n\n  // Breakpoints\n  public breakpoints?: any;\n\n  // Observer\n  public observer?: boolean;\n  public observeParents?: boolean;\n\n  // Namespace\n  public containerModifierClass?: string;\n  public slideClass?: string;\n  public slideActiveClass?: string;\n  public slideDuplicatedActiveClass?: string;\n  public slideVisibleClass?: string;\n  public slideDuplicateClass?: string;\n  public slideNextClass?: string;\n  public slideDuplicatedNextClass?: string;\n  public slidePrevClass?: string;\n  public slideDuplicatedPrevClass?: string;\n  public wrapperClass?: string;\n\n  // Effects\n  public fadeEffect?: any;\n  public flipEffect?: any;\n  public cubeEffect?: any;\n  public coverflowEffect?: any;\n\n  // Components\n  public parallax?: boolean;\n\n  public a11y?: boolean | any;\n  public lazy?: boolean | any;\n  public zoom?: boolean | any;\n  public history?: boolean | any;\n  public virtual?: boolean | any;\n  public autoplay?: boolean | any;\n  public keyboard?: boolean | any;\n  public scrollbar?: boolean | any;\n  public mousewheel?: boolean | any;\n  public controller?: boolean | any;\n  public navigation?: boolean | any;\n  public pagination?: boolean | any;\n  public hashNavigation?: boolean | any;\n\n  constructor(config: SwiperConfigInterface = {}) {\n    this.assign(config);\n  }\n\n  assign(config: SwiperConfigInterface | any = {}, target?: any) {\n    target = target || this;\n\n    for (const key in config) {\n      if (config[key] != null && !Array.isArray(config[key]) && typeof config[key] === 'object' &&\n         (typeof HTMLElement === 'undefined' || !(config[key] instanceof HTMLElement)))\n      {\n        target[key] = {};\n\n        this.assign(config[key], target[key]);\n      } else {\n        target[key] = config[key];\n      }\n    }\n  }\n}\n\nexport type SwiperRenderSlideFunction = (slide: any, index: number) => HTMLElement;\nexport type SwiperRenderExternalFunction = (data: any) => void;\n\nexport type SwiperRenderCustomFunction = (swiper: any, current: number, total: number) => string;\n\nexport type SwiperRenderBulletFunction = (index: number, className: string) => string;\nexport type SwiperRenderFractionFunction = (currentClass: string, totalClass: string) => string;\nexport type SwiperRenderProgressbarFunction = (progressbarClass: string) => string;\n"]}