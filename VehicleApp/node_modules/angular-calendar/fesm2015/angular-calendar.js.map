{"version":3,"file":"angular-calendar.js.map","sources":["ng://angular-calendar/modules/common/util.ts","ng://angular-calendar/modules/common/calendar-event-actions.component.ts","ng://angular-calendar/modules/common/calendar-event-title.component.ts","ng://angular-calendar/modules/common/calendar-tooltip.directive.ts","ng://angular-calendar/date-adapters/date-adapter.ts","ng://angular-calendar/modules/common/calendar-view.enum.ts","ng://angular-calendar/modules/common/calendar-previous-view.directive.ts","ng://angular-calendar/modules/common/calendar-next-view.directive.ts","ng://angular-calendar/modules/common/calendar-today.directive.ts","ng://angular-calendar/modules/common/calendar-angular-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-date.pipe.ts","ng://angular-calendar/modules/common/calendar-event-title-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-event-title.pipe.ts","ng://angular-calendar/modules/common/click.directive.ts","ng://angular-calendar/modules/common/calendar-utils.provider.ts","ng://angular-calendar/modules/common/calendar-moment-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-native-date-formatter.provider.ts","ng://angular-calendar/modules/common/calendar-event-times-changed-event.interface.ts","ng://angular-calendar/modules/common/calendar-common.module.ts","ng://angular-calendar/modules/month/calendar-month-view.component.ts","ng://angular-calendar/modules/month/calendar-month-view-header.component.ts","ng://angular-calendar/modules/month/calendar-month-cell.component.ts","ng://angular-calendar/modules/month/calendar-open-day-events.component.ts","ng://angular-calendar/modules/month/calendar-month.module.ts","ng://angular-calendar/modules/common/calendar-drag-helper.provider.ts","ng://angular-calendar/modules/common/calendar-resize-helper.provider.ts","ng://angular-calendar/modules/week/calendar-week-view.component.ts","ng://angular-calendar/modules/week/calendar-week-view-header.component.ts","ng://angular-calendar/modules/week/calendar-week-view-event.component.ts","ng://angular-calendar/modules/week/calendar-week-view-hour-segment.component.ts","ng://angular-calendar/modules/week/calendar-week.module.ts","ng://angular-calendar/modules/day/calendar-day-view.component.ts","ng://angular-calendar/modules/day/calendar-day-view-hour-segment.component.ts","ng://angular-calendar/modules/day/calendar-day-view-event.component.ts","ng://angular-calendar/modules/day/calendar-day.module.ts","ng://angular-calendar/modules/calendar.module.ts"],"sourcesContent":["import {\n  CalendarEvent,\n  DayViewEvent,\n  DayViewHour,\n  DayViewHourSegment,\n  validateEvents as validateEventsWithoutLog,\n  ViewPeriod,\n  WeekDay,\n  WeekViewAllDayEvent\n} from 'calendar-utils';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\nexport const validateEvents = (events: CalendarEvent[]) => {\n  const warn = (...args) => console.warn('angular-calendar', ...args);\n  return validateEventsWithoutLog(events, warn);\n};\n\nexport function isInside(outer: ClientRect, inner: ClientRect): boolean {\n  return (\n    Math.ceil(outer.left) <= Math.ceil(inner.left) &&\n    Math.ceil(inner.left) <= Math.ceil(outer.right) &&\n    Math.ceil(outer.left) <= Math.ceil(inner.right) &&\n    Math.ceil(inner.right) <= Math.ceil(outer.right) &&\n    Math.ceil(outer.top) <= Math.ceil(inner.top) &&\n    Math.ceil(inner.top) <= Math.ceil(outer.bottom) &&\n    Math.ceil(outer.top) <= Math.ceil(inner.bottom) &&\n    Math.ceil(inner.bottom) <= Math.ceil(outer.bottom)\n  );\n}\n\nexport function roundToNearest(amount: number, precision: number) {\n  return Math.round(amount / precision) * precision;\n}\n\nexport const trackByEventId = (index: number, event: CalendarEvent) =>\n  event.id ? event.id : event;\n\nexport const trackByWeekDayHeaderDate = (index: number, day: WeekDay) =>\n  day.date.toISOString();\n\nexport const trackByIndex = (index: number) => index;\n\nexport const trackByHourSegment = (\n  index: number,\n  segment: DayViewHourSegment\n) => segment.date.toISOString();\n\nexport const trackByHour = (index: number, hour: DayViewHour) =>\n  hour.segments[0].date.toISOString();\n\nexport const trackByDayOrWeekEvent = (\n  index: number,\n  weekEvent: WeekViewAllDayEvent | DayViewEvent\n) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\n\nconst MINUTES_IN_HOUR = 60;\n\nexport function getMinutesMoved(\n  movedY: number,\n  hourSegments: number,\n  hourSegmentHeight: number,\n  eventSnapSize: number\n): number {\n  const draggedInPixelsSnapSize = roundToNearest(\n    movedY,\n    eventSnapSize || hourSegmentHeight\n  );\n  const pixelAmountInMinutes =\n    MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight);\n  return draggedInPixelsSnapSize * pixelAmountInMinutes;\n}\n\nexport function getMinimumEventHeightInMinutes(\n  hourSegments: number,\n  hourSegmentHeight: number\n) {\n  return (MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight)) * 30;\n}\n\nexport function getDefaultEventEnd(\n  dateAdapter: DateAdapter,\n  event: CalendarEvent,\n  minimumMinutes: number\n): Date {\n  if (event.end) {\n    return event.end;\n  } else {\n    return dateAdapter.addMinutes(event.start, minimumMinutes);\n  }\n}\n\nexport function addDaysWithExclusions(\n  dateAdapter: DateAdapter,\n  date: Date,\n  days: number,\n  excluded: number[]\n): Date {\n  let daysCounter = 0;\n  let daysToAdd = 0;\n  const changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;\n  let result = date;\n  while (daysToAdd <= Math.abs(days)) {\n    result = changeDays(date, daysCounter);\n    const day = dateAdapter.getDay(result);\n    if (excluded.indexOf(day) === -1) {\n      daysToAdd++;\n    }\n    daysCounter++;\n  }\n  return result;\n}\n\nexport function isDraggedWithinPeriod(\n  newStart: Date,\n  newEnd: Date,\n  period: ViewPeriod\n): boolean {\n  const end = newEnd || newStart;\n  return (\n    (period.start <= newStart && newStart <= period.end) ||\n    (period.start <= end && end <= period.end)\n  );\n}\n\nexport function shouldFireDroppedEvent(\n  dropEvent: { dropData?: { event?: CalendarEvent; calendarId?: symbol } },\n  date: Date,\n  allDay: boolean,\n  calendarId: symbol\n) {\n  return (\n    dropEvent.dropData &&\n    dropEvent.dropData.event &&\n    (dropEvent.dropData.calendarId !== calendarId ||\n      (dropEvent.dropData.event.allDay && !allDay) ||\n      (!dropEvent.dropData.event.allDay && allDay))\n  );\n}\n\nexport function getWeekViewPeriod(\n  dateAdapter: DateAdapter,\n  viewDate: Date,\n  weekStartsOn: number,\n  excluded: number[] = [],\n  daysInWeek?: number\n): { viewStart: Date; viewEnd: Date } {\n  let viewStart = daysInWeek\n    ? dateAdapter.startOfDay(viewDate)\n    : dateAdapter.startOfWeek(viewDate, { weekStartsOn });\n  if (excluded.indexOf(dateAdapter.getDay(viewStart)) > -1) {\n    viewStart = dateAdapter.subDays(\n      addDaysWithExclusions(dateAdapter, viewStart, 1, excluded),\n      1\n    );\n  }\n  if (daysInWeek) {\n    const viewEnd = dateAdapter.endOfDay(\n      addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded)\n    );\n    return { viewStart, viewEnd };\n  } else {\n    let viewEnd = dateAdapter.endOfWeek(viewDate, { weekStartsOn });\n    if (excluded.indexOf(dateAdapter.getDay(viewEnd)) > -1) {\n      viewEnd = dateAdapter.addDays(\n        addDaysWithExclusions(dateAdapter, viewEnd, -1, excluded),\n        1\n      );\n    }\n    return { viewStart, viewEnd };\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { trackByIndex } from './util';\n\n@Component({\n  selector: 'mwl-calendar-event-actions',\n  template: `\n    <ng-template #defaultTemplate let-event=\"event\">\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\n        <a\n          class=\"cal-event-action\"\n          href=\"javascript:;\"\n          *ngFor=\"let action of event.actions; trackBy: trackByIndex\"\n          (mwlClick)=\"action.onClick({ event: event })\"\n          [ngClass]=\"action.cssClass\"\n          [innerHtml]=\"action.label\"\n        >\n        </a>\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarEventActionsComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  trackByIndex = trackByIndex;\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-event-title',\n  template: `\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\n      <span\n        class=\"cal-event-title\"\n        [innerHTML]=\"event.title | calendarEventTitle: view:event\"\n      >\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        view: view\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarEventTitleComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() view: string;\n}\n","import {\n  Directive,\n  Component,\n  HostListener,\n  OnDestroy,\n  Input,\n  ComponentRef,\n  Injector,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ElementRef,\n  ComponentFactory,\n  Inject,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { PlacementArray, positionElements } from 'positioning';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-tooltip-window',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-contents=\"contents\"\n      let-placement=\"placement\"\n      let-event=\"event\"\n    >\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\n        <div class=\"cal-tooltip-arrow\"></div>\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        contents: contents,\n        placement: placement,\n        event: event\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarTooltipWindowComponent {\n  @Input() contents: string;\n\n  @Input() placement: string;\n\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n\n@Directive({\n  selector: '[mwlCalendarTooltip]'\n})\nexport class CalendarTooltipDirective implements OnDestroy {\n  @Input('mwlCalendarTooltip') contents: string; // tslint:disable-line no-input-rename\n\n  @Input('tooltipPlacement') placement: PlacementArray = 'auto'; // tslint:disable-line no-input-rename\n\n  @Input('tooltipTemplate') customTemplate: TemplateRef<any>; // tslint:disable-line no-input-rename\n\n  @Input('tooltipEvent') event: CalendarEvent; // tslint:disable-line no-input-rename\n\n  @Input('tooltipAppendToBody') appendToBody: boolean; // tslint:disable-line no-input-rename\n\n  private tooltipFactory: ComponentFactory<CalendarTooltipWindowComponent>;\n  private tooltipRef: ComponentRef<CalendarTooltipWindowComponent>;\n\n  constructor(\n    private elementRef: ElementRef,\n    private injector: Injector,\n    private renderer: Renderer2,\n    componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private document //tslint:disable-line\n  ) {\n    this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(\n      CalendarTooltipWindowComponent\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.hide();\n  }\n\n  @HostListener('mouseenter')\n  onMouseOver(): void {\n    this.show();\n  }\n\n  @HostListener('mouseleave')\n  onMouseOut(): void {\n    this.hide();\n  }\n\n  private show(): void {\n    if (!this.tooltipRef && this.contents) {\n      this.tooltipRef = this.viewContainerRef.createComponent(\n        this.tooltipFactory,\n        0,\n        this.injector,\n        []\n      );\n      this.tooltipRef.instance.contents = this.contents;\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\n      this.tooltipRef.instance.event = this.event;\n      if (this.appendToBody) {\n        this.document.body.appendChild(this.tooltipRef.location.nativeElement);\n      }\n      requestAnimationFrame(() => {\n        this.positionTooltip();\n      });\n    }\n  }\n\n  private hide(): void {\n    if (this.tooltipRef) {\n      this.viewContainerRef.remove(\n        this.viewContainerRef.indexOf(this.tooltipRef.hostView)\n      );\n      this.tooltipRef = null;\n    }\n  }\n\n  private positionTooltip(previousPosition?: string): void {\n    if (this.tooltipRef) {\n      this.tooltipRef.changeDetectorRef.detectChanges();\n      this.tooltipRef.instance.placement = positionElements(\n        this.elementRef.nativeElement,\n        this.tooltipRef.location.nativeElement.children[0],\n        this.placement,\n        this.appendToBody\n      );\n      // keep re-positioning the tooltip until the arrow position doesn't make a difference\n      if (previousPosition !== this.tooltipRef.instance.placement) {\n        this.positionTooltip(this.tooltipRef.instance.placement);\n      }\n    }\n  }\n}\n","import { DateAdapter as BaseDateAdapter } from 'calendar-utils/date-adapters/date-adapter';\n\nexport abstract class DateAdapter implements BaseDateAdapter {\n  abstract addWeeks(date: Date | string | number, amount: number): Date;\n\n  abstract addMonths(date: Date | string | number, amount: number): Date;\n\n  abstract subDays(date: Date | string | number, amount: number): Date;\n\n  abstract subWeeks(date: Date | string | number, amount: number): Date;\n\n  abstract subMonths(date: Date | string | number, amount: number): Date;\n\n  abstract getISOWeek(date: Date | string | number): number;\n\n  abstract setDate(date: Date | string | number, dayOfMonth: number): Date;\n\n  abstract setMonth(date: Date | string | number, month: number): Date;\n\n  abstract setYear(date: Date | string | number, year: number): Date;\n\n  abstract getDate(date: Date | string | number): number;\n\n  abstract getMonth(date: Date | string | number): number;\n\n  abstract getYear(date: Date | string | number): number;\n\n  abstract addDays(date: Date | string | number, amount: number): Date;\n\n  abstract addHours(date: Date | string | number, amount: number): Date;\n\n  abstract addMinutes(date: Date | string | number, amount: number): Date;\n\n  abstract addSeconds(date: Date | string | number, amount: number): Date;\n\n  abstract differenceInDays(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): number;\n\n  abstract differenceInMinutes(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): number;\n\n  abstract differenceInSeconds(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): number;\n\n  abstract endOfDay(date: Date | string | number): Date;\n\n  abstract endOfMonth(date: Date | string | number): Date;\n\n  abstract endOfWeek(\n    date: Date | string | number,\n    options?: { weekStartsOn?: number }\n  ): Date;\n\n  abstract getDay(date: Date | string | number): number;\n\n  abstract isSameDay(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): boolean;\n\n  abstract isSameMonth(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): boolean;\n\n  abstract isSameSecond(\n    dateLeft: Date | string | number,\n    dateRight: Date | string | number\n  ): boolean;\n\n  abstract max(...dates: Array<Date | string | number>): Date;\n\n  abstract setHours(date: Date | string | number, hours: number): Date;\n\n  abstract setMinutes(date: Date | string | number, minutes: number): Date;\n\n  abstract startOfDay(date: Date | string | number): Date;\n\n  abstract startOfMinute(date: Date | string | number): Date;\n\n  abstract startOfMonth(date: Date | string | number): Date;\n\n  abstract startOfWeek(\n    date: Date | string | number,\n    options?: { weekStartsOn?: number }\n  ): Date;\n\n  abstract getHours(date: Date | string | number): number;\n\n  abstract getMinutes(date: Date | string | number): number;\n}\n","export enum CalendarView {\n  Month = 'month',\n  Week = 'week',\n  Day = 'day'\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { CalendarView } from './calendar-view.enum';\nimport { addDaysWithExclusions } from './util';\n\n/**\n * Change the view date to the previous view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarPreviousView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Previous\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarPreviousView]'\n})\nexport class CalendarPreviousViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: CalendarView;\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Days to skip when going back by 1 day\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * The number of days in a week. If set will subtract this amount of days instead of 1 week\n   */\n  @Input() daysInWeek: number;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const subFn: any = {\n      day: this.dateAdapter.subDays,\n      week: this.dateAdapter.subWeeks,\n      month: this.dateAdapter.subMonths\n    }[this.view];\n\n    if (this.view === CalendarView.Day) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          -1,\n          this.excludeDays\n        )\n      );\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          -this.daysInWeek,\n          this.excludeDays\n        )\n      );\n    } else {\n      this.viewDateChange.emit(subFn(this.viewDate, 1));\n    }\n  }\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { CalendarView } from './calendar-view.enum';\nimport { addDaysWithExclusions } from './util';\n\n/**\n * Change the view date to the next view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarNextView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Next\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarNextView]'\n})\nexport class CalendarNextViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: CalendarView;\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Days to skip when going forward by 1 day\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * The number of days in a week. If set will add this amount of days instead of 1 week\n   */\n  @Input() daysInWeek: number;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const addFn: any = {\n      day: this.dateAdapter.addDays,\n      week: this.dateAdapter.addWeeks,\n      month: this.dateAdapter.addMonths\n    }[this.view];\n\n    if (this.view === CalendarView.Day) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          1,\n          this.excludeDays\n        )\n      );\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          this.daysInWeek,\n          this.excludeDays\n        )\n      );\n    } else {\n      this.viewDateChange.emit(addFn(this.viewDate, 1));\n    }\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\n/**\n * Change the view date to the current day. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarToday\n *  [(viewDate)]=\"viewDate\">\n *  Today\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarToday]'\n})\nexport class CalendarTodayDirective {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport { formatDate } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { getWeekViewPeriod } from './util';\n\n/**\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\n */\n@Injectable()\nexport class CalendarAngularDateFormatter\n  implements CalendarDateFormatterInterface {\n  constructor(protected dateAdapter: DateAdapter) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'EEEE', locale);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'd', locale);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'LLLL y', locale);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'EEEE', locale);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return formatDate(date, 'MMM d', locale);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    );\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      formatDate(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'h a', locale);\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'h a', locale);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'EEEE, MMMM d, y', locale);\n  }\n}\n","import { CalendarAngularDateFormatter } from './calendar-angular-date-formatter.provider';\nimport { Injectable } from '@angular/core';\n\n/**\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\n *\n * If you wish, you may override any of the defaults via angulars DI. For example:\n *\n * ```typescript\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n * import { formatDate } from '@angular/common';\n *\n * class CustomDateFormatter extends CalendarDateFormatter {\n *\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n *     return formatDate(date, 'EEE', locale); // use short week days\n *   }\n *\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *   provide: CalendarDateFormatter,\n *   useClass: CustomDateFormatter\n * }]\n * ```\n */\n@Injectable()\nexport class CalendarDateFormatter extends CalendarAngularDateFormatter {}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\n\n/**\n * This pipe is primarily for rendering the current view title. Example usage:\n * ```typescript\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\n * ```\n */\n@Pipe({\n  name: 'calendarDate'\n})\nexport class CalendarDatePipe implements PipeTransform {\n  constructor(\n    private dateFormatter: CalendarDateFormatter,\n    @Inject(LOCALE_ID) private locale: string\n  ) {}\n\n  transform(\n    date: Date,\n    method: string,\n    locale: string = this.locale,\n    weekStartsOn: number = 0,\n    excludeDays: number[] = [],\n    daysInWeek?: number\n  ): string {\n    return this.dateFormatter[method]({\n      date,\n      locale,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    });\n  }\n}\n","import { CalendarEvent } from 'calendar-utils';\n\n/**\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\n *\n * ```typescript\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\n *\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n *\n *   month(event: CalendarEvent): string {\n *     return `Custom prefix: ${event.title}`;\n *   }\n *\n * }\n *\n * // in your component\n * providers: [{\n *  provide: CalendarEventTitleFormatter,\n *  useClass: CustomEventTitleFormatter\n * }]\n * ```\n */\nexport class CalendarEventTitleFormatter {\n  /**\n   * The month view event title.\n   */\n  month(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The month view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  monthTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event title.\n   */\n  week(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  weekTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event title.\n   */\n  day(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  dayTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\n\n@Pipe({\n  name: 'calendarEventTitle'\n})\nexport class CalendarEventTitlePipe implements PipeTransform {\n  constructor(private calendarEventTitle: CalendarEventTitleFormatter) {}\n\n  transform(title: string, titleType: string, event: CalendarEvent): string {\n    return this.calendarEventTitle[titleType](event, title);\n  }\n}\n","import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nconst clickElements = new Set<HTMLElement>();\n\n@Directive({\n  selector: '[mwlClick]'\n})\nexport class ClickDirective implements OnInit, OnDestroy {\n  @Output('mwlClick') click: EventEmitter<MouseEvent> = new EventEmitter(); // tslint:disable-line\n\n  private removeListener: () => void;\n\n  constructor(\n    private renderer: Renderer2,\n    private elm: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) private document\n  ) {}\n\n  ngOnInit(): void {\n    clickElements.add(this.elm.nativeElement);\n    const eventName: string =\n      typeof window !== 'undefined' && typeof window['Hammer'] !== 'undefined'\n        ? 'tap'\n        : 'click';\n    this.removeListener = this.renderer.listen(\n      this.elm.nativeElement,\n      eventName,\n      event => {\n        // prevent child click events from firing on parent elements that also have click events\n        let nearestClickableParent: HTMLElement = event.target;\n        while (\n          !clickElements.has(nearestClickableParent) &&\n          nearestClickableParent !== this.document.body\n        ) {\n          nearestClickableParent = nearestClickableParent.parentElement;\n        }\n        const isThisClickableElement =\n          this.elm.nativeElement === nearestClickableParent;\n        if (isThisClickableElement) {\n          this.click.next(event);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.removeListener();\n    clickElements.delete(this.elm.nativeElement);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  GetMonthViewArgs,\n  MonthView,\n  GetWeekViewHeaderArgs,\n  WeekDay,\n  GetWeekViewArgs,\n  GetDayViewArgs,\n  DayView,\n  GetDayViewHourGridArgs,\n  DayViewHour,\n  WeekView,\n  getDayView,\n  getDayViewHourGrid,\n  getMonthView,\n  getWeekViewHeader,\n  getWeekView\n} from 'calendar-utils';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\n@Injectable()\nexport class CalendarUtils {\n  constructor(protected dateAdapter: DateAdapter) {}\n\n  getMonthView(args: GetMonthViewArgs): MonthView {\n    return getMonthView(this.dateAdapter, args);\n  }\n\n  getWeekViewHeader(args: GetWeekViewHeaderArgs): WeekDay[] {\n    return getWeekViewHeader(this.dateAdapter, args);\n  }\n\n  getWeekView(args: GetWeekViewArgs): WeekView {\n    return getWeekView(this.dateAdapter, args);\n  }\n\n  getDayView(args: GetDayViewArgs): DayView {\n    return getDayView(this.dateAdapter, args);\n  }\n\n  getDayViewHourGrid(args: GetDayViewHourGridArgs): DayViewHour[] {\n    return getDayViewHourGrid(this.dateAdapter, args);\n  }\n}\n","import { InjectionToken, Inject, Injectable } from '@angular/core';\nimport {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport { getWeekViewPeriod } from './util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\nexport const MOMENT: InjectionToken<string> = new InjectionToken('Moment');\n\n/**\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\n *\n * ```typescript\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\n * import moment from 'moment';\n *\n * // in your component\n * provide: [{\n *   provide: MOMENT, useValue: moment\n * }, {\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\n * }]\n *\n * ```\n */\n@Injectable()\nexport class CalendarMomentDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * @hidden\n   */\n  constructor(\n    @Inject(MOMENT) protected moment: any,\n    protected dateAdapter: DateAdapter\n  ) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('D');\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('MMMM YYYY');\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('MMM D');\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    );\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      this.moment(dateToFormat)\n        .locale(locale)\n        .format('MMM D' + (showYear ? ', YYYY' : ''));\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('ha');\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('ha');\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd, D MMMM, YYYY');\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport { Injectable } from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { getWeekViewPeriod } from './util';\n\n/**\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\n *\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\n */\n@Injectable()\nexport class CalendarNativeDateFormatter\n  implements CalendarDateFormatterInterface {\n  constructor(protected dateAdapter: DateAdapter) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'long'\n    }).format(date);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'short'\n    }).format(date);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    );\n\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      new Intl.DateTimeFormat(locale, {\n        day: 'numeric',\n        month: 'short',\n        year: showYear ? 'numeric' : undefined\n      }).format(dateToFormat);\n\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      weekday: 'long'\n    }).format(date);\n  }\n}\n","import { CalendarEvent } from 'calendar-utils';\n\nexport enum CalendarEventTimesChangedEventType {\n  Drag = 'drag',\n  Drop = 'drop',\n  Resize = 'resize'\n}\n\n/**\n * The output `$event` type when an event is resized or dragged and dropped.\n */\nexport interface CalendarEventTimesChangedEvent<MetaType = any> {\n  type: CalendarEventTimesChangedEventType;\n  event: CalendarEvent<MetaType>;\n  newStart: Date;\n  newEnd?: Date;\n  allDay?: boolean;\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalendarEventActionsComponent } from './calendar-event-actions.component';\nimport { CalendarEventTitleComponent } from './calendar-event-title.component';\nimport {\n  CalendarTooltipDirective,\n  CalendarTooltipWindowComponent\n} from './calendar-tooltip.directive';\nimport { CalendarPreviousViewDirective } from './calendar-previous-view.directive';\nimport { CalendarNextViewDirective } from './calendar-next-view.directive';\nimport { CalendarTodayDirective } from './calendar-today.directive';\nimport { CalendarDatePipe } from './calendar-date.pipe';\nimport { CalendarEventTitlePipe } from './calendar-event-title.pipe';\nimport { ClickDirective } from './click.directive';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\nimport { CalendarUtils } from './calendar-utils.provider';\n\nexport interface CalendarModuleConfig {\n  eventTitleFormatter?: Provider;\n  dateFormatter?: Provider;\n  utils?: Provider;\n}\n\nexport * from './calendar-event-title-formatter.provider';\nexport * from './calendar-moment-date-formatter.provider';\nexport * from './calendar-native-date-formatter.provider';\nexport * from './calendar-angular-date-formatter.provider';\nexport * from './calendar-date-formatter.provider';\nexport * from './calendar-utils.provider';\nexport * from './calendar-date-formatter.interface';\nexport * from './calendar-event-times-changed-event.interface';\nexport * from '../../date-adapters/date-adapter';\nexport * from './calendar-view.enum';\n\nexport {\n  CalendarEvent,\n  EventAction as CalendarEventAction,\n  DAYS_OF_WEEK,\n  ViewPeriod as CalendarViewPeriod\n} from 'calendar-utils';\n\n/**\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\n *\n * ```typescript\n * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalendarCommonModule.forRoot(),\n *     CalendarMonthModule\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  declarations: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    ClickDirective\n  ],\n  imports: [CommonModule],\n  exports: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    ClickDirective\n  ],\n  entryComponents: [CalendarTooltipWindowComponent]\n})\nexport class CalendarCommonModule {\n  static forRoot(\n    dateAdapter: Provider,\n    config: CalendarModuleConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: CalendarCommonModule,\n      providers: [\n        dateAdapter,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils\n      ]\n    };\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  WeekDay,\n  MonthView,\n  MonthViewDay,\n  ViewPeriod\n} from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  CalendarEventTimesChangedEvent,\n  CalendarEventTimesChangedEventType\n} from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByIndex } from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { PlacementArray } from 'positioning';\n\nexport interface CalendarMonthViewBeforeRenderEvent {\n  header: WeekDay[];\n  body: MonthViewDay[];\n  period: ViewPeriod;\n}\n\nexport interface CalendarMonthViewEventTimesChangedEvent<\n  EventMetaType = any,\n  DayMetaType = any\n> extends CalendarEventTimesChangedEvent<EventMetaType> {\n  day: MonthViewDay<DayMetaType>;\n}\n\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```typescript\n * <mwl-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-month-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-month-view',\n  template: `\n    <div class=\"cal-month-view\">\n      <mwl-calendar-month-view-header\n        [days]=\"columnHeaders\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n      >\n      </mwl-calendar-month-view-header>\n      <div class=\"cal-days\">\n        <div *ngFor=\"let rowIndex of view.rowOffsets; trackByIndex\">\n          <div class=\"cal-cell-row\">\n            <mwl-calendar-month-cell\n              *ngFor=\"\n                let day of (view.days\n                  | slice: rowIndex:rowIndex + view.totalDaysVisibleInWeek);\n                trackBy: trackByDate\n              \"\n              [ngClass]=\"day?.cssClass\"\n              [day]=\"day\"\n              [openDay]=\"openDay\"\n              [locale]=\"locale\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [customTemplate]=\"cellTemplate\"\n              (mwlClick)=\"dayClicked.emit({ day: day })\"\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\n              mwlDroppable\n              dragOverClass=\"cal-drag-over\"\n              (drop)=\"\n                eventDropped(\n                  day,\n                  $event.dropData.event,\n                  $event.dropData.draggedFrom\n                )\n              \"\n              (eventClicked)=\"eventClicked.emit({ event: $event.event })\"\n            >\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [isOpen]=\"openRowIndex === rowIndex\"\n            [events]=\"openDay?.events\"\n            [customTemplate]=\"openDayEventsTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            [eventActionsTemplate]=\"eventActionsTemplate\"\n            (eventClicked)=\"eventClicked.emit({ event: $event.event })\"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"\n              eventDropped(\n                openDay,\n                $event.dropData.event,\n                $event.dropData.draggedFrom\n              )\n            \"\n          >\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarMonthViewComponent\n  implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view.\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * Whether the events list for the day of the `viewDate` option is visible or not\n   */\n  @Input() activeDayIsOpen: boolean = false;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The start number of the week\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use to replace the day cell\n   */\n  @Input() cellTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for the slide down box of events for the active day\n   */\n  @Input() openDayEventsTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * An output that will be called before the view is rendered for the current month.\n   * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarMonthViewBeforeRenderEvent>();\n\n  /**\n   * Called when the day cell is clicked\n   */\n  @Output()\n  dayClicked = new EventEmitter<{\n    day: MonthViewDay;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an event is dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<\n    CalendarMonthViewEventTimesChangedEvent\n  >();\n\n  /**\n   * @hidden\n   */\n  columnHeaders: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: MonthView;\n\n  /**\n   * @hidden\n   */\n  openRowIndex: number;\n\n  /**\n   * @hidden\n   */\n  openDay: MonthViewDay;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  trackByIndex = trackByIndex;\n\n  /**\n   * @hidden\n   */\n  trackByDate = (index: number, day: MonthViewDay) => day.date.toISOString();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    private dateAdapter: DateAdapter\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays ||\n      changes.weekendDays\n    ) {\n      this.refreshBody();\n    }\n\n    if (\n      changes.activeDayIsOpen ||\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays\n    ) {\n      this.checkActiveDayIsOpen();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\n    this.view.days.forEach(day => {\n      if (isHighlighted && day.events.indexOf(event) > -1) {\n        day.backgroundColor =\n          (event.color && event.color.secondary) || '#D1E8FF';\n      } else {\n        delete day.backgroundColor;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(\n    droppedOn: MonthViewDay,\n    event: CalendarEvent,\n    draggedFrom?: MonthViewDay\n  ): void {\n    if (droppedOn !== draggedFrom) {\n      const year: number = this.dateAdapter.getYear(droppedOn.date);\n      const month: number = this.dateAdapter.getMonth(droppedOn.date);\n      const date: number = this.dateAdapter.getDate(droppedOn.date);\n      const newStart: Date = this.dateAdapter.setDate(\n        this.dateAdapter.setMonth(\n          this.dateAdapter.setYear(event.start, year),\n          month\n        ),\n        date\n      );\n      let newEnd: Date;\n      if (event.end) {\n        const secondsDiff: number = this.dateAdapter.differenceInSeconds(\n          newStart,\n          event.start\n        );\n        newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);\n      }\n      this.eventTimesChanged.emit({\n        event,\n        newStart,\n        newEnd,\n        day: droppedOn,\n        type: CalendarEventTimesChangedEventType.Drop\n      });\n    }\n  }\n\n  private refreshHeader(): void {\n    this.columnHeaders = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshBody(): void {\n    this.view = this.utils.getMonthView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private checkActiveDayIsOpen(): void {\n    if (this.activeDayIsOpen === true) {\n      this.openDay = this.view.days.find(day =>\n        this.dateAdapter.isSameDay(day.date, this.viewDate)\n      );\n      const index: number = this.view.days.indexOf(this.openDay);\n      this.openRowIndex =\n        Math.floor(index / this.view.totalDaysVisibleInWeek) *\n        this.view.totalDaysVisibleInWeek;\n    } else {\n      this.openRowIndex = null;\n      this.openDay = null;\n    }\n  }\n\n  private refreshAll(): void {\n    this.columnHeaders = null;\n    this.view = null;\n    this.refreshHeader();\n    this.refreshBody();\n    this.checkActiveDayIsOpen();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.columnHeaders && this.view) {\n      this.beforeViewRender.emit({\n        header: this.columnHeaders,\n        body: this.view.days,\n        period: this.view.period\n      });\n    }\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-month-view-header',\n  template: `\n    <ng-template #defaultTemplate let-days=\"days\" let-locale=\"locale\">\n      <div class=\"cal-cell-row cal-header\">\n        <div\n          class=\"cal-cell\"\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\"\n        >\n          {{ day.date | calendarDate: 'monthViewColumnHeader':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{ days: days, locale: locale }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarMonthViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\nimport { trackByEventId } from '../common/util';\nimport { PlacementArray } from 'positioning';\n\n@Component({\n  selector: 'mwl-calendar-month-cell',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-day=\"day\"\n      let-openDay=\"openDay\"\n      let-locale=\"locale\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-highlightDay=\"highlightDay\"\n      let-unhighlightDay=\"unhighlightDay\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n    >\n      <div class=\"cal-cell-top\">\n        <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\n          day.badgeTotal\n        }}</span>\n        <span class=\"cal-day-number\">{{\n          day.date | calendarDate: 'monthViewDayNumber':locale\n        }}</span>\n      </div>\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\n        <div\n          class=\"cal-event\"\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\n          [style.backgroundColor]=\"event.color?.primary\"\n          [ngClass]=\"event?.cssClass\"\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\n          [mwlCalendarTooltip]=\"\n            event.title | calendarEventTitle: 'monthTooltip':event\n          \"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipEvent]=\"event\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event, draggedFrom: day }\"\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\n          (mwlClick)=\"eventClicked.emit({ event: event })\"\n        ></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\"\n    >\n    </ng-template>\n  `,\n  host: {\n    class: 'cal-cell cal-day-cell',\n    '[class.cal-past]': 'day.isPast',\n    '[class.cal-today]': 'day.isToday',\n    '[class.cal-future]': 'day.isFuture',\n    '[class.cal-weekend]': 'day.isWeekend',\n    '[class.cal-in-month]': 'day.inMonth',\n    '[class.cal-out-month]': '!day.inMonth',\n    '[class.cal-has-events]': 'day.events.length > 0',\n    '[class.cal-open]': 'day === openDay',\n    '[class.cal-event-highlight]': '!!day.backgroundColor',\n    '[style.backgroundColor]': 'day.backgroundColor'\n  }\n})\nexport class CalendarMonthCellComponent {\n  @Input() day: MonthViewDay;\n\n  @Input() openDay: MonthViewDay;\n\n  @Input() locale: string;\n\n  @Input() tooltipPlacement: PlacementArray;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() highlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output() unhighlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\nimport { CalendarEvent } from 'calendar-utils';\nimport { trackByEventId } from '../common/util';\n\nexport const collapseAnimation: AnimationTriggerMetadata = trigger('collapse', [\n  transition('void => *', [\n    style({ height: 0, overflow: 'hidden' }),\n    animate('150ms', style({ height: '*' }))\n  ]),\n  transition('* => void', [\n    style({ height: '*', overflow: 'hidden' }),\n    animate('150ms', style({ height: 0 }))\n  ])\n]);\n\n@Component({\n  selector: 'mwl-calendar-open-day-events',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-events=\"events\"\n      let-eventClicked=\"eventClicked\"\n      let-isOpen=\"isOpen\"\n    >\n      <div class=\"cal-open-day-events\" [@collapse] *ngIf=\"isOpen\">\n        <div\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\n          [ngClass]=\"event?.cssClass\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event }\"\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\n        >\n          <span\n            class=\"cal-event\"\n            [style.backgroundColor]=\"event.color?.primary\"\n          >\n          </span>\n          &ngsp;\n          <mwl-calendar-event-title\n            [event]=\"event\"\n            [customTemplate]=\"eventTitleTemplate\"\n            view=\"month\"\n            (mwlClick)=\"eventClicked.emit({ event: event })\"\n          >\n          </mwl-calendar-event-title>\n          &ngsp;\n          <mwl-calendar-event-actions\n            [event]=\"event\"\n            [customTemplate]=\"eventActionsTemplate\"\n          >\n          </mwl-calendar-event-actions>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        events: events,\n        eventClicked: eventClicked,\n        isOpen: isOpen\n      }\"\n    >\n    </ng-template>\n  `,\n  animations: [collapseAnimation]\n})\nexport class CalendarOpenDayEventsComponent {\n  @Input() isOpen: boolean = false;\n\n  @Input() events: CalendarEvent[];\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarMonthViewComponent } from './calendar-month-view.component';\nimport { CalendarMonthViewHeaderComponent } from './calendar-month-view-header.component';\nimport { CalendarMonthCellComponent } from './calendar-month-cell.component';\nimport { CalendarOpenDayEventsComponent } from './calendar-open-day-events.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarMonthViewComponent,\n  CalendarMonthViewBeforeRenderEvent,\n  CalendarMonthViewEventTimesChangedEvent\n} from './calendar-month-view.component';\nexport { MonthViewDay as CalendarMonthViewDay } from 'calendar-utils';\nexport { collapseAnimation } from './calendar-open-day-events.component';\n\n@NgModule({\n  imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\n  declarations: [\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ],\n  exports: [\n    DragAndDropModule,\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ]\n})\nexport class CalendarMonthModule {}\n","import { isInside } from './util';\n\nconst DRAG_THRESHOLD = 1;\n\nexport class CalendarDragHelper {\n  private readonly startPosition: ClientRect;\n\n  constructor(\n    private dragContainerElement: HTMLElement,\n    draggableElement: HTMLElement\n  ) {\n    this.startPosition = draggableElement.getBoundingClientRect();\n  }\n\n  validateDrag({\n    x,\n    y,\n    snapDraggedEvents,\n    dragAlreadyMoved\n  }: {\n    x: number;\n    y: number;\n    snapDraggedEvents: boolean;\n    dragAlreadyMoved: boolean;\n  }): boolean {\n    const isWithinThreshold =\n      Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;\n\n    if (snapDraggedEvents) {\n      const newRect: ClientRect = Object.assign({}, this.startPosition, {\n        left: this.startPosition.left + x,\n        right: this.startPosition.right + x,\n        top: this.startPosition.top + y,\n        bottom: this.startPosition.bottom + y\n      });\n\n      return (\n        (isWithinThreshold || dragAlreadyMoved) &&\n        isInside(this.dragContainerElement.getBoundingClientRect(), newRect)\n      );\n    } else {\n      return isWithinThreshold || dragAlreadyMoved;\n    }\n  }\n}\n","import { isInside } from './util';\n\nexport class CalendarResizeHelper {\n  constructor(\n    private resizeContainerElement: HTMLElement,\n    private minWidth?: number\n  ) {}\n\n  validateResize({ rectangle }: { rectangle: ClientRect }): boolean {\n    if (\n      this.minWidth &&\n      Math.ceil(rectangle.width) < Math.ceil(this.minWidth)\n    ) {\n      return false;\n    }\n\n    return isInside(\n      this.resizeContainerElement.getBoundingClientRect(),\n      rectangle\n    );\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnChanges,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  WeekDay,\n  CalendarEvent,\n  WeekViewAllDayEvent,\n  WeekView,\n  ViewPeriod,\n  WeekViewHourColumn,\n  DayViewEvent,\n  DayViewHourSegment,\n  DayViewHour\n} from 'calendar-utils';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport {\n  CalendarEventTimesChangedEvent,\n  CalendarEventTimesChangedEventType\n} from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport {\n  validateEvents,\n  trackByIndex,\n  roundToNearest,\n  trackByWeekDayHeaderDate,\n  trackByHourSegment,\n  trackByHour,\n  getMinutesMoved,\n  getDefaultEventEnd,\n  getMinimumEventHeightInMinutes,\n  addDaysWithExclusions,\n  trackByDayOrWeekEvent,\n  isDraggedWithinPeriod,\n  shouldFireDroppedEvent,\n  getWeekViewPeriod\n} from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport {\n  DragEndEvent,\n  DropEvent,\n  DragMoveEvent\n} from 'angular-draggable-droppable';\nimport { PlacementArray } from 'positioning';\n\nexport interface WeekViewAllDayEventResize {\n  originalOffset: number;\n  originalSpan: number;\n  edge: string;\n}\n\nexport interface CalendarWeekViewBeforeRenderEvent extends WeekView {\n  header: WeekDay[];\n}\n\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * <mwl-calendar-week-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-week-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-week-view',\n  template: `\n    <div class=\"cal-week-view\">\n      <mwl-calendar-week-view-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\n        (eventDropped)=\"\n          eventDropped({ dropData: $event }, $event.newStart, true)\n        \"\n      >\n      </mwl-calendar-week-view-header>\n      <div\n        class=\"cal-all-day-events\"\n        #allDayEventsContainer\n        *ngIf=\"view.allDayEventRows.length > 0\"\n        mwlDroppable\n        (dragEnter)=\"eventDragEnter = eventDragEnter + 1\"\n        (dragLeave)=\"eventDragEnter = eventDragEnter - 1\"\n      >\n        <div class=\"cal-day-columns\">\n          <div\n            class=\"cal-time-label-column\"\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\n          ></div>\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"eventDropped($event, day.date, true)\"\n          ></div>\n        </div>\n        <div\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackByIndex\"\n          #eventRowContainer\n          class=\"cal-events-row\"\n        >\n          <div\n            *ngFor=\"\n              let allDayEvent of eventRow.row;\n              trackBy: trackByDayOrWeekEvent\n            \"\n            #event\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\n            \"\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\n            [ngClass]=\"allDayEvent.event?.cssClass\"\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\n            [style.marginLeft.%]=\"(100 / days.length) * allDayEvent.offset\"\n            mwlResizable\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\n            \"\n            (resizing)=\"\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\n            \"\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\n            mwlDraggable\n            dragActiveClass=\"cal-drag-active\"\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\n            [dragAxis]=\"{\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\n              y:\n                !snapDraggedEvents &&\n                allDayEvent.event.draggable &&\n                allDayEventResizes.size === 0\n            }\"\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\n            [validateDrag]=\"validateDrag\"\n            (dragPointerDown)=\"dragStarted(eventRowContainer, event)\"\n            (dragging)=\"allDayEventDragMove()\"\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\n          >\n            <div\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\n              *ngIf=\"\n                allDayEvent.event?.resizable?.beforeStart &&\n                !allDayEvent.startsBeforeWeek\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ left: true }\"\n            ></div>\n            <mwl-calendar-week-view-event\n              [weekEvent]=\"allDayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              [eventActionsTemplate]=\"eventActionsTemplate\"\n              (eventClicked)=\"eventClicked.emit({ event: allDayEvent.event })\"\n            >\n            </mwl-calendar-week-view-event>\n            <div\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\n              *ngIf=\"\n                allDayEvent.event?.resizable?.afterEnd &&\n                !allDayEvent.endsAfterWeek\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ right: true }\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"cal-time-events\"\n        mwlDroppable\n        (dragEnter)=\"eventDragEnter = eventDragEnter + 1\"\n        (dragLeave)=\"eventDragEnter = eventDragEnter - 1\"\n      >\n        <div class=\"cal-time-label-column\" *ngIf=\"view.hourColumns.length > 0\">\n          <div\n            *ngFor=\"\n              let hour of view.hourColumns[0].hours;\n              trackBy: trackByHour;\n              let odd = odd\n            \"\n            class=\"cal-hour\"\n            [class.cal-hour-odd]=\"odd\"\n          >\n            <mwl-calendar-week-view-hour-segment\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\n              [style.height.px]=\"hourSegmentHeight\"\n              [segment]=\"segment\"\n              [segmentHeight]=\"hourSegmentHeight\"\n              [locale]=\"locale\"\n              [customTemplate]=\"hourSegmentTemplate\"\n              [isTimeLabel]=\"true\"\n            >\n            </mwl-calendar-week-view-hour-segment>\n          </div>\n        </div>\n        <div\n          class=\"cal-day-columns\"\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\n          #dayColumns\n        >\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\n          >\n            <div\n              *ngFor=\"\n                let timeEvent of column.events;\n                trackBy: trackByDayOrWeekEvent\n              \"\n              #event\n              class=\"cal-event-container\"\n              [class.cal-draggable]=\"\n                timeEvent.event.draggable && timeEventResizes.size === 0\n              \"\n              [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\n              [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\n              [ngClass]=\"timeEvent.event.cssClass\"\n              [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\n              [style.top.px]=\"timeEvent.top\"\n              [style.height.px]=\"timeEvent.height\"\n              [style.left.%]=\"timeEvent.left\"\n              [style.width.%]=\"timeEvent.width\"\n              mwlResizable\n              [resizeSnapGrid]=\"{\n                left: dayColumnWidth,\n                right: dayColumnWidth,\n                top: eventSnapSize || hourSegmentHeight,\n                bottom: eventSnapSize || hourSegmentHeight\n              }\"\n              [validateResize]=\"validateResize\"\n              [allowNegativeResizes]=\"true\"\n              (resizeStart)=\"\n                timeEventResizeStarted(dayColumns, timeEvent, $event)\n              \"\n              (resizing)=\"timeEventResizing(timeEvent, $event)\"\n              (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\n              mwlDraggable\n              dragActiveClass=\"cal-drag-active\"\n              [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\n              [dragAxis]=\"{\n                x: timeEvent.event.draggable && timeEventResizes.size === 0,\n                y: timeEvent.event.draggable && timeEventResizes.size === 0\n              }\"\n              [dragSnapGrid]=\"\n                snapDraggedEvents\n                  ? { x: dayColumnWidth, y: eventSnapSize || hourSegmentHeight }\n                  : {}\n              \"\n              [ghostDragEnabled]=\"!snapDraggedEvents\"\n              [validateDrag]=\"validateDrag\"\n              (dragPointerDown)=\"dragStarted(dayColumns, event, timeEvent)\"\n              (dragging)=\"dragMove(timeEvent, $event)\"\n              (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\n            >\n              <div\n                class=\"cal-resize-handle cal-resize-handle-before-start\"\n                *ngIf=\"\n                  timeEvent.event?.resizable?.beforeStart &&\n                  !timeEvent.startsBeforeDay\n                \"\n                mwlResizeHandle\n                [resizeEdges]=\"{\n                  left: true,\n                  top: true\n                }\"\n              ></div>\n              <mwl-calendar-week-view-event\n                [weekEvent]=\"timeEvent\"\n                [tooltipPlacement]=\"tooltipPlacement\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                [tooltipAppendToBody]=\"tooltipAppendToBody\"\n                [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\n                [customTemplate]=\"eventTemplate\"\n                [eventTitleTemplate]=\"eventTitleTemplate\"\n                [eventActionsTemplate]=\"eventActionsTemplate\"\n                (eventClicked)=\"eventClicked.emit({ event: timeEvent.event })\"\n              >\n              </mwl-calendar-week-view-event>\n              <div\n                class=\"cal-resize-handle cal-resize-handle-after-end\"\n                *ngIf=\"\n                  timeEvent.event?.resizable?.afterEnd &&\n                  !timeEvent.endsAfterDay\n                \"\n                mwlResizeHandle\n                [resizeEdges]=\"{\n                  right: true,\n                  bottom: true\n                }\"\n              ></div>\n            </div>\n\n            <div\n              *ngFor=\"\n                let hour of column.hours;\n                trackBy: trackByHour;\n                let odd = odd\n              \"\n              class=\"cal-hour\"\n              [class.cal-hour-odd]=\"odd\"\n            >\n              <mwl-calendar-week-view-hour-segment\n                *ngFor=\"\n                  let segment of hour.segments;\n                  trackBy: trackByHourSegment\n                \"\n                [style.height.px]=\"hourSegmentHeight\"\n                [segment]=\"segment\"\n                [segmentHeight]=\"hourSegmentHeight\"\n                [locale]=\"locale\"\n                [customTemplate]=\"hourSegmentTemplate\"\n                (mwlClick)=\"hourSegmentClicked.emit({ date: segment.date })\"\n                mwlDroppable\n                [dragOverClass]=\"\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\n                \"\n                dragActiveClass=\"cal-drag-active\"\n                (drop)=\"eventDropped($event, segment.date, false)\"\n              >\n              </mwl-calendar-week-view-hour-segment>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarWeekViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The start number of the week\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for week view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * The precision to display events.\n   * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n   */\n  @Input() precision: 'days' | 'minutes' = 'days';\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * Whether to snap events to a grid when dragging\n   */\n  @Input() snapDraggedEvents: boolean = true;\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input() hourSegments: number = 2;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input() hourSegmentHeight: number = 30;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input() dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input() dayEndMinute: number = 59;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input() hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * The grid size to snap resizing and dragging of hourly events to\n   */\n  @Input() eventSnapSize: number;\n\n  /**\n   * A custom template to use for the all day events label text\n   */\n  @Input() allDayEventsLabelTemplate: TemplateRef<any>;\n\n  /**\n   * The number of days in a week. Can be used to create a shorter or longer week view.\n   * The first day of the week will always be the `viewDate`\n   */\n  @Input() daysInWeek: number;\n\n  /**\n   * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\n   */\n  @Output()\n  dayHeaderClicked = new EventEmitter<{\n    day: WeekDay;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current week.\n   * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarWeekViewBeforeRenderEvent>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output()\n  hourSegmentClicked = new EventEmitter<{\n    date: Date;\n  }>();\n\n  /**\n   * @hidden\n   */\n  days: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: WeekView;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  allDayEventResizes: Map<\n    WeekViewAllDayEvent,\n    WeekViewAllDayEventResize\n  > = new Map();\n\n  /**\n   * @hidden\n   */\n  timeEventResizes: Map<CalendarEvent, ResizeEvent> = new Map();\n\n  /**\n   * @hidden\n   */\n  eventDragEnter = 0;\n\n  /**\n   * @hidden\n   */\n  dragActive = false;\n\n  /**\n   * @hidden\n   */\n  dragAlreadyMoved = false;\n\n  /**\n   * @hidden\n   */\n  validateDrag: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  dayColumnWidth: number;\n\n  /**\n   * @hidden\n   */\n  calendarId = Symbol('angular calendar week view id');\n\n  /**\n   * @hidden\n   */\n  trackByIndex = trackByIndex;\n\n  /**\n   * @hidden\n   */\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n\n  /**\n   * @hidden\n   */\n  trackByHourSegment = trackByHourSegment;\n\n  /**\n   * @hidden\n   */\n  trackByHour = trackByHour;\n\n  /**\n   * @hidden\n   */\n  trackByDayOrWeekEvent = trackByDayOrWeekEvent;\n\n  /**\n   * @hidden\n   */\n  trackByHourColumn = (index: number, column: WeekViewHourColumn) =>\n    column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    private dateAdapter: DateAdapter\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (\n      changes.viewDate ||\n      changes.excludeDays ||\n      changes.weekendDays ||\n      changes.daysInWeek\n    ) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.hourSegments ||\n      changes.weekStartsOn ||\n      changes.weekendDays ||\n      changes.excludeDays ||\n      changes.hourSegmentHeight ||\n      changes.events ||\n      changes.daysInWeek\n    ) {\n      this.refreshBody();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  private resizeStarted(eventsContainer: HTMLElement, minWidth?: number) {\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      eventsContainer,\n      minWidth\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizeStarted(\n    eventsContainer: HTMLElement,\n    timeEvent: DayViewEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\n    this.resizeStarted(eventsContainer);\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizing(timeEvent: DayViewEvent, resizeEvent: ResizeEvent) {\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\n    const adjustedEvents = new Map<CalendarEvent, CalendarEvent>();\n\n    const tempEvents = [...this.events];\n\n    this.timeEventResizes.forEach((lastResizeEvent, event) => {\n      const newEventDates = this.getTimeEventResizedDates(\n        event,\n        lastResizeEvent\n      );\n      const adjustedEvent = { ...event, ...newEventDates };\n      adjustedEvents.set(adjustedEvent, event);\n      const eventIndex = tempEvents.indexOf(event);\n      tempEvents[eventIndex] = adjustedEvent;\n    });\n\n    this.restoreOriginalEvents(tempEvents, adjustedEvents);\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizeEnded(timeEvent: DayViewEvent) {\n    this.view = this.getWeekView(this.events);\n    const lastResizeEvent = this.timeEventResizes.get(timeEvent.event);\n    if (lastResizeEvent) {\n      this.timeEventResizes.delete(timeEvent.event);\n      const newEventDates = this.getTimeEventResizedDates(\n        timeEvent.event,\n        lastResizeEvent\n      );\n      this.eventTimesChanged.emit({\n        newStart: newEventDates.start,\n        newEnd: newEventDates.end,\n        event: timeEvent.event,\n        type: CalendarEventTimesChangedEventType.Resize\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizeStarted(\n    allDayEventsContainer: HTMLElement,\n    allDayEvent: WeekViewAllDayEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.allDayEventResizes.set(allDayEvent, {\n      originalOffset: allDayEvent.offset,\n      originalSpan: allDayEvent.span,\n      edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n    });\n    this.resizeStarted(\n      allDayEventsContainer,\n      this.getDayColumnWidth(allDayEventsContainer)\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizing(\n    allDayEvent: WeekViewAllDayEvent,\n    resizeEvent: ResizeEvent,\n    dayWidth: number\n  ): void {\n    const currentResize: WeekViewAllDayEventResize = this.allDayEventResizes.get(\n      allDayEvent\n    );\n\n    if (typeof resizeEvent.edges.left !== 'undefined') {\n      const diff: number = Math.round(+resizeEvent.edges.left / dayWidth);\n      allDayEvent.offset = currentResize.originalOffset + diff;\n      allDayEvent.span = currentResize.originalSpan - diff;\n    } else if (typeof resizeEvent.edges.right !== 'undefined') {\n      const diff: number = Math.round(+resizeEvent.edges.right / dayWidth);\n      allDayEvent.span = currentResize.originalSpan + diff;\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizeEnded(allDayEvent: WeekViewAllDayEvent): void {\n    const currentResize: WeekViewAllDayEventResize = this.allDayEventResizes.get(\n      allDayEvent\n    );\n\n    if (currentResize) {\n      const allDayEventResizingBeforeStart = currentResize.edge === 'left';\n      let daysDiff: number;\n      if (allDayEventResizingBeforeStart) {\n        daysDiff = allDayEvent.offset - currentResize.originalOffset;\n      } else {\n        daysDiff = allDayEvent.span - currentResize.originalSpan;\n      }\n\n      allDayEvent.offset = currentResize.originalOffset;\n      allDayEvent.span = currentResize.originalSpan;\n\n      let newStart: Date = allDayEvent.event.start;\n      let newEnd: Date = allDayEvent.event.end || allDayEvent.event.start;\n      if (allDayEventResizingBeforeStart) {\n        newStart = this.dateAdapter.addDays(newStart, daysDiff);\n      } else {\n        newEnd = this.dateAdapter.addDays(newEnd, daysDiff);\n      }\n\n      this.eventTimesChanged.emit({\n        newStart,\n        newEnd,\n        event: allDayEvent.event,\n        type: CalendarEventTimesChangedEventType.Resize\n      });\n      this.allDayEventResizes.delete(allDayEvent);\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(\n    dropEvent: DropEvent<{ event?: CalendarEvent; calendarId?: symbol }>,\n    date: Date,\n    allDay: boolean\n  ): void {\n    if (shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId)) {\n      this.eventTimesChanged.emit({\n        type: CalendarEventTimesChangedEventType.Drop,\n        event: dropEvent.dropData.event,\n        newStart: date,\n        allDay\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  dragStarted(\n    eventsContainer: HTMLElement,\n    event: HTMLElement,\n    dayEvent?: DayViewEvent\n  ): void {\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      eventsContainer,\n      event\n    );\n    this.validateDrag = ({ x, y }) =>\n      this.allDayEventResizes.size === 0 &&\n      this.timeEventResizes.size === 0 &&\n      dragHelper.validateDrag({\n        x,\n        y,\n        snapDraggedEvents: this.snapDraggedEvents,\n        dragAlreadyMoved: this.dragAlreadyMoved\n      });\n    this.dragActive = true;\n    this.dragAlreadyMoved = false;\n    this.eventDragEnter = 0;\n    if (!this.snapDraggedEvents && dayEvent) {\n      this.view.hourColumns.forEach(column => {\n        const linkedEvent = column.events.find(\n          columnEvent =>\n            columnEvent.event === dayEvent.event && columnEvent !== dayEvent\n        );\n        // hide any linked events while dragging\n        if (linkedEvent) {\n          linkedEvent.width = 0;\n          linkedEvent.height = 0;\n        }\n      });\n    }\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  dragMove(dayEvent: DayViewEvent, dragEvent: DragMoveEvent) {\n    if (this.snapDraggedEvents) {\n      const newEventTimes = this.getDragMovedEventTimes(\n        dayEvent,\n        dragEvent,\n        this.dayColumnWidth,\n        true\n      );\n      const originalEvent = dayEvent.event;\n      const adjustedEvent = { ...originalEvent, ...newEventTimes };\n      const tempEvents = this.events.map(event => {\n        if (event === originalEvent) {\n          return adjustedEvent;\n        }\n        return event;\n      });\n      this.restoreOriginalEvents(\n        tempEvents,\n        new Map([[adjustedEvent, originalEvent]])\n      );\n    }\n    this.dragAlreadyMoved = true;\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventDragMove() {\n    this.dragAlreadyMoved = true;\n  }\n\n  /**\n   * @hidden\n   */\n  dragEnded(\n    weekEvent: WeekViewAllDayEvent | DayViewEvent,\n    dragEndEvent: DragEndEvent,\n    dayWidth: number,\n    useY = false\n  ): void {\n    this.view = this.getWeekView(this.events);\n    this.dragActive = false;\n    const { start, end } = this.getDragMovedEventTimes(\n      weekEvent,\n      dragEndEvent,\n      dayWidth,\n      useY\n    );\n    if (\n      this.eventDragEnter > 0 &&\n      isDraggedWithinPeriod(start, end, this.view.period)\n    ) {\n      this.eventTimesChanged.emit({\n        newStart: start,\n        newEnd: end,\n        event: weekEvent.event,\n        type: CalendarEventTimesChangedEventType.Drag,\n        allDay: !useY\n      });\n    }\n  }\n\n  private refreshHeader(): void {\n    this.days = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays,\n      ...getWeekViewPeriod(\n        this.dateAdapter,\n        this.viewDate,\n        this.weekStartsOn,\n        this.excludeDays,\n        this.daysInWeek\n      )\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshBody(): void {\n    this.view = this.getWeekView(this.events);\n    this.emitBeforeViewRender();\n  }\n\n  private refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.days && this.view) {\n      this.beforeViewRender.emit({\n        header: this.days,\n        ...this.view\n      });\n    }\n  }\n\n  private getWeekView(events: CalendarEvent[]) {\n    return this.utils.getWeekView({\n      events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      precision: this.precision,\n      absolutePositionedEvents: true,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      },\n      segmentHeight: this.hourSegmentHeight,\n      weekendDays: this.weekendDays,\n      ...getWeekViewPeriod(\n        this.dateAdapter,\n        this.viewDate,\n        this.weekStartsOn,\n        this.excludeDays,\n        this.daysInWeek\n      )\n    });\n  }\n\n  private getDragMovedEventTimes(\n    weekEvent: WeekViewAllDayEvent | DayViewEvent,\n    dragEndEvent: DragEndEvent | DragMoveEvent,\n    dayWidth: number,\n    useY: boolean\n  ) {\n    const daysDragged = roundToNearest(dragEndEvent.x, dayWidth) / dayWidth;\n    const minutesMoved = useY\n      ? getMinutesMoved(\n          dragEndEvent.y,\n          this.hourSegments,\n          this.hourSegmentHeight,\n          this.eventSnapSize\n        )\n      : 0;\n\n    const start = this.dateAdapter.addMinutes(\n      this.dateAdapter.addDays(weekEvent.event.start, daysDragged),\n      minutesMoved\n    );\n    let end: Date;\n    if (weekEvent.event.end) {\n      end = this.dateAdapter.addMinutes(\n        this.dateAdapter.addDays(weekEvent.event.end, daysDragged),\n        minutesMoved\n      );\n    }\n\n    return { start, end };\n  }\n\n  private restoreOriginalEvents(\n    tempEvents: CalendarEvent[],\n    adjustedEvents: Map<CalendarEvent, CalendarEvent>\n  ) {\n    this.view = this.getWeekView(tempEvents);\n    const adjustedEventsArray = tempEvents.filter(event =>\n      adjustedEvents.has(event)\n    );\n    this.view.hourColumns.forEach(column => {\n      adjustedEventsArray.forEach(adjustedEvent => {\n        const originalEvent = adjustedEvents.get(adjustedEvent);\n        const existingColumnEvent = column.events.find(\n          columnEvent => columnEvent.event === adjustedEvent\n        );\n        if (existingColumnEvent) {\n          // restore the original event so trackBy kicks in and the dom isn't changed\n          existingColumnEvent.event = originalEvent;\n        } else {\n          // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\n          column.events.push({\n            event: originalEvent,\n            left: 0,\n            top: 0,\n            height: 0,\n            width: 0,\n            startsBeforeDay: false,\n            endsAfterDay: false\n          });\n        }\n      });\n    });\n    adjustedEvents.clear();\n  }\n\n  private getTimeEventResizedDates(\n    calendarEvent: CalendarEvent,\n    resizeEvent: ResizeEvent\n  ) {\n    const minimumEventHeight = getMinimumEventHeightInMinutes(\n      this.hourSegments,\n      this.hourSegmentHeight\n    );\n    const newEventDates = {\n      start: calendarEvent.start,\n      end: getDefaultEventEnd(\n        this.dateAdapter,\n        calendarEvent,\n        minimumEventHeight\n      )\n    };\n    const { end, ...eventWithoutEnd } = calendarEvent;\n    const smallestResizes = {\n      start: this.dateAdapter.addMinutes(\n        newEventDates.end,\n        minimumEventHeight * -1\n      ),\n      end: getDefaultEventEnd(\n        this.dateAdapter,\n        eventWithoutEnd,\n        minimumEventHeight\n      )\n    };\n\n    if (typeof resizeEvent.edges.left !== 'undefined') {\n      const daysDiff = Math.round(\n        +resizeEvent.edges.left / this.dayColumnWidth\n      );\n      const newStart = this.dateAdapter.addDays(newEventDates.start, daysDiff);\n      if (newStart < smallestResizes.start) {\n        newEventDates.start = newStart;\n      } else {\n        newEventDates.start = smallestResizes.start;\n      }\n    } else if (typeof resizeEvent.edges.right !== 'undefined') {\n      const daysDiff = Math.round(\n        +resizeEvent.edges.right / this.dayColumnWidth\n      );\n      const newEnd = this.dateAdapter.addDays(newEventDates.end, daysDiff);\n      if (newEnd > smallestResizes.end) {\n        newEventDates.end = newEnd;\n      } else {\n        newEventDates.end = smallestResizes.end;\n      }\n    }\n\n    if (typeof resizeEvent.edges.top !== 'undefined') {\n      const minutesMoved = getMinutesMoved(\n        resizeEvent.edges.top as number,\n        this.hourSegments,\n        this.hourSegmentHeight,\n        this.eventSnapSize\n      );\n      const newStart = this.dateAdapter.addMinutes(\n        newEventDates.start,\n        minutesMoved\n      );\n      if (newStart < smallestResizes.start) {\n        newEventDates.start = newStart;\n      } else {\n        newEventDates.start = smallestResizes.start;\n      }\n    } else if (typeof resizeEvent.edges.bottom !== 'undefined') {\n      const minutesMoved = getMinutesMoved(\n        resizeEvent.edges.bottom as number,\n        this.hourSegments,\n        this.hourSegmentHeight,\n        this.eventSnapSize\n      );\n      const newEnd = this.dateAdapter.addMinutes(\n        newEventDates.end,\n        minutesMoved\n      );\n      if (newEnd > smallestResizes.end) {\n        newEventDates.end = newEnd;\n      } else {\n        newEventDates.end = smallestResizes.end;\n      }\n    }\n\n    return newEventDates;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarEvent, WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-week-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-dayHeaderClicked=\"dayHeaderClicked\"\n      let-eventDropped=\"eventDropped\"\n    >\n      <div class=\"cal-day-headers\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\"\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day })\"\n          mwlDroppable\n          dragOverClass=\"cal-drag-over\"\n          (drop)=\"\n            eventDropped.emit({\n              event: $event.dropData.event,\n              newStart: day.date\n            })\n          \"\n        >\n          <b>{{ day.date | calendarDate: 'weekViewColumnHeader':locale }}</b\n          ><br />\n          <span>{{\n            day.date | calendarDate: 'weekViewColumnSubHeader':locale\n          }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        days: days,\n        locale: locale,\n        dayHeaderClicked: dayHeaderClicked,\n        eventDropped: eventDropped\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Output()\n  dayHeaderClicked: EventEmitter<{ day: WeekDay }> = new EventEmitter<{\n    day: WeekDay;\n  }>();\n\n  @Output()\n  eventDropped: EventEmitter<{\n    event: CalendarEvent;\n    newStart: Date;\n  }> = new EventEmitter<{ event: CalendarEvent; newStart: Date }>();\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { WeekViewAllDayEvent, DayViewEvent } from 'calendar-utils';\nimport { PlacementArray } from 'positioning';\n\n@Component({\n  selector: 'mwl-calendar-week-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-weekEvent=\"weekEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n      let-tooltipDisabled=\"tooltipDisabled\"\n    >\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"weekEvent.event.color?.secondary\"\n        [style.borderColor]=\"weekEvent.event.color?.primary\"\n        [mwlCalendarTooltip]=\"\n          !tooltipDisabled\n            ? (weekEvent.event.title\n              | calendarEventTitle: 'weekTooltip':weekEvent.event)\n            : ''\n        \"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"weekEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\n        (mwlClick)=\"eventClicked.emit()\"\n      >\n        <mwl-calendar-event-actions\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventActionsTemplate\"\n        >\n        </mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"week\"\n        >\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDisabled: tooltipDisabled\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewEventComponent {\n  @Input() weekEvent: WeekViewAllDayEvent | DayViewEvent;\n\n  @Input() tooltipPlacement: PlacementArray;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() tooltipDisabled: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { WeekViewHourColumn } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-week-view-hour-segment',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\"\n      let-segmentHeight=\"segmentHeight\"\n      let-isTimeLabel=\"isTimeLabel\"\n    >\n      <div\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\"\n      >\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\n          {{ segment.date | calendarDate: 'weekViewHour':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale,\n        segmentHeight: segmentHeight,\n        isTimeLabel: isTimeLabel\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewHourSegmentComponent {\n  @Input() segment: WeekViewHourColumn;\n\n  @Input() segmentHeight: number;\n\n  @Input() locale: string;\n\n  @Input() isTimeLabel: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarWeekViewComponent } from './calendar-week-view.component';\nimport { CalendarWeekViewHeaderComponent } from './calendar-week-view-header.component';\nimport { CalendarWeekViewEventComponent } from './calendar-week-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\nimport { CalendarWeekViewHourSegmentComponent } from './calendar-week-view-hour-segment.component';\n\nexport {\n  CalendarWeekViewComponent,\n  CalendarWeekViewBeforeRenderEvent\n} from './calendar-week-view.component';\nexport {\n  WeekViewAllDayEvent as CalendarWeekViewAllDayEvent,\n  WeekViewAllDayEventRow as CalendarWeekViewAllDayEventRow,\n  GetWeekViewArgs as CalendarGetWeekViewArgs\n} from 'calendar-utils';\nexport { getWeekViewPeriod } from '../common/util';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule\n  ],\n  declarations: [\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent,\n    CalendarWeekViewHourSegmentComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent,\n    CalendarWeekViewHourSegmentComponent\n  ]\n})\nexport class CalendarWeekModule {}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  LOCALE_ID,\n  Inject,\n  OnInit,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  DayView,\n  DayViewHour,\n  DayViewHourSegment,\n  DayViewEvent,\n  ViewPeriod,\n  WeekViewAllDayEvent\n} from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport {\n  CalendarEventTimesChangedEvent,\n  CalendarEventTimesChangedEventType\n} from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport {\n  validateEvents,\n  trackByEventId,\n  trackByHour,\n  trackByHourSegment,\n  getMinutesMoved,\n  getDefaultEventEnd,\n  getMinimumEventHeightInMinutes,\n  trackByDayOrWeekEvent,\n  isDraggedWithinPeriod,\n  shouldFireDroppedEvent\n} from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { DragEndEvent } from 'angular-draggable-droppable';\nimport { PlacementArray } from 'positioning';\n\nexport interface CalendarDayViewBeforeRenderEvent {\n  body: {\n    hourGrid: DayViewHour[];\n    allDayEvents: CalendarEvent[];\n  };\n  period: ViewPeriod;\n}\n\n/**\n * @hidden\n */\nexport interface DayViewEventResize {\n  originalTop: number;\n  originalHeight: number;\n  edge: string;\n}\n\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * <mwl-calendar-day-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-day-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-day-view',\n  template: `\n    <div class=\"cal-day-view\">\n      <div\n        class=\"cal-all-day-events\"\n        mwlDroppable\n        dragOverClass=\"cal-drag-over\"\n        dragActiveClass=\"cal-drag-active\"\n        (drop)=\"eventDropped($event, view.period.start, true)\"\n      >\n        <mwl-calendar-day-view-event\n          *ngFor=\"let event of view.allDayEvents; trackBy: trackByEventId\"\n          [ngClass]=\"event.cssClass\"\n          [dayEvent]=\"{ event: event }\"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          [customTemplate]=\"eventTemplate\"\n          [eventTitleTemplate]=\"eventTitleTemplate\"\n          [eventActionsTemplate]=\"eventActionsTemplate\"\n          (eventClicked)=\"eventClicked.emit({ event: event })\"\n          [class.cal-draggable]=\"!snapDraggedEvents && event.draggable\"\n          mwlDraggable\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event, calendarId: calendarId }\"\n          [dragAxis]=\"{\n            x: !snapDraggedEvents && event.draggable,\n            y: !snapDraggedEvents && event.draggable\n          }\"\n        >\n        </mwl-calendar-day-view-event>\n      </div>\n      <div\n        class=\"cal-hour-rows\"\n        #dayEventsContainer\n        mwlDroppable\n        (dragEnter)=\"eventDragEnter = eventDragEnter + 1\"\n        (dragLeave)=\"eventDragEnter = eventDragEnter - 1\"\n      >\n        <div class=\"cal-events\">\n          <div\n            #event\n            *ngFor=\"let dayEvent of view?.events; trackBy: trackByDayEvent\"\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"dayEvent.event.draggable\"\n            [class.cal-starts-within-day]=\"!dayEvent.startsBeforeDay\"\n            [class.cal-ends-within-day]=\"!dayEvent.endsAfterDay\"\n            [ngClass]=\"dayEvent.event.cssClass\"\n            mwlResizable\n            [resizeSnapGrid]=\"{\n              top: eventSnapSize || hourSegmentHeight,\n              bottom: eventSnapSize || hourSegmentHeight\n            }\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"resizeStarted(dayEvent, $event, dayEventsContainer)\"\n            (resizing)=\"resizing(dayEvent, $event)\"\n            (resizeEnd)=\"resizeEnded(dayEvent)\"\n            mwlDraggable\n            dragActiveClass=\"cal-drag-active\"\n            [dropData]=\"{ event: dayEvent.event, calendarId: calendarId }\"\n            [dragAxis]=\"{\n              x:\n                !snapDraggedEvents &&\n                dayEvent.event.draggable &&\n                currentResizes.size === 0,\n              y: dayEvent.event.draggable && currentResizes.size === 0\n            }\"\n            [dragSnapGrid]=\"\n              snapDraggedEvents ? { y: eventSnapSize || hourSegmentHeight } : {}\n            \"\n            [validateDrag]=\"validateDrag\"\n            (dragPointerDown)=\"dragStarted(event, dayEventsContainer)\"\n            (dragging)=\"dragMove()\"\n            (dragEnd)=\"dragEnded(dayEvent, $event)\"\n            [style.marginTop.px]=\"dayEvent.top\"\n            [style.height.px]=\"dayEvent.height\"\n            [style.marginLeft.px]=\"dayEvent.left + 70\"\n            [style.width.px]=\"dayEvent.width - 1\"\n          >\n            <div\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\n              *ngIf=\"\n                dayEvent.event?.resizable?.beforeStart &&\n                !dayEvent.startsBeforeDay\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ top: true }\"\n            ></div>\n            <mwl-calendar-day-view-event\n              [dayEvent]=\"dayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              [eventActionsTemplate]=\"eventActionsTemplate\"\n              (eventClicked)=\"eventClicked.emit({ event: dayEvent.event })\"\n            >\n            </mwl-calendar-day-view-event>\n            <div\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\n              *ngIf=\"\n                dayEvent.event?.resizable?.afterEnd && !dayEvent.endsAfterDay\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ bottom: true }\"\n            ></div>\n          </div>\n        </div>\n        <div\n          class=\"cal-hour\"\n          *ngFor=\"let hour of hours; trackBy: trackByHour\"\n          [style.minWidth.px]=\"view?.width + 70\"\n        >\n          <mwl-calendar-day-view-hour-segment\n            *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\n            [style.height.px]=\"hourSegmentHeight\"\n            [segment]=\"segment\"\n            [segmentHeight]=\"hourSegmentHeight\"\n            [locale]=\"locale\"\n            [customTemplate]=\"hourSegmentTemplate\"\n            (mwlClick)=\"hourSegmentClicked.emit({ date: segment.date })\"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            dragActiveClass=\"cal-drag-active\"\n            (drop)=\"eventDropped($event, segment.date, false)\"\n          >\n          </mwl-calendar-day-view-hour-segment>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarDayViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input() hourSegments: number = 2;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input() hourSegmentHeight: number = 30;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input() dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input() dayEndMinute: number = 59;\n\n  /**\n   * The width in pixels of each event on the view\n   */\n  @Input() eventWidth: number = 150;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The grid size to snap resizing and dragging of events to\n   */\n  @Input() eventSnapSize: number;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input() hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for day view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to snap events to a grid when dragging\n   */\n  @Input() snapDraggedEvents: boolean = true;\n\n  /**\n   * Called when an event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output()\n  hourSegmentClicked = new EventEmitter<{\n    date: Date;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current day.\n   * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarDayViewBeforeRenderEvent>();\n\n  /**\n   * @hidden\n   */\n  hours: DayViewHour[] = [];\n\n  /**\n   * @hidden\n   */\n  view: DayView;\n\n  /**\n   * @hidden\n   */\n  width: number = 0;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResizes: Map<DayViewEvent, DayViewEventResize> = new Map();\n\n  /**\n   * @hidden\n   */\n  eventDragEnter = 0;\n\n  /**\n   * @hidden\n   */\n  calendarId = Symbol('angular calendar day view id');\n\n  /**\n   * @hidden\n   */\n  dragAlreadyMoved = false;\n\n  /**\n   * @hidden\n   */\n  validateDrag: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  trackByEventId = trackByEventId;\n\n  /**\n   * @hidden\n   */\n  trackByHour = trackByHour;\n\n  /**\n   * @hidden\n   */\n  trackByHourSegment = trackByHourSegment;\n\n  /**\n   * @hidden\n   */\n  trackByDayEvent = trackByDayOrWeekEvent;\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    private dateAdapter: DateAdapter\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (\n      changes.viewDate ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.hourSegments\n    ) {\n      this.refreshHourGrid();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.eventWidth\n    ) {\n      this.refreshView();\n    }\n  }\n\n  eventDropped(\n    dropEvent: { dropData?: { event?: CalendarEvent; calendarId?: symbol } },\n    date: Date,\n    allDay: boolean\n  ): void {\n    if (shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId)) {\n      this.eventTimesChanged.emit({\n        type: CalendarEventTimesChangedEventType.Drop,\n        event: dropEvent.dropData.event,\n        newStart: date,\n        allDay\n      });\n    }\n  }\n\n  resizeStarted(\n    event: DayViewEvent,\n    resizeEvent: ResizeEvent,\n    dayEventsContainer: HTMLElement\n  ): void {\n    this.currentResizes.set(event, {\n      originalTop: event.top,\n      originalHeight: event.height,\n      edge: typeof resizeEvent.edges.top !== 'undefined' ? 'top' : 'bottom'\n    });\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      dayEventsContainer\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  resizing(event: DayViewEvent, resizeEvent: ResizeEvent): void {\n    const currentResize: DayViewEventResize = this.currentResizes.get(event);\n    if (typeof resizeEvent.edges.top !== 'undefined') {\n      event.top = currentResize.originalTop + +resizeEvent.edges.top;\n      event.height = currentResize.originalHeight - +resizeEvent.edges.top;\n    } else if (typeof resizeEvent.edges.bottom !== 'undefined') {\n      event.height = currentResize.originalHeight + +resizeEvent.edges.bottom;\n    }\n  }\n\n  resizeEnded(dayEvent: DayViewEvent): void {\n    const currentResize: DayViewEventResize = this.currentResizes.get(dayEvent);\n\n    const resizingBeforeStart = currentResize.edge === 'top';\n    let pixelsMoved: number;\n    if (resizingBeforeStart) {\n      pixelsMoved = dayEvent.top - currentResize.originalTop;\n    } else {\n      pixelsMoved = dayEvent.height - currentResize.originalHeight;\n    }\n\n    dayEvent.top = currentResize.originalTop;\n    dayEvent.height = currentResize.originalHeight;\n\n    const minutesMoved = getMinutesMoved(\n      pixelsMoved,\n      this.hourSegments,\n      this.hourSegmentHeight,\n      this.eventSnapSize\n    );\n\n    let newStart: Date = dayEvent.event.start;\n    let newEnd: Date = getDefaultEventEnd(\n      this.dateAdapter,\n      dayEvent.event,\n      getMinimumEventHeightInMinutes(this.hourSegments, this.hourSegmentHeight)\n    );\n    if (resizingBeforeStart) {\n      newStart = this.dateAdapter.addMinutes(newStart, minutesMoved);\n    } else {\n      newEnd = this.dateAdapter.addMinutes(newEnd, minutesMoved);\n    }\n\n    this.eventTimesChanged.emit({\n      newStart,\n      newEnd,\n      event: dayEvent.event,\n      type: CalendarEventTimesChangedEventType.Resize\n    });\n    this.currentResizes.delete(dayEvent);\n  }\n\n  dragStarted(event: HTMLElement, dayEventsContainer: HTMLElement): void {\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      dayEventsContainer,\n      event\n    );\n    this.validateDrag = ({ x, y }) =>\n      this.currentResizes.size === 0 &&\n      dragHelper.validateDrag({\n        x,\n        y,\n        snapDraggedEvents: this.snapDraggedEvents,\n        dragAlreadyMoved: this.dragAlreadyMoved\n      });\n    this.eventDragEnter = 0;\n    this.dragAlreadyMoved = false;\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  dragMove() {\n    this.dragAlreadyMoved = true;\n  }\n\n  dragEnded(dayEvent: DayViewEvent, dragEndEvent: DragEndEvent): void {\n    if (this.eventDragEnter > 0) {\n      let minutesMoved = getMinutesMoved(\n        dragEndEvent.y,\n        this.hourSegments,\n        this.hourSegmentHeight,\n        this.eventSnapSize\n      );\n      let newStart: Date = this.dateAdapter.addMinutes(\n        dayEvent.event.start,\n        minutesMoved\n      );\n      if (dragEndEvent.y < 0 && newStart < this.view.period.start) {\n        minutesMoved += this.dateAdapter.differenceInMinutes(\n          this.view.period.start,\n          newStart\n        );\n        newStart = this.view.period.start;\n      }\n      let newEnd: Date;\n      if (dayEvent.event.end) {\n        newEnd = this.dateAdapter.addMinutes(dayEvent.event.end, minutesMoved);\n      }\n      if (isDraggedWithinPeriod(newStart, newEnd, this.view.period)) {\n        this.eventTimesChanged.emit({\n          newStart,\n          newEnd,\n          event: dayEvent.event,\n          type: CalendarEventTimesChangedEventType.Drag,\n          allDay: false\n        });\n      }\n    }\n  }\n\n  private refreshHourGrid(): void {\n    this.hours = this.utils.getDayViewHourGrid({\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      }\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshView(): void {\n    this.view = this.utils.getDayView({\n      events: this.events,\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      },\n      eventWidth: this.eventWidth,\n      segmentHeight: this.hourSegmentHeight\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshAll(): void {\n    this.refreshHourGrid();\n    this.refreshView();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.hours && this.view) {\n      this.beforeViewRender.emit({\n        body: {\n          hourGrid: this.hours,\n          allDayEvents: this.view.allDayEvents\n        },\n        period: this.view.period\n      });\n    }\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { DayViewHourSegment } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-day-view-hour-segment',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\"\n      let-segmentHeight=\"segmentHeight\"\n    >\n      <div\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\"\n      >\n        <div class=\"cal-time\">\n          {{ segment.date | calendarDate: 'dayViewHour':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale,\n        segmentHeight: segmentHeight\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarDayViewHourSegmentComponent {\n  @Input() segment: DayViewHourSegment;\n\n  @Input() segmentHeight: number;\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { DayViewEvent } from 'calendar-utils';\nimport { PlacementArray } from 'positioning';\n\n@Component({\n  selector: 'mwl-calendar-day-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-dayEvent=\"dayEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n    >\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"dayEvent.event.color?.secondary\"\n        [style.borderColor]=\"dayEvent.event.color?.primary\"\n        [mwlCalendarTooltip]=\"\n          dayEvent.event.title | calendarEventTitle: 'dayTooltip':dayEvent.event\n        \"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"dayEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\n        (mwlClick)=\"eventClicked.emit()\"\n      >\n        <mwl-calendar-event-actions\n          [event]=\"dayEvent.event\"\n          [customTemplate]=\"eventActionsTemplate\"\n        >\n        </mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"dayEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"day\"\n        >\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        dayEvent: dayEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarDayViewEventComponent {\n  @Input() dayEvent: DayViewEvent;\n\n  @Input() tooltipPlacement: PlacementArray;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarDayViewComponent } from './calendar-day-view.component';\nimport { CalendarDayViewHourSegmentComponent } from './calendar-day-view-hour-segment.component';\nimport { CalendarDayViewEventComponent } from './calendar-day-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarDayViewComponent,\n  CalendarDayViewBeforeRenderEvent\n} from './calendar-day-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule\n  ],\n  declarations: [\n    CalendarDayViewComponent,\n    CalendarDayViewHourSegmentComponent,\n    CalendarDayViewEventComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarDayViewComponent,\n    CalendarDayViewHourSegmentComponent,\n    CalendarDayViewEventComponent\n  ]\n})\nexport class CalendarDayModule {}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport {\n  CalendarCommonModule,\n  CalendarModuleConfig,\n  CalendarEventTitleFormatter,\n  CalendarDateFormatter\n} from './common/calendar-common.module';\nimport { CalendarMonthModule } from './month/calendar-month.module';\nimport { CalendarWeekModule } from './week/calendar-week.module';\nimport { CalendarDayModule } from './day/calendar-day.module';\nimport { CalendarUtils } from './common/calendar-utils.provider';\n\nexport * from './common/calendar-common.module';\nexport * from './month/calendar-month.module';\nexport * from './week/calendar-week.module';\nexport * from './day/calendar-day.module';\n\n/**\n * The main module of this library. Example usage:\n *\n * ```typescript\n * import { CalenderModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalenderModule.forRoot()\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  imports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule\n  ],\n  exports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule\n  ]\n})\nexport class CalendarModule {\n  static forRoot(\n    dateAdapter: Provider,\n    config: CalendarModuleConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: CalendarModule,\n      providers: [\n        dateAdapter,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils\n      ]\n    };\n  }\n}\n"],"names":["validateEvents","validateEventsWithoutLog"],"mappings":"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"}
