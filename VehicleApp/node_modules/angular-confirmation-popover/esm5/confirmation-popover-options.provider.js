/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @record
 */
export function ConfirmationPopoverOptionsInterface() { }
function ConfirmationPopoverOptionsInterface_tsickle_Closure_declarations() {
    /**
     * The popover title
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.popoverTitle;
    /**
     * The popover message
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.popoverMessage;
    /**
     * The popover confirmation button text
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.confirmText;
    /**
     * The popover cancel button text
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.cancelText;
    /**
     * The popover confirm button type e.g. `success`, `danger` etc
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.confirmButtonType;
    /**
     * The popover cancel button type  e.g. `success`, `danger` etc
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.cancelButtonType;
    /**
     * The popover placement. Can be `top`, `bottom`, `left`, `right`
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.placement;
    /**
     * Which button to cancel. Can be either `confirm` or `cancel`
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.focusButton;
    /**
     * Whether to hide the confirmation button
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.hideConfirmButton;
    /**
     * Whether to hide the cancel button
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.hideCancelButton;
    /**
     * A custom CSS class to be added to the popover
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.popoverClass;
    /**
     * Whether to append the popover to the document body
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.appendToBody;
    /**
     * Swap the order of the confirm and cancel buttons
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.reverseButtonOrder;
    /**
     * Whether or not the popover should stay open when clicking outside it
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.closeOnOutsideClick;
}
var ConfirmationPopoverOptions = /** @class */ (function () {
    function ConfirmationPopoverOptions() {
        this.confirmText = 'Confirm';
        this.cancelText = 'Cancel';
        this.confirmButtonType = 'success';
        this.cancelButtonType = 'default';
        this.placement = 'top';
        this.hideConfirmButton = false;
        this.hideCancelButton = false;
        this.popoverClass = '';
        this.appendToBody = false;
        this.reverseButtonOrder = false;
        this.closeOnOutsideClick = true;
    }
    return ConfirmationPopoverOptions;
}());
export { ConfirmationPopoverOptions };
function ConfirmationPopoverOptions_tsickle_Closure_declarations() {
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.popoverTitle;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.popoverMessage;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.confirmText;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.cancelText;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.confirmButtonType;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.cancelButtonType;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.placement;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.focusButton;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.hideConfirmButton;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.hideCancelButton;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.popoverClass;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.appendToBody;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.reverseButtonOrder;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.closeOnOutsideClick;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybWF0aW9uLXBvcG92ZXItb3B0aW9ucy5wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItY29uZmlybWF0aW9uLXBvcG92ZXIvIiwic291cmNlcyI6WyJjb25maXJtYXRpb24tcG9wb3Zlci1vcHRpb25zLnByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0VBLElBQUE7OzJCQUl3QixTQUFTOzBCQUNWLFFBQVE7aUNBQ0QsU0FBUztnQ0FDVixTQUFTO3lCQUNoQixLQUFLO2lDQUVJLEtBQUs7Z0NBQ04sS0FBSzs0QkFDVixFQUFFOzRCQUNELEtBQUs7a0NBQ0MsS0FBSzttQ0FDSixJQUFJOztxQ0F2RnJDO0lBd0ZDLENBQUE7QUFoQkQsc0NBZ0JDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGludGVyZmFjZSBDb25maXJtYXRpb25Qb3BvdmVyT3B0aW9uc0ludGVyZmFjZSB7XG4gIC8qKlxuICAgKiBUaGUgcG9wb3ZlciB0aXRsZVxuICAgKi9cbiAgcG9wb3ZlclRpdGxlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgcG9wb3ZlciBtZXNzYWdlXG4gICAqL1xuICBwb3BvdmVyTWVzc2FnZT86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHBvcG92ZXIgY29uZmlybWF0aW9uIGJ1dHRvbiB0ZXh0XG4gICAqL1xuICBjb25maXJtVGV4dD86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHBvcG92ZXIgY2FuY2VsIGJ1dHRvbiB0ZXh0XG4gICAqL1xuICBjYW5jZWxUZXh0Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgcG9wb3ZlciBjb25maXJtIGJ1dHRvbiB0eXBlIGUuZy4gYHN1Y2Nlc3NgLCBgZGFuZ2VyYCBldGNcbiAgICovXG4gIGNvbmZpcm1CdXR0b25UeXBlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgcG9wb3ZlciBjYW5jZWwgYnV0dG9uIHR5cGUgIGUuZy4gYHN1Y2Nlc3NgLCBgZGFuZ2VyYCBldGNcbiAgICovXG4gIGNhbmNlbEJ1dHRvblR5cGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBwb3BvdmVyIHBsYWNlbWVudC4gQ2FuIGJlIGB0b3BgLCBgYm90dG9tYCwgYGxlZnRgLCBgcmlnaHRgXG4gICAqL1xuICBwbGFjZW1lbnQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFdoaWNoIGJ1dHRvbiB0byBjYW5jZWwuIENhbiBiZSBlaXRoZXIgYGNvbmZpcm1gIG9yIGBjYW5jZWxgXG4gICAqL1xuICBmb2N1c0J1dHRvbj86IHN0cmluZztcblxuICAvKipcbiAgICogV2hldGhlciB0byBoaWRlIHRoZSBjb25maXJtYXRpb24gYnV0dG9uXG4gICAqL1xuICBoaWRlQ29uZmlybUJ1dHRvbj86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gaGlkZSB0aGUgY2FuY2VsIGJ1dHRvblxuICAgKi9cbiAgaGlkZUNhbmNlbEJ1dHRvbj86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIEEgY3VzdG9tIENTUyBjbGFzcyB0byBiZSBhZGRlZCB0byB0aGUgcG9wb3ZlclxuICAgKi9cbiAgcG9wb3ZlckNsYXNzPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIGFwcGVuZCB0aGUgcG9wb3ZlciB0byB0aGUgZG9jdW1lbnQgYm9keVxuICAgKi9cbiAgYXBwZW5kVG9Cb2R5PzogYm9vbGVhbjtcblxuICAvKipcbiAgICogU3dhcCB0aGUgb3JkZXIgb2YgdGhlIGNvbmZpcm0gYW5kIGNhbmNlbCBidXR0b25zXG4gICAqL1xuICByZXZlcnNlQnV0dG9uT3JkZXI/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIG9yIG5vdCB0aGUgcG9wb3ZlciBzaG91bGQgc3RheSBvcGVuIHdoZW4gY2xpY2tpbmcgb3V0c2lkZSBpdFxuICAgKi9cbiAgY2xvc2VPbk91dHNpZGVDbGljaz86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBjbGFzcyBDb25maXJtYXRpb25Qb3BvdmVyT3B0aW9uc1xuICBpbXBsZW1lbnRzIENvbmZpcm1hdGlvblBvcG92ZXJPcHRpb25zSW50ZXJmYWNlIHtcbiAgcG9wb3ZlclRpdGxlOiBzdHJpbmc7XG4gIHBvcG92ZXJNZXNzYWdlOiBzdHJpbmc7XG4gIGNvbmZpcm1UZXh0OiBzdHJpbmcgPSAnQ29uZmlybSc7XG4gIGNhbmNlbFRleHQ6IHN0cmluZyA9ICdDYW5jZWwnO1xuICBjb25maXJtQnV0dG9uVHlwZTogc3RyaW5nID0gJ3N1Y2Nlc3MnO1xuICBjYW5jZWxCdXR0b25UeXBlOiBzdHJpbmcgPSAnZGVmYXVsdCc7XG4gIHBsYWNlbWVudDogc3RyaW5nID0gJ3RvcCc7XG4gIGZvY3VzQnV0dG9uOiBzdHJpbmc7XG4gIGhpZGVDb25maXJtQnV0dG9uOiBib29sZWFuID0gZmFsc2U7XG4gIGhpZGVDYW5jZWxCdXR0b246IGJvb2xlYW4gPSBmYWxzZTtcbiAgcG9wb3ZlckNsYXNzOiBzdHJpbmcgPSAnJztcbiAgYXBwZW5kVG9Cb2R5OiBib29sZWFuID0gZmFsc2U7XG4gIHJldmVyc2VCdXR0b25PcmRlcjogYm9vbGVhbiA9IGZhbHNlO1xuICBjbG9zZU9uT3V0c2lkZUNsaWNrOiBib29sZWFuID0gdHJ1ZTtcbn1cbiJdfQ==