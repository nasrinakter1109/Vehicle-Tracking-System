/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @record
 */
export function ConfirmationPopoverOptionsInterface() { }
function ConfirmationPopoverOptionsInterface_tsickle_Closure_declarations() {
    /**
     * The popover title
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.popoverTitle;
    /**
     * The popover message
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.popoverMessage;
    /**
     * The popover confirmation button text
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.confirmText;
    /**
     * The popover cancel button text
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.cancelText;
    /**
     * The popover confirm button type e.g. `success`, `danger` etc
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.confirmButtonType;
    /**
     * The popover cancel button type  e.g. `success`, `danger` etc
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.cancelButtonType;
    /**
     * The popover placement. Can be `top`, `bottom`, `left`, `right`
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.placement;
    /**
     * Which button to cancel. Can be either `confirm` or `cancel`
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.focusButton;
    /**
     * Whether to hide the confirmation button
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.hideConfirmButton;
    /**
     * Whether to hide the cancel button
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.hideCancelButton;
    /**
     * A custom CSS class to be added to the popover
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.popoverClass;
    /**
     * Whether to append the popover to the document body
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.appendToBody;
    /**
     * Swap the order of the confirm and cancel buttons
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.reverseButtonOrder;
    /**
     * Whether or not the popover should stay open when clicking outside it
     * @type {?|undefined}
     */
    ConfirmationPopoverOptionsInterface.prototype.closeOnOutsideClick;
}
export class ConfirmationPopoverOptions {
    constructor() {
        this.confirmText = 'Confirm';
        this.cancelText = 'Cancel';
        this.confirmButtonType = 'success';
        this.cancelButtonType = 'default';
        this.placement = 'top';
        this.hideConfirmButton = false;
        this.hideCancelButton = false;
        this.popoverClass = '';
        this.appendToBody = false;
        this.reverseButtonOrder = false;
        this.closeOnOutsideClick = true;
    }
}
function ConfirmationPopoverOptions_tsickle_Closure_declarations() {
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.popoverTitle;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.popoverMessage;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.confirmText;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.cancelText;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.confirmButtonType;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.cancelButtonType;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.placement;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.focusButton;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.hideConfirmButton;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.hideCancelButton;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.popoverClass;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.appendToBody;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.reverseButtonOrder;
    /** @type {?} */
    ConfirmationPopoverOptions.prototype.closeOnOutsideClick;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybWF0aW9uLXBvcG92ZXItb3B0aW9ucy5wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItY29uZmlybWF0aW9uLXBvcG92ZXIvIiwic291cmNlcyI6WyJjb25maXJtYXRpb24tcG9wb3Zlci1vcHRpb25zLnByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBd0VBLE1BQU07OzJCQUlrQixTQUFTOzBCQUNWLFFBQVE7aUNBQ0QsU0FBUztnQ0FDVixTQUFTO3lCQUNoQixLQUFLO2lDQUVJLEtBQUs7Z0NBQ04sS0FBSzs0QkFDVixFQUFFOzRCQUNELEtBQUs7a0NBQ0MsS0FBSzttQ0FDSixJQUFJOztDQUNwQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgQ29uZmlybWF0aW9uUG9wb3Zlck9wdGlvbnNJbnRlcmZhY2Uge1xuICAvKipcbiAgICogVGhlIHBvcG92ZXIgdGl0bGVcbiAgICovXG4gIHBvcG92ZXJUaXRsZT86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHBvcG92ZXIgbWVzc2FnZVxuICAgKi9cbiAgcG9wb3Zlck1lc3NhZ2U/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBwb3BvdmVyIGNvbmZpcm1hdGlvbiBidXR0b24gdGV4dFxuICAgKi9cbiAgY29uZmlybVRleHQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBwb3BvdmVyIGNhbmNlbCBidXR0b24gdGV4dFxuICAgKi9cbiAgY2FuY2VsVGV4dD86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHBvcG92ZXIgY29uZmlybSBidXR0b24gdHlwZSBlLmcuIGBzdWNjZXNzYCwgYGRhbmdlcmAgZXRjXG4gICAqL1xuICBjb25maXJtQnV0dG9uVHlwZT86IHN0cmluZztcblxuICAvKipcbiAgICogVGhlIHBvcG92ZXIgY2FuY2VsIGJ1dHRvbiB0eXBlICBlLmcuIGBzdWNjZXNzYCwgYGRhbmdlcmAgZXRjXG4gICAqL1xuICBjYW5jZWxCdXR0b25UeXBlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBUaGUgcG9wb3ZlciBwbGFjZW1lbnQuIENhbiBiZSBgdG9wYCwgYGJvdHRvbWAsIGBsZWZ0YCwgYHJpZ2h0YFxuICAgKi9cbiAgcGxhY2VtZW50Pzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBXaGljaCBidXR0b24gdG8gY2FuY2VsLiBDYW4gYmUgZWl0aGVyIGBjb25maXJtYCBvciBgY2FuY2VsYFxuICAgKi9cbiAgZm9jdXNCdXR0b24/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdG8gaGlkZSB0aGUgY29uZmlybWF0aW9uIGJ1dHRvblxuICAgKi9cbiAgaGlkZUNvbmZpcm1CdXR0b24/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIGhpZGUgdGhlIGNhbmNlbCBidXR0b25cbiAgICovXG4gIGhpZGVDYW5jZWxCdXR0b24/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBBIGN1c3RvbSBDU1MgY2xhc3MgdG8gYmUgYWRkZWQgdG8gdGhlIHBvcG92ZXJcbiAgICovXG4gIHBvcG92ZXJDbGFzcz86IHN0cmluZztcblxuICAvKipcbiAgICogV2hldGhlciB0byBhcHBlbmQgdGhlIHBvcG92ZXIgdG8gdGhlIGRvY3VtZW50IGJvZHlcbiAgICovXG4gIGFwcGVuZFRvQm9keT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIFN3YXAgdGhlIG9yZGVyIG9mIHRoZSBjb25maXJtIGFuZCBjYW5jZWwgYnV0dG9uc1xuICAgKi9cbiAgcmV2ZXJzZUJ1dHRvbk9yZGVyPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogV2hldGhlciBvciBub3QgdGhlIHBvcG92ZXIgc2hvdWxkIHN0YXkgb3BlbiB3aGVuIGNsaWNraW5nIG91dHNpZGUgaXRcbiAgICovXG4gIGNsb3NlT25PdXRzaWRlQ2xpY2s/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY2xhc3MgQ29uZmlybWF0aW9uUG9wb3Zlck9wdGlvbnNcbiAgaW1wbGVtZW50cyBDb25maXJtYXRpb25Qb3BvdmVyT3B0aW9uc0ludGVyZmFjZSB7XG4gIHBvcG92ZXJUaXRsZTogc3RyaW5nO1xuICBwb3BvdmVyTWVzc2FnZTogc3RyaW5nO1xuICBjb25maXJtVGV4dDogc3RyaW5nID0gJ0NvbmZpcm0nO1xuICBjYW5jZWxUZXh0OiBzdHJpbmcgPSAnQ2FuY2VsJztcbiAgY29uZmlybUJ1dHRvblR5cGU6IHN0cmluZyA9ICdzdWNjZXNzJztcbiAgY2FuY2VsQnV0dG9uVHlwZTogc3RyaW5nID0gJ2RlZmF1bHQnO1xuICBwbGFjZW1lbnQ6IHN0cmluZyA9ICd0b3AnO1xuICBmb2N1c0J1dHRvbjogc3RyaW5nO1xuICBoaWRlQ29uZmlybUJ1dHRvbjogYm9vbGVhbiA9IGZhbHNlO1xuICBoaWRlQ2FuY2VsQnV0dG9uOiBib29sZWFuID0gZmFsc2U7XG4gIHBvcG92ZXJDbGFzczogc3RyaW5nID0gJyc7XG4gIGFwcGVuZFRvQm9keTogYm9vbGVhbiA9IGZhbHNlO1xuICByZXZlcnNlQnV0dG9uT3JkZXI6IGJvb2xlYW4gPSBmYWxzZTtcbiAgY2xvc2VPbk91dHNpZGVDbGljazogYm9vbGVhbiA9IHRydWU7XG59XG4iXX0=