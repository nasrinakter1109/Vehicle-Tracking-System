!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("positioning"),require("@angular/common")):"function"==typeof define&&define.amd?define("angular-confirmation-popover",["exports","@angular/core","positioning","@angular/common"],n):n(t["angular-confirmation-popover"]={},t.ng.core,null,t.ng.common)}(this,function(t,p,e,o){"use strict";var i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)n.hasOwnProperty(e)&&(t[e]=n[e])};var r=function(){this.confirmText="Confirm",this.cancelText="Cancel",this.confirmButtonType="success",this.cancelButtonType="default",this.placement="top",this.hideConfirmButton=!1,this.hideCancelButton=!1,this.popoverClass="",this.appendToBody=!1,this.reverseButtonOrder=!1,this.closeOnOutsideClick=!0},s=function(t){function n(){return null!==t&&t.apply(this,arguments)||this}return function(t,n){function e(){this.constructor=t}i(t,n),t.prototype=null===n?Object.create(n):(e.prototype=n.prototype,new e)}(n,t),n.decorators=[{type:p.Injectable}],n}(r),c=function(){function t(t){this.options=t}return t.prototype.ngAfterViewInit=function(){this.options.onAfterViewInit()},t.decorators=[{type:p.Component,args:[{selector:"mwl-confirmation-popover-window",styles:["\n    .popover {\n      display: block;\n    }\n    .bs-popover-top .arrow, .bs-popover-bottom .arrow {\n      left: 50%;\n    }\n    .bs-popover-left .arrow, .bs-popover-right .arrow {\n      top: 50%;\n    }\n    .btn {\n      transition: none;\n    }\n    .confirm-btns {\n      display: flex;\n      justify-content: space-around;\n    }\n    .confirm-btn-container {\n      flex-basis: 50%;\n    }\n    .confirm-btn-container:not(:first-child) {\n      margin-left: 4px;\n    }\n    .confirm-btn-container:not(:last-child) {\n      margin-right: 4px;\n    }\n    .confirm-btns-reversed {\n      flex-direction: row-reverse;\n    }\n    .confirm-btns-reversed .confirm-btn-container:not(:first-child) {\n      margin-right: 4px;\n      margin-left: 0;\n    }\n    .confirm-btns-reversed .confirm-btn-container:not(:last-child) {\n      margin-right: 0;\n      margin-left: 4px;\n    }\n  "],template:'\n    <ng-template #defaultTemplate let-options="options">\n      <div [ngClass]="[\n        \'popover\',\n        options.placement,\n        \'popover-\' + options.placement,\n        \'bs-popover-\' + options.placement,\n        options.popoverClass\n      ]">\n        <div class="popover-arrow arrow"></div>\n        <h3 class="popover-title popover-header" [innerHTML]="options.popoverTitle"></h3>\n        <div class="popover-content popover-body">\n          <p [innerHTML]="options.popoverMessage"></p>\n          <div class="confirm-btns" [class.confirm-btns-reversed]="options.reverseButtonOrder">\n            <div\n              class="confirm-btn-container"\n              *ngIf="!options.hideCancelButton">\n              <button\n                type="button"\n                [mwlFocus]="options.focusButton === \'cancel\'"\n                [class]="\'btn btn-block btn-\' + options.cancelButtonType"\n                (click)="options.onCancel({clickEvent: $event})"\n                [innerHtml]="options.cancelText">\n              </button>\n            </div>\n            <div\n              class="confirm-btn-container"\n              *ngIf="!options.hideConfirmButton">\n              <button\n                type="button"\n                [mwlFocus]="options.focusButton === \'confirm\'"\n                [class]="\'btn btn-block btn-\' + options.confirmButtonType"\n                (click)="options.onConfirm({clickEvent: $event})"\n                [innerHtml]="options.confirmText">\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]="options.customTemplate || defaultTemplate"\n      [ngTemplateOutletContext]="{options: options}">\n    </ng-template>\n  '}]}],t.ctorParameters=function(){return[{type:s}]},t}(),a=function(){function t(t,n,e,o,i,r){this.viewContainerRef=t,this.elm=n,this.defaultOptions=e,this.cfr=o,this.position=i,this.renderer=r,this.isDisabled=!1,this.isOpen=!1,this.isOpenChange=new p.EventEmitter(!0),this.confirm=new p.EventEmitter,this.cancel=new p.EventEmitter,this.eventListeners=[]}return t.prototype.ngOnInit=function(){this.isOpenChange.emit(!1)},t.prototype.ngOnChanges=function(t){t.isOpen&&(!0===t.isOpen.currentValue?this.showPopover():this.hidePopover())},t.prototype.ngOnDestroy=function(){this.hidePopover()},t.prototype.onConfirm=function(t){this.confirm.emit(t),this.hidePopover()},t.prototype.onCancel=function(t){this.cancel.emit(t),this.hidePopover()},t.prototype.togglePopover=function(){this.popover?this.hidePopover():this.showPopover()},t.prototype.onDocumentClick=function(t){var n="undefined"!=typeof this.closeOnOutsideClick?this.closeOnOutsideClick:this.defaultOptions.closeOnOutsideClick;this.popover&&!this.elm.nativeElement.contains(t.target)&&!this.popover.location.nativeElement.contains(t.target)&&n&&this.hidePopover()},t.prototype.showPopover=function(){var n=this;if(!this.popover&&!this.isDisabled){setTimeout(function(){n.eventListeners=[n.renderer.listen("document","click",function(t){return n.onDocumentClick(t)}),n.renderer.listen("document","touchend",function(t){return n.onDocumentClick(t)}),n.renderer.listen("window","resize",function(){return n.positionPopover()})]});var e=new s;Object.assign(e,this.defaultOptions,{onConfirm:function(t){n.onConfirm(t)},onCancel:function(t){n.onCancel(t)},onAfterViewInit:function(){n.positionPopover()}});["confirmText","cancelText","placement","confirmButtonType","cancelButtonType","focusButton","hideConfirmButton","hideCancelButton","popoverClass","appendToBody","customTemplate","reverseButtonOrder","popoverTitle","popoverMessage"].forEach(function(t){"undefined"!=typeof n[t]&&(e[t]=n[t])});var t=this.cfr.resolveComponentFactory(c),o=p.Injector.create([{provide:s,useValue:e}],this.viewContainerRef.parentInjector);this.popover=this.viewContainerRef.createComponent(t,this.viewContainerRef.length,o),e.appendToBody&&document.body.appendChild(this.popover.location.nativeElement),this.isOpenChange.emit(!0)}},t.prototype.positionPopover=function(){if(this.popover){var t=this.popover.location.nativeElement.children[0],n=this.position.positionElements(this.elm.nativeElement,t,this.placement||this.defaultOptions.placement,this.appendToBody||this.defaultOptions.appendToBody);this.renderer.setStyle(t,"top",n.top+"px"),this.renderer.setStyle(t,"left",n.left+"px")}},t.prototype.hidePopover=function(){this.popover&&(this.popover.destroy(),delete this.popover,this.isOpenChange.emit(!1),this.eventListeners.forEach(function(t){return t()}),this.eventListeners=[])},t.decorators=[{type:p.Directive,args:[{selector:"[mwlConfirmationPopover]"}]}],t.ctorParameters=function(){return[{type:p.ViewContainerRef},{type:p.ElementRef},{type:r},{type:p.ComponentFactoryResolver},{type:e.Positioning},{type:p.Renderer2}]},t.propDecorators={popoverTitle:[{type:p.Input}],popoverMessage:[{type:p.Input}],confirmText:[{type:p.Input}],cancelText:[{type:p.Input}],placement:[{type:p.Input}],confirmButtonType:[{type:p.Input}],cancelButtonType:[{type:p.Input}],focusButton:[{type:p.Input}],hideConfirmButton:[{type:p.Input}],hideCancelButton:[{type:p.Input}],isDisabled:[{type:p.Input}],isOpen:[{type:p.Input}],customTemplate:[{type:p.Input}],isOpenChange:[{type:p.Output}],confirm:[{type:p.Output}],cancel:[{type:p.Output}],popoverClass:[{type:p.Input}],appendToBody:[{type:p.Input}],reverseButtonOrder:[{type:p.Input}],closeOnOutsideClick:[{type:p.Input}],togglePopover:[{type:p.HostListener,args:["click"]}]},t}(),u=function(){function t(t){this.elm=t}return t.prototype.ngOnChanges=function(t){t.mwlFocus&&!0===this.mwlFocus&&this.elm.nativeElement.focus()},t.decorators=[{type:p.Directive,args:[{selector:"[mwlFocus]"}]}],t.ctorParameters=function(){return[{type:p.ElementRef}]},t.propDecorators={mwlFocus:[{type:p.Input}]},t}(),l=new p.InjectionToken("confirmation popover user options");function f(t){var n=new r;return Object.assign(n,t),n}var n=function(){function n(){}return n.forRoot=function(t){return void 0===t&&(t={}),{ngModule:n,providers:[{provide:l,useValue:t},{provide:r,useFactory:f,deps:[l]},e.Positioning]}},n.decorators=[{type:p.NgModule,args:[{declarations:[a,c,u],imports:[o.CommonModule],exports:[a,u],entryComponents:[c]}]}],n}();t.ConfirmationPopoverModule=n,t.ɵd=r,t.ɵf=s,t.ɵe=c,t.ɵc=a,t.ɵa=l,t.ɵb=f,t.ɵg=u,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=angular-confirmation-popover.umd.min.js.map