{"version":3,"sources":["null","ng://ngx-contextmenu/lib/contextMenu.tokens.ts","ng://ngx-contextmenu/lib/contextMenuContent.component.ts","ng://ngx-contextmenu/lib/contextMenu.service.ts","ng://ngx-contextmenu/lib/contextMenu.attach.directive.ts","ng://ngx-contextmenu/lib/contextMenu.item.directive.ts","ng://ngx-contextmenu/lib/contextMenu.component.ts","ng://ngx-contextmenu/lib/ngx-contextmenu.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","CONTEXT_MENU_OPTIONS","InjectionToken","ContextMenuContentComponent","changeDetector","elementRef","options","renderer","this","EventEmitter","Subscription","autoFocus","useBootstrap4","ngOnInit","_this","menuItems","forEach","menuItem","currentItem","item","subscription","add","execute","subscribe","event","emit","queryList","QueryList","reset","_keyManager","ActiveDescendantKeyManager","withWrap","ngAfterViewInit","setTimeout","focus","overlay","updatePosition","ngOnDestroy","unsubscribe","menuElement","nativeElement","stopEvent","$event","stopPropagation","isMenuItemEnabled","evaluateIfFunction","enabled","isMenuItemVisible","visible","value","Function","isDisabled","link","onKeyEvent","isLeaf","onKeydown","keyboardOpenSubMenu","cancelEvent","activeItemIndex","onOpenSubMenu","keyboardMenuItemSelect","onMenuItemSelect","onCloseLeafMenu","closeLeafMenu","exceptRootMenu","keyCode","closeMenu","type","button","closeAllMenus","anchorElementRef","menuItemElements","toArray","anchorElement","openSubMenu","contextMenu","subMenu","parentContextMenu","preventDefault","triggerExecute","target","indexOf","tagName","isContentEditable","Component","args","selector","styles","template","ChangeDetectorRef","ElementRef","Optional","Inject","Renderer","Input","Output","ViewChild","ViewChildren","HostListener","ContextMenuService","scrollStrategy","Subject","getBoundingClientRect","bottom","height","left","right","top","width","openContextMenu","context","positionStrategy","position","connectedTo","originX","originY","overlayX","overlayY","withFallbackPosition","newOverlay","create","panelClass","close","destroySubMenus","overlays","concat","attachContextMenu","mouseEvent_1","fakeElement","clientY","clientX","closeAllContextMenus","eventType","menuClass","contextMenuContent","attach","ComponentPortal","instance","subscriptions","asObservable","executeEvent","closeAllEvent","closeLeafMenuEvent","destroyLeafMenu","subMenuEvent","show","next","onDestroy","isActive","changeDetectorRef","detectChanges","closeEvent","index","detach","dispose","getLastAttachedOverlay","hasAttached","slice","_a","_b","isDestroyingLeafMenu","newLeaf","subMenuOverlay","isLeafMenu","Injectable","Overlay","ScrollStrategyOptions","ContextMenuAttachDirective","contextMenuService","onContextMenu","disabled","contextMenuSubject","Directive","ContextMenuItemDirective","passive","divider","setActiveStyles","setInactiveStyles","TemplateRef","ContextMenuComponent","_contextMenuService","menuEvent","onMenuEvent","setVisibleMenuItems","visibleMenuItems","pipe","first","open","filter","encapsulation","ViewEncapsulation","None","ContentChildren","ContextMenuModule","forRoot","ngModule","providers","provide","useValue","NgModule","declarations","entryComponents","exports","imports","CommonModule","OverlayModule"],"mappings":"unBA0BO,IAAIA,EAAWC,OAAOC,QAAU,SAAkBC,GACrD,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,IAE9E,OAAON,GC7BEU,EAAuB,IAAIC,EAAAA,eAAe,qCCwFrD,SAAAC,EACUC,EACAC,EAE8BC,EAC/BC,GAJCC,KAAAJ,eAAAA,EACAI,KAAAH,WAAAA,EAE8BG,KAAAF,QAAAA,EAC/BE,KAAAD,SAAAA,iBAxB+C,gBAM/B,eAErB,IAAIE,EAAAA,8BAC6D,IAAIA,EAAAA,gCACN,IAAIA,EAAAA,gCACD,IAAIA,EAAAA,6BAIvD,sBACI,oBAEc,IAAIC,EAAAA,aAQnCJ,IACFE,KAAKG,UAAYL,EAAQK,UACzBH,KAAKI,cAAgBN,EAAQM,sBAIjCT,EAAAL,UAAAe,SAAA,WAAA,IAAAC,EAAAN,KACEA,KAAKO,UAAUC,QAAQ,SAAAC,GACrBA,EAASC,YAAcJ,EAAKK,KAC5BL,EAAKM,aAAaC,IAAIJ,EAASK,QAAQC,UAAU,SAAAC,GAAS,OAAAV,EAAKQ,QAAQG,KAAIrC,EAAA,GAAMoC,EAAK,CAAEP,SAAQA,UAElG,IAAMS,EAAY,IAAIC,EAAAA,UACtBD,EAAUE,MAAMpB,KAAKO,WACrBP,KAAKqB,YAAc,IAAIC,EAAAA,2BAAqDJ,GAAWK,YAGzF5B,EAAAL,UAAAkC,gBAAA,WAAA,IAAAlB,EAAAN,KACMA,KAAKG,WACPsB,WAAW,WAAM,OAAAnB,EAAKoB,UAExB1B,KAAK2B,QAAQC,kBAGfjC,EAAAL,UAAAuC,YAAA,WACE7B,KAAKY,aAAakB,eAGpBnC,EAAAL,UAAAoC,MAAA,WACM1B,KAAKG,WACPH,KAAK+B,YAAYC,cAAcN,SAInC/B,EAAAL,UAAA2C,UAAA,SAAUC,GACRA,EAAOC,mBAGFxC,EAAAL,UAAA8C,2BAAkB3B,GACvB,OAAOT,KAAKqC,mBAAmB5B,GAAYA,EAAS6B,UAG/C3C,EAAAL,UAAAiD,2BAAkB9B,GACvB,OAAOT,KAAKqC,mBAAmB5B,GAAYA,EAAS+B,UAG/C7C,EAAAL,UAAA+C,4BAAmBI,GACxB,OAAIA,aAAiBC,SACZD,EAAMzC,KAAKW,MAEb8B,GAGF9C,EAAAL,UAAAqD,oBAAWC,GAChB,OAAOA,EAAKN,UAAYM,EAAKN,QAAQtC,KAAKW,OAKrChB,EAAAL,UAAAuD,WAFP,SAEkB7B,GACXhB,KAAK8C,QAGV9C,KAAKqB,YAAY0B,UAAU/B,IAItBrB,EAAAL,UAAA0D,oBADP,SAC2BhC,GACzB,GAAKhB,KAAK8C,OAAV,CAGA9C,KAAKiD,YAAYjC,GACjB,IAAMP,EAAWT,KAAKO,UAAUP,KAAKqB,YAAY6B,iBAC7CzC,GACFT,KAAKmD,cAAc1C,KAMhBd,EAAAL,UAAA8D,uBAFP,SAE8BpC,GAC5B,GAAKhB,KAAK8C,OAAV,CAGA9C,KAAKiD,YAAYjC,GACjB,IAAMP,EAAWT,KAAKO,UAAUP,KAAKqB,YAAY6B,iBAC7CzC,GACFT,KAAKqD,iBAAiB5C,EAAUO,KAM7BrB,EAAAL,UAAAgE,gBAFP,SAEuBtC,GAChBhB,KAAK8C,SAGV9C,KAAKiD,YAAYjC,GACjBhB,KAAKuD,cAActC,KAAK,CAAEuC,eAtKH,KAsKmBxC,EAAMyC,QAAgCzC,MAAKA,MAKhFrB,EAAAL,UAAAoE,UAFP,SAEiB1C,GACI,UAAfA,EAAM2C,MAAqC,IAAjB3C,EAAM4C,QAGpC5D,KAAK6D,cAAc5C,KAAK,CAACD,MAAKA,KAGzBrB,EAAAL,UAAA6D,uBAAc1C,EAAoCO,GACvD,IAAM8C,EAAmB9D,KAAK+D,iBAAiBC,UAAUhE,KAAKqB,YAAY6B,iBACpEe,EAAgBH,GAAoBA,EAAiB9B,cAC3DhC,KAAKkE,YAAYjD,KAAK,CACpBgD,cAAaA,EACbE,YAAa1D,EAAS2D,QACtBpD,MAAKA,EACLL,KAAMX,KAAKW,KACX0D,kBAAmBrE,QAIhBL,EAAAL,UAAA+D,0BAAiB5C,EAAoCO,GAC1DA,EAAMsD,iBACNtD,EAAMmB,kBACNnC,KAAKmD,cAAc1C,EAAUO,GACxBP,EAAS2D,SACZ3D,EAAS8D,eAAevE,KAAKW,KAAMK,IAI/BrB,EAAAL,UAAA2D,qBAAYjC,GAClB,GAAKA,EAAL,CAIA,IAAMwD,EAAsBxD,EAAMwD,QAC6B,EAA3D,CAAC,QAAS,WAAY,UAAUC,QAAQD,EAAOE,UAAiBF,EAAOG,oBAI3E3D,EAAMsD,iBACNtD,EAAMmB,yCAhNTyC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,uBACVC,OAAQ,CACN,2QAaFC,SACA,2lDA3CEC,EAAAA,yBAEAC,EAAAA,8CAuFCC,EAAAA,UAAQ,CAAAxB,KACRyB,EAAAA,OAAMP,KAAA,CAACpF,YApFR4F,EAAAA,+CA6DDC,EAAAA,oBACAA,EAAAA,qBACAA,EAAAA,iCACAA,EAAAA,yBACAA,EAAAA,uBACAA,EAAAA,sBACAA,EAAAA,uBACAC,EAAAA,4BAEAA,EAAAA,8BACAA,EAAAA,8BACAA,EAAAA,4BACAC,EAAAA,UAASX,KAAA,CAAC,kCACVY,EAAAA,aAAYZ,KAAA,CAAC,0BAqEba,EAAAA,aAAYb,KAAA,CAAC,2BAA4B,CAAC,YAAS,CAAAlB,KACnD+B,EAAAA,aAAYb,KAAA,CAAC,yBAA0B,CAAC,wCAQxCa,EAAAA,aAAYb,KAAA,CAAC,4BAA6B,CAAC,2CAY3Ca,EAAAA,aAAYb,KAAA,CAAC,uBAAwB,CAAC,YAAS,CAAAlB,KAC/C+B,EAAAA,aAAYb,KAAA,CAAC,uBAAwB,CAAC,oCAYtCa,EAAAA,aAAYb,KAAA,CAAC,wBAAyB,CAAC,YAAS,CAAAlB,KAChD+B,EAAAA,aAAYb,KAAA,CAAC,2BAA4B,CAAC,8BAS1Ca,EAAAA,aAAYb,KAAA,CAAC,iBAAkB,CAAC,YAAS,CAAAlB,KACzC+B,EAAAA,aAAYb,KAAA,CAAC,uBAAwB,CAAC,gCCxIvC,SAAAc,EACUhE,EACAiE,GADA5F,KAAA2B,QAAAA,EACA3B,KAAA4F,eAAAA,6BArBoB,YAEiB,IAAIC,EAAAA,0BACS,IAAIA,EAAAA,mBACjB,IAAIA,EAAAA,sBAGlB,oBACN,CACzBC,sBAAuB,WAAkB,MAAA,CACvCC,OAAQ,EACRC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,MAAO,YASJT,EAAArG,UAAA+G,yBAAgBC,GACb,IAAArC,EAAAqC,EAAArC,cAAejD,EAAAsF,EAAAtF,MAAOqD,EAAAiC,EAAAjC,kBAE9B,GAAKA,EAqCE,CACCkC,EAAmBvG,KAAK2B,QAAQ6E,WAAWC,YAC/C,IAAIvB,EAAAA,WAAWlE,EAAQA,EAAMwD,OAASP,GACtC,CAAEyC,QAAS,MAAOC,QAAS,OAC3B,CAAEC,SAAU,QAASC,SAAU,QAC9BC,qBACD,CAAEJ,QAAS,QAASC,QAAS,OAC7B,CAAEC,SAAU,MAAOC,SAAU,QAC5BC,qBACD,CAAEJ,QAAS,MAAOC,QAAS,UAC3B,CAAEC,SAAU,QAASC,SAAU,WAC9BC,qBACD,CAAEJ,QAAS,QAASC,QAAS,UAC7B,CAAEC,SAAU,MAAOC,SAAU,WAZ/B,IAcME,EAAa/G,KAAK2B,QAAQqF,OAAO,CACrCT,iBAAgBA,EAChBU,WAAY,kBACZrB,eAAgB5F,KAAK4F,eAAesB,UAEtClH,KAAKmH,gBAAgB9C,GACrBrE,KAAKoH,SAAWpH,KAAKoH,SAASC,OAAON,GACrC/G,KAAKsH,kBAAkBP,EAAYT,OA3Db,CACtB,IAAMiB,EAAU,EAChBvH,KAAKwH,YAAY1B,sBAAwB,WAAkB,MAAA,CACzDC,OAAQwB,EAAWE,QACnBzB,OAAQ,EACRC,KAAMsB,EAAWG,QACjBxB,MAAOqB,EAAWG,QAClBvB,IAAKoB,EAAWE,QAChBrB,MAAO,IAETpG,KAAK2H,qBAAqB,CAAEC,UAAW,SAAU5G,MAAKA,IACtD,IAAMuF,EAAmBvG,KAAK2B,QAAQ6E,WAAWC,YAC/C,IAAIvB,EAAAA,WAAWjB,GAAiBjE,KAAKwH,aACrC,CAAEd,QAAS,QAASC,QAAS,UAC7B,CAAEC,SAAU,QAASC,SAAU,QAC9BC,qBACD,CAAEJ,QAAS,QAASC,QAAS,OAC7B,CAAEC,SAAU,QAASC,SAAU,WAC9BC,qBACD,CAAEJ,QAAS,MAAOC,QAAS,OAC3B,CAAEC,SAAU,QAASC,SAAU,QAC9BC,qBACD,CAAEJ,QAAS,QAASC,QAAS,OAC7B,CAAEC,SAAU,MAAOC,SAAU,QAC5BC,qBACD,CAAEJ,QAAS,MAAOC,QAAS,UAC3B,CAAEC,SAAU,QAASC,SAAU,WAC9BC,qBACD,CAAEJ,QAAS,QAASC,QAAS,UAC7B,CAAEC,SAAU,MAAOC,SAAU,WAE/B7G,KAAKoH,SAAW,CAACpH,KAAK2B,QAAQqF,OAAO,CACnCT,iBAAgBA,EAChBU,WAAY,kBACZrB,eAAgB5F,KAAK4F,eAAesB,WAEtClH,KAAKsH,kBAAkBtH,KAAKoH,SAAS,GAAId,KA2BtCX,EAAArG,UAAAgI,2BAAkB3F,EAAqB2E,cACpCtF,EAAAsF,EAAAtF,MAAOL,EAAA2F,EAAA3F,KAAMJ,EAAA+F,EAAA/F,UAAWsH,EAAAvB,EAAAuB,UAE1BC,EAAgEnG,EAAQoG,OAAO,IAAIC,EAAAA,gBAAgBrI,IACzGmI,EAAmBG,SAASjH,MAAQA,EACpC8G,EAAmBG,SAAStH,KAAOA,EACnCmH,EAAmBG,SAAS1H,UAAYA,EACxCuH,EAAmBG,SAAStG,QAAUA,EACtCmG,EAAmBG,SAASnF,QAAS,EACrCgF,EAAmBG,SAASJ,UAAYA,EACxC,EAAqC1D,YAAc2D,EAAmBG,SAEtE,IAAMC,EAA8B,IAAIhI,EAAAA,aACxCgI,EAAcrH,IAAIiH,EAAmBG,SAASnH,QAAQqH,eACnDpH,UAAU,SAACqH,GAAiB,OAAA9H,EAAKqH,qBAAoB/I,EAAA,CAAGgJ,UAAW,WAAcQ,OACpFF,EAAcrH,IAAIiH,EAAmBG,SAASpE,cAAcsE,eACzDpH,UAAU,SAACsH,GAAkB,OAAA/H,EAAKqH,qBAAoB/I,EAAA,CAAGgJ,UAAW,UAAaS,OACpFH,EAAcrH,IAAIiH,EAAmBG,SAAS1E,cAAc4E,eACzDpH,UAAU,SAAAuH,GAAsB,OAAAhI,EAAKiI,gBAAgBD,MACxDJ,EAAcrH,IAAIiH,EAAmBG,SAAS/D,YAAYiE,eACvDpH,UAAU,SAACyH,GACVlI,EAAK6G,gBAAgBW,EAAmBG,UACnCO,EAAarE,aAIlB2D,EAAmBG,SAASnF,QAAS,EACrCxC,EAAKmI,KAAKC,KAAKF,IAJbV,EAAmBG,SAASnF,QAAS,KAM3CgF,EAAmBa,UAAU,WAC3BpI,EAAUC,QAAQ,SAAAC,GAAY,OAAAA,EAASmI,UAAW,IAClDV,EAAcpG,gBAEhBgG,EAAmBe,kBAAkBC,iBAGhCnD,EAAArG,UAAAqI,8BAAqBoB,GACtB/I,KAAKoH,WACPpH,KAAKkH,MAAMwB,KAAKK,GAChB/I,KAAKoH,SAAS5G,QAAQ,SAACmB,EAASqH,GAC9BrH,EAAQsH,SACRtH,EAAQuH,aAGZlJ,KAAKoH,SAAW,IAGXzB,EAAArG,UAAA6J,kCAEL,IADA,IAAIxH,EAAsB3B,KAAKoH,SAASpH,KAAKoH,SAAShI,OAAS,GACjC,EAAvBY,KAAKoH,SAAShI,QAAcuC,IAAYA,EAAQyH,eACrDzH,EAAQsH,SACRtH,EAAQuH,UACRlJ,KAAKoH,SAAWpH,KAAKoH,SAASiC,MAAM,GAAI,GACxC1H,EAAU3B,KAAKoH,SAASpH,KAAKoH,SAAShI,OAAS,GAEjD,OAAOuC,GAGFgE,EAAArG,UAAAiJ,yBAAgBe,cAAAC,OAAA,IAAAD,EAAA,GAAAA,EAAE9F,EAAA+F,EAAA/F,eAAgBxC,EAAAuI,EAAAvI,MACnChB,KAAKwJ,uBAGTxJ,KAAKwJ,sBAAuB,EAE5B/H,WAAW,WACT,IAAME,EAAUrB,EAAK6I,yBACM,EAAvB7I,EAAK8G,SAAShI,QAAcuC,IAC9BA,EAAQsH,SACRtH,EAAQuH,YAEL1F,GAAyC,EAAvBlD,EAAK8G,SAAShI,QAAcuC,IACjDrB,EAAK4G,MAAMwB,KAAK,CAAEd,UAAW,SAAU5G,MAAKA,IAC5CW,EAAQsH,SACRtH,EAAQuH,WAGV,IAAMO,EAAUnJ,EAAK6I,yBACjBM,IACFA,EAAQtF,YAAYrB,QAAS,GAG/BxC,EAAKkJ,sBAAuB,MAIzB7D,EAAArG,UAAA6H,yBAAgBhD,GACrB,IAAMxC,EAAUwC,EAAYxC,QACtBqH,EAAQhJ,KAAKoH,SAAS3C,QAAQ9C,GACpC3B,KAAKoH,SAASiC,MAAML,EAAQ,GAAGxI,QAAQ,SAAAkJ,GACrCA,EAAeT,SACfS,EAAeR,aAIZvD,EAAArG,UAAAqK,oBAAW7B,GAChB,IAAMnG,EAAU3B,KAAKmJ,yBACrB,OAAOrB,EAAmBnG,UAAYA,uBA5LzCiI,EAAAA,sDAzCQC,EAAAA,eAAqBC,EAAAA,2CCW5B,SAAAC,EAAoBC,GAAAhK,KAAAgK,mBAAAA,SAGbD,EAAAzK,UAAA2K,cADP,SACqBjJ,GACdhB,KAAKmE,YAAY+F,WACpBlK,KAAKgK,mBAAmBvB,KAAKC,KAAK,CAChCvE,YAAanE,KAAKmE,YAClBnD,MAAKA,EACLL,KAAMX,KAAKmK,qBAEbnJ,EAAMsD,iBACNtD,EAAMmB,wCAlBXiI,EAAAA,UAASvF,KAAA,CAAC,CACTC,SAAU,6DAJHa,iDAONL,EAAAA,2BACAA,EAAAA,6BAIAI,EAAAA,aAAYb,KAAA,CAAC,cAAe,CAAC,mBCZhCwF,EAAA,WAuBE,SAAAA,EAAmBrF,EAA6CnF,GAA7CG,KAAAgF,SAAAA,EAA6ChF,KAAAH,WAAAA,gBAdtC,gBACoC,gBACpC,gBACoC,eACQ,IAAII,EAAAA,4BAGxD,+BACPoK,EAAA/K,UAAA,WAAQ,gBACjB,OAAOU,KAAKsK,SACVtK,KAAKuK,UACJvK,KAAKqC,mBAAmBrC,KAAKsC,QAAStC,KAAKU,8CAKzC2J,EAAA/K,UAAA+C,4BAAmBI,EAAY9B,GACpC,OAAI8B,aAAiBC,SACZD,EAAM9B,GAER8B,GAGF4H,EAAA/K,UAAAkL,2BACLxK,KAAK4I,UAAW,GAEXyB,EAAA/K,UAAAmL,6BACLzK,KAAK4I,UAAW,GAGXyB,EAAA/K,UAAAiF,wBAAe5D,EAAWuB,GAC1BlC,KAAKqC,mBAAmBrC,KAAKsC,QAAS3B,IAG3CX,KAAKc,QAAQG,KAAK,CAAED,MAAOkB,EAAQvB,KAAIA,yBAzC1CyJ,EAAAA,UAASvF,KAAA,CAAC,CAETC,SAAU,iEAJiD4F,EAAAA,mBAAzCxF,EAAAA,+CAQjBI,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,uBACAA,EAAAA,uBACAC,EAAAA,YAbH,gBCwEE,SAAAoF,EACUC,EACAhL,EACAC,EAE8BC,GALxC,IAAAQ,EAAAN,KACUA,KAAA4K,oBAAAA,EACA5K,KAAAJ,eAAAA,EACAI,KAAAH,WAAAA,EAE8BG,KAAAF,QAAAA,iBApBZ,mBACA,sBACI,iBACL,aACmC,IAAIG,EAAAA,uBACJ,IAAIA,EAAAA,mCAGZ,cAExB,qBAGO,IAAIC,EAAAA,aASnCJ,IACFE,KAAKG,UAAYL,EAAQK,UACzBH,KAAKI,cAAgBN,EAAQM,eAE/BJ,KAAKY,aAAaC,IAAI+J,EAAoBnC,KAAK1H,UAAU,SAAA8J,GACvDvK,EAAKwK,YAAYD,aAIdF,EAAArL,UAAAuC,uBACL7B,KAAKY,aAAakB,eAGb6I,EAAArL,UAAAwL,qBAAYD,cACjB,IAAI7K,KAAKkK,SAAT,CAGQ,IAAA/F,EAAA0G,EAAA1G,YAAanD,EAAA6J,EAAA7J,MAAOL,EAAAkK,EAAAlK,KACxBwD,GAAeA,IAAgBnE,OAGnCA,KAAKgB,MAAQA,EACbhB,KAAKW,KAAOA,EACZX,KAAK+K,sBACL/K,KAAK4K,oBAAoBvE,gBAAezH,EAAA,GAAMiM,EAAS,CAAEtK,UAAWP,KAAKgL,iBAAkBnD,UAAW7H,KAAK6H,aAC3G7H,KAAK4K,oBAAoB1D,MAAMiB,eAAe8C,KAAKC,EAAAA,SAASnK,UAAU,SAAAgI,GAAc,OAAAzI,EAAK4G,MAAMjG,KAAK8H,KACpG/I,KAAKmL,KAAKzC,KAAKmC,MAGVF,EAAArL,UAAAiD,2BAAkB9B,GACvB,OAAOT,KAAKqC,mBAAmB5B,EAAS+B,UAGnCmI,EAAArL,UAAAyL,0CACL/K,KAAKgL,iBAAmBhL,KAAKO,UAAU6K,OAAO,SAAA3K,GAAY,OAAAH,EAAKiC,kBAAkB9B,MAG5EkK,EAAArL,UAAA+C,4BAAmBI,GACxB,OAAIA,aAAiBC,SACZD,EAAMzC,KAAKW,MAEb8B,uBArFVmC,EAAAA,UAASC,KAAA,CAAC,CACTwG,cAAeC,EAAAA,kBAAkBC,KACjCzG,SAAU,eACVC,OAAQ,CAAC,uUAgBTC,SAAU,iDAlCHW,SApBLV,EAAAA,yBAGAC,EAAAA,8CAyECC,EAAAA,UAAQ,CAAAxB,KACRyB,EAAAA,OAAMP,KAAA,CAACpF,2CApBT6F,EAAAA,yBACAA,EAAAA,6BACAA,EAAAA,wBACAA,EAAAA,qBACAC,EAAAA,qBACAA,EAAAA,0BACAiG,EAAAA,gBAAe3G,KAAA,CAACwF,wBAChB7E,EAAAA,UAASX,KAAA,CAAC,gBCjEb4G,EAAA,gCAiCgBA,EAAAC,iBAAQ5L,GACpB,MAAO,CACL6L,SAAUF,EACVG,UAAW,CACTjG,EACA,CACEkG,QAASpM,EACTqM,SAAUhM,0BA5BnBiM,EAAAA,SAAQlH,KAAA,CAAC,CACRmH,aAAc,CACZjC,EACAY,EACAhL,EACA0K,GAEF4B,gBAAiB,CACftM,GAEFuM,QAAS,CACPnC,EACAY,EACAN,GAEF8B,QAAS,CACPC,EAAAA,aACAC,EAAAA,qBA7BJ","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nexport const CONTEXT_MENU_OPTIONS = new InjectionToken('CONTEXT_MENU_OPTIONS');\n","import { CloseLeafMenuEvent, IContextMenuClickEvent } from './contextMenu.service';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    Inject,\n    Input,\n    Optional,\n    Renderer,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { EventEmitter, OnDestroy, OnInit, Output, QueryList, HostListener } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ContextMenuItemDirective } from './contextMenu.item.directive';\nimport { IContextMenuOptions } from './contextMenu.options';\nimport { CONTEXT_MENU_OPTIONS } from './contextMenu.tokens';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\n\nexport interface ILinkConfig {\n  click: (item: any, $event?: MouseEvent) => void;\n  enabled?: (item: any) => boolean;\n  html: (item: any) => string;\n}\n\nconst ARROW_LEFT_KEYCODE = 37;\n\n@Component({\n  selector: 'context-menu-content',\n  styles: [\n    `.passive {\n       display: block;\n       padding: 3px 20px;\n       clear: both;\n       font-weight: normal;\n       line-height: @line-height-base;\n       white-space: nowrap;\n     }\n    .hasSubMenu:before {\n      content: \"\\u25B6\";\n      float: right;\n    }`,\n  ],\n  template:\n  `<div class=\"dropdown open show ngx-contextmenu\" [ngClass]=\"menuClass\" tabindex=\"0\">\n      <ul #menu class=\"dropdown-menu show\" style=\"position: static; float: none;\" tabindex=\"0\">\n        <li #li *ngFor=\"let menuItem of menuItems; let i = index\" [class.disabled]=\"!isMenuItemEnabled(menuItem)\"\n            [class.divider]=\"menuItem.divider\" [class.dropdown-divider]=\"useBootstrap4 && menuItem.divider\"\n            [class.active]=\"menuItem.isActive && isMenuItemEnabled(menuItem)\"\n            [attr.role]=\"menuItem.divider ? 'separator' : undefined\">\n          <a *ngIf=\"!menuItem.divider && !menuItem.passive\" href [class.dropdown-item]=\"useBootstrap4\"\n            [class.active]=\"menuItem.isActive && isMenuItemEnabled(menuItem)\"\n            [class.disabled]=\"useBootstrap4 && !isMenuItemEnabled(menuItem)\" [class.hasSubMenu]=\"!!menuItem.subMenu\"\n            (click)=\"onMenuItemSelect(menuItem, $event)\" (mouseenter)=\"onOpenSubMenu(menuItem, $event)\">\n            <ng-template [ngTemplateOutlet]=\"menuItem.template\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n          </a>\n\n          <span (click)=\"stopEvent($event)\" (contextmenu)=\"stopEvent($event)\" class=\"passive\"\n                *ngIf=\"!menuItem.divider && menuItem.passive\" [class.dropdown-item]=\"useBootstrap4\"\n                [class.disabled]=\"useBootstrap4 && !isMenuItemEnabled(menuItem)\">\n            <ng-template [ngTemplateOutlet]=\"menuItem.template\" [ngTemplateOutletContext]=\"{ $implicit: item }\"></ng-template>\n          </span>\n        </li>\n      </ul>\n    </div>\n  `,\n})\nexport class ContextMenuContentComponent implements OnInit, OnDestroy, AfterViewInit {\n  @Input() public menuItems: ContextMenuItemDirective[] = [];\n  @Input() public item: any;\n  @Input() public event: MouseEvent | KeyboardEvent;\n  @Input() public parentContextMenu: ContextMenuContentComponent;\n  @Input() public menuClass: string;\n  @Input() public overlay: OverlayRef;\n  @Input() public isLeaf = false;\n  @Output() public execute: EventEmitter<{ event: MouseEvent | KeyboardEvent, item: any, menuItem: ContextMenuItemDirective }>\n    = new EventEmitter();\n  @Output() public openSubMenu: EventEmitter<IContextMenuClickEvent> = new EventEmitter();\n  @Output() public closeLeafMenu: EventEmitter<CloseLeafMenuEvent> = new EventEmitter();\n  @Output() public closeAllMenus: EventEmitter<{ event: MouseEvent }> = new EventEmitter();\n  @ViewChild('menu') public menuElement: ElementRef;\n  @ViewChildren('li') public menuItemElements: QueryList<ElementRef>;\n\n  public autoFocus = false;\n  public useBootstrap4 = false;\n  private _keyManager: ActiveDescendantKeyManager<ContextMenuItemDirective>;\n  private subscription: Subscription = new Subscription();\n  constructor(\n    private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Optional()\n    @Inject(CONTEXT_MENU_OPTIONS) private options: IContextMenuOptions,\n    public renderer: Renderer,\n  ) {\n    if (options) {\n      this.autoFocus = options.autoFocus;\n      this.useBootstrap4 = options.useBootstrap4;\n    }\n  }\n\n  ngOnInit(): void {\n    this.menuItems.forEach(menuItem => {\n      menuItem.currentItem = this.item;\n      this.subscription.add(menuItem.execute.subscribe(event => this.execute.emit({ ...event, menuItem })));\n    });\n    const queryList = new QueryList<ContextMenuItemDirective>();\n    queryList.reset(this.menuItems);\n    this._keyManager = new ActiveDescendantKeyManager<ContextMenuItemDirective>(queryList).withWrap();\n  }\n\n  ngAfterViewInit() {\n    if (this.autoFocus) {\n      setTimeout(() => this.focus());\n    }\n    this.overlay.updatePosition();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  focus(): void {\n    if (this.autoFocus) {\n      this.menuElement.nativeElement.focus();\n    }\n  }\n\n  stopEvent($event: MouseEvent) {\n    $event.stopPropagation();\n  }\n\n  public isMenuItemEnabled(menuItem: ContextMenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem && menuItem.enabled);\n  }\n\n  public isMenuItemVisible(menuItem: ContextMenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem && menuItem.visible);\n  }\n\n  public evaluateIfFunction(value: any): any {\n    if (value instanceof Function) {\n      return value(this.item);\n    }\n    return value;\n  }\n\n  public isDisabled(link: ILinkConfig): boolean {\n    return link.enabled && !link.enabled(this.item);\n  }\n\n  @HostListener('window:keydown.ArrowDown', ['$event'])\n  @HostListener('window:keydown.ArrowUp', ['$event'])\n  public onKeyEvent(event: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this._keyManager.onKeydown(event);\n  }\n\n  @HostListener('window:keydown.ArrowRight', ['$event'])\n  public keyboardOpenSubMenu(event?: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    const menuItem = this.menuItems[this._keyManager.activeItemIndex];\n    if (menuItem) {\n      this.onOpenSubMenu(menuItem);\n    }\n  }\n\n  @HostListener('window:keydown.Enter', ['$event'])\n  @HostListener('window:keydown.Space', ['$event'])\n  public keyboardMenuItemSelect(event?: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    const menuItem = this.menuItems[this._keyManager.activeItemIndex];\n    if (menuItem) {\n      this.onMenuItemSelect(menuItem, event);\n    }\n  }\n\n  @HostListener('window:keydown.Escape', ['$event'])\n  @HostListener('window:keydown.ArrowLeft', ['$event'])\n  public onCloseLeafMenu(event: KeyboardEvent): void {\n    if (!this.isLeaf) {\n      return;\n    }\n    this.cancelEvent(event);\n    this.closeLeafMenu.emit({ exceptRootMenu: event.keyCode === ARROW_LEFT_KEYCODE, event });\n  }\n\n  @HostListener('document:click', ['$event'])\n  @HostListener('document:contextmenu', ['$event'])\n  public closeMenu(event: MouseEvent): void {\n    if (event.type === 'click' && event.button === 2) {\n      return;\n    }\n    this.closeAllMenus.emit({event});\n  }\n\n  public onOpenSubMenu(menuItem: ContextMenuItemDirective, event?: MouseEvent | KeyboardEvent): void {\n    const anchorElementRef = this.menuItemElements.toArray()[this._keyManager.activeItemIndex];\n    const anchorElement = anchorElementRef && anchorElementRef.nativeElement;\n    this.openSubMenu.emit({\n      anchorElement,\n      contextMenu: menuItem.subMenu,\n      event,\n      item: this.item,\n      parentContextMenu: this,\n    });\n  }\n\n  public onMenuItemSelect(menuItem: ContextMenuItemDirective, event: MouseEvent | KeyboardEvent): void {\n    event.preventDefault();\n    event.stopPropagation();\n    this.onOpenSubMenu(menuItem, event);\n    if (!menuItem.subMenu) {\n      menuItem.triggerExecute(this.item, event);\n    }\n  }\n\n  private cancelEvent(event): void {\n    if (!event) {\n      return;\n    }\n\n    const target: HTMLElement = event.target;\n    if (['INPUT', 'TEXTAREA', 'SELECT'].indexOf(target.tagName) > -1 || target.isContentEditable) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n  }\n}\n","import { Overlay, OverlayRef, ScrollStrategyOptions } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable, ElementRef } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { ContextMenuComponent } from './contextMenu.component';\nimport { ContextMenuItemDirective } from './contextMenu.item.directive';\nimport { ContextMenuContentComponent } from './contextMenuContent.component';\n\nexport interface IContextMenuClickEvent {\n  anchorElement?: Element | EventTarget;\n  contextMenu?: ContextMenuComponent;\n  event?: MouseEvent | KeyboardEvent;\n  parentContextMenu?: ContextMenuContentComponent;\n  item: any;\n  activeMenuItemIndex?: number;\n}\nexport interface IContextMenuContext extends IContextMenuClickEvent {\n  menuItems: ContextMenuItemDirective[];\n  menuClass: string;\n}\nexport interface CloseLeafMenuEvent {\n  exceptRootMenu?: boolean;\n  event?: MouseEvent | KeyboardEvent;\n}\nexport interface OverlayRefWithContextMenu extends OverlayRef {\n  contextMenu?: ContextMenuContentComponent;\n}\n\nexport interface CancelContextMenuEvent {\n  eventType: 'cancel';\n  event?: MouseEvent | KeyboardEvent;\n}\nexport interface ExecuteContextMenuEvent {\n  eventType: 'execute';\n  event?: MouseEvent | KeyboardEvent;\n  item: any;\n  menuItem: ContextMenuItemDirective;\n}\nexport type CloseContextMenuEvent = ExecuteContextMenuEvent | CancelContextMenuEvent;\n\n@Injectable()\nexport class ContextMenuService {\n  public isDestroyingLeafMenu = false;\n\n  public show: Subject<IContextMenuClickEvent> = new Subject<IContextMenuClickEvent>();\n  public triggerClose: Subject<ContextMenuContentComponent> = new Subject();\n  public close: Subject<CloseContextMenuEvent> = new Subject();\n\n  private contextMenuContent: ComponentRef<ContextMenuContentComponent>;\n  private overlays: OverlayRef[] = [];\n  private fakeElement: any = {\n    getBoundingClientRect: (): ClientRect => ({\n      bottom: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      top: 0,\n      width: 0,\n    })\n  };\n\n  constructor(\n    private overlay: Overlay,\n    private scrollStrategy: ScrollStrategyOptions,\n  ) { }\n\n  public openContextMenu(context: IContextMenuContext) {\n    const { anchorElement, event, parentContextMenu } = context;\n\n    if (!parentContextMenu) {\n      const mouseEvent = event as MouseEvent;\n      this.fakeElement.getBoundingClientRect = (): ClientRect => ({\n        bottom: mouseEvent.clientY,\n        height: 0,\n        left: mouseEvent.clientX,\n        right: mouseEvent.clientX,\n        top: mouseEvent.clientY,\n        width: 0,\n      });\n      this.closeAllContextMenus({ eventType: 'cancel', event });\n      const positionStrategy = this.overlay.position().connectedTo(\n        new ElementRef(anchorElement || this.fakeElement),\n        { originX: 'start', originY: 'bottom' },\n        { overlayX: 'start', overlayY: 'top' })\n        .withFallbackPosition(\n        { originX: 'start', originY: 'top' },\n        { overlayX: 'start', overlayY: 'bottom' })\n        .withFallbackPosition(\n        { originX: 'end', originY: 'top' },\n        { overlayX: 'start', overlayY: 'top' })\n        .withFallbackPosition(\n        { originX: 'start', originY: 'top' },\n        { overlayX: 'end', overlayY: 'top' })\n        .withFallbackPosition(\n        { originX: 'end', originY: 'center' },\n        { overlayX: 'start', overlayY: 'center' })\n        .withFallbackPosition(\n        { originX: 'start', originY: 'center' },\n        { overlayX: 'end', overlayY: 'center' })\n        ;\n      this.overlays = [this.overlay.create({\n        positionStrategy,\n        panelClass: 'ngx-contextmenu',\n        scrollStrategy: this.scrollStrategy.close(),\n      })];\n      this.attachContextMenu(this.overlays[0], context);\n    } else {\n      const positionStrategy = this.overlay.position().connectedTo(\n        new ElementRef(event ? event.target : anchorElement),\n        { originX: 'end', originY: 'top' },\n        { overlayX: 'start', overlayY: 'top' })\n        .withFallbackPosition(\n        { originX: 'start', originY: 'top' },\n        { overlayX: 'end', overlayY: 'top' })\n        .withFallbackPosition(\n        { originX: 'end', originY: 'bottom' },\n        { overlayX: 'start', overlayY: 'bottom' })\n        .withFallbackPosition(\n        { originX: 'start', originY: 'bottom' },\n        { overlayX: 'end', overlayY: 'bottom' })\n        ;\n      const newOverlay = this.overlay.create({\n        positionStrategy,\n        panelClass: 'ngx-contextmenu',\n        scrollStrategy: this.scrollStrategy.close(),\n      });\n      this.destroySubMenus(parentContextMenu);\n      this.overlays = this.overlays.concat(newOverlay);\n      this.attachContextMenu(newOverlay, context);\n    }\n  }\n\n  public attachContextMenu(overlay: OverlayRef, context: IContextMenuContext): void {\n    const { event, item, menuItems, menuClass } = context;\n\n    const contextMenuContent: ComponentRef<ContextMenuContentComponent> = overlay.attach(new ComponentPortal(ContextMenuContentComponent));\n    contextMenuContent.instance.event = event;\n    contextMenuContent.instance.item = item;\n    contextMenuContent.instance.menuItems = menuItems;\n    contextMenuContent.instance.overlay = overlay;\n    contextMenuContent.instance.isLeaf = true;\n    contextMenuContent.instance.menuClass = menuClass;\n    (<OverlayRefWithContextMenu>overlay).contextMenu = contextMenuContent.instance;\n\n    const subscriptions: Subscription = new Subscription();\n    subscriptions.add(contextMenuContent.instance.execute.asObservable()\n      .subscribe((executeEvent) => this.closeAllContextMenus({ eventType: 'execute', ...executeEvent })));\n    subscriptions.add(contextMenuContent.instance.closeAllMenus.asObservable()\n      .subscribe((closeAllEvent) => this.closeAllContextMenus({ eventType: 'cancel', ...closeAllEvent })));\n    subscriptions.add(contextMenuContent.instance.closeLeafMenu.asObservable()\n      .subscribe(closeLeafMenuEvent => this.destroyLeafMenu(closeLeafMenuEvent)));\n    subscriptions.add(contextMenuContent.instance.openSubMenu.asObservable()\n      .subscribe((subMenuEvent: IContextMenuContext) => {\n        this.destroySubMenus(contextMenuContent.instance);\n        if (!subMenuEvent.contextMenu) {\n          contextMenuContent.instance.isLeaf = true;\n          return;\n        }\n        contextMenuContent.instance.isLeaf = false;\n        this.show.next(subMenuEvent);\n      }));\n    contextMenuContent.onDestroy(() => {\n      menuItems.forEach(menuItem => menuItem.isActive = false);\n      subscriptions.unsubscribe();\n    });\n    contextMenuContent.changeDetectorRef.detectChanges();\n  }\n\n  public closeAllContextMenus(closeEvent: CloseContextMenuEvent): void {\n    if (this.overlays) {\n      this.close.next(closeEvent);\n      this.overlays.forEach((overlay, index) => {\n        overlay.detach();\n        overlay.dispose();\n      });\n    }\n    this.overlays = [];\n  }\n\n  public getLastAttachedOverlay(): OverlayRefWithContextMenu {\n    let overlay: OverlayRef = this.overlays[this.overlays.length - 1];\n    while (this.overlays.length > 1 && overlay && !overlay.hasAttached()) {\n      overlay.detach();\n      overlay.dispose();\n      this.overlays = this.overlays.slice(0, -1);\n      overlay = this.overlays[this.overlays.length - 1];\n    }\n    return overlay;\n  }\n\n  public destroyLeafMenu({ exceptRootMenu, event }: CloseLeafMenuEvent = {}): void {\n    if (this.isDestroyingLeafMenu) {\n      return;\n    }\n    this.isDestroyingLeafMenu = true;\n\n    setTimeout(() => {\n      const overlay = this.getLastAttachedOverlay();\n      if (this.overlays.length > 1 && overlay) {\n        overlay.detach();\n        overlay.dispose();\n      }\n      if (!exceptRootMenu && this.overlays.length > 0 && overlay) {\n        this.close.next({ eventType: 'cancel', event });\n        overlay.detach();\n        overlay.dispose();\n      }\n\n      const newLeaf = this.getLastAttachedOverlay();\n      if (newLeaf) {\n        newLeaf.contextMenu.isLeaf = true;\n      }\n\n      this.isDestroyingLeafMenu = false;\n    });\n  }\n\n  public destroySubMenus(contextMenu: ContextMenuContentComponent): void {\n    const overlay = contextMenu.overlay;\n    const index = this.overlays.indexOf(overlay);\n    this.overlays.slice(index + 1).forEach(subMenuOverlay => {\n      subMenuOverlay.detach();\n      subMenuOverlay.dispose();\n    });\n  }\n\n  public isLeafMenu(contextMenuContent: ContextMenuContentComponent): boolean {\n    const overlay = this.getLastAttachedOverlay();\n    return contextMenuContent.overlay === overlay;\n  }\n}\n","import { ContextMenuComponent } from './contextMenu.component';\nimport { ContextMenuService } from './contextMenu.service';\nimport { Directive, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[contextMenu]',\n})\nexport class ContextMenuAttachDirective {\n  @Input() public contextMenuSubject: any;\n  @Input() public contextMenu: ContextMenuComponent;\n\n  constructor(private contextMenuService: ContextMenuService) { }\n\n  @HostListener('contextmenu', ['$event'])\n  public onContextMenu(event: MouseEvent): void {\n    if (!this.contextMenu.disabled) {\n      this.contextMenuService.show.next({\n        contextMenu: this.contextMenu,\n        event,\n        item: this.contextMenuSubject,\n      });\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n","import { Highlightable } from '@angular/cdk/a11y';\nimport { Directive, ElementRef, EventEmitter, Input, Output, TemplateRef } from '@angular/core';\n\n@Directive({\n  /* tslint:disable:directive-selector-type */\n  selector: '[contextMenuItem]',\n  /* tslint:enable:directive-selector-type */\n})\nexport class ContextMenuItemDirective implements Highlightable {\n  @Input() public subMenu: any;\n  @Input() public divider = false;\n  @Input() public enabled: boolean | ((item: any) => boolean) = true;\n  @Input() public passive = false;\n  @Input() public visible: boolean | ((item: any) => boolean) = true;\n  @Output() public execute: EventEmitter<{ event: Event, item: any }> = new EventEmitter();\n\n  public currentItem: any;\n  public isActive = false;\n  public get disabled() {\n    return this.passive ||\n      this.divider ||\n      !this.evaluateIfFunction(this.enabled, this.currentItem);\n  }\n\n  constructor(public template: TemplateRef<{ item: any }>, public elementRef: ElementRef) { }\n\n  public evaluateIfFunction(value: any, item: any): any {\n    if (value instanceof Function) {\n      return value(item);\n    }\n    return value;\n  }\n\n  public setActiveStyles(): void {\n    this.isActive = true;\n  }\n  public setInactiveStyles(): void {\n    this.isActive = false;\n  }\n\n  public triggerExecute(item: any, $event?: MouseEvent | KeyboardEvent): void {\n    if (!this.evaluateIfFunction(this.enabled, item)) {\n      return;\n    }\n    this.execute.emit({ event: $event, item });\n  }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\nimport { ContextMenuItemDirective } from './contextMenu.item.directive';\nimport { IContextMenuOptions } from './contextMenu.options';\nimport { ContextMenuService, IContextMenuClickEvent, CloseContextMenuEvent } from './contextMenu.service';\nimport { CONTEXT_MENU_OPTIONS } from './contextMenu.tokens';\n\nexport interface ILinkConfig {\n  click: (item: any, $event?: MouseEvent) => void;\n  enabled?: (item: any) => boolean;\n  html: (item: any) => string;\n}\nexport interface MouseLocation {\n  left?: string;\n  marginLeft?: string;\n  marginTop?: string;\n  top?: string;\n}\n\n@Component({\n  encapsulation: ViewEncapsulation.None,\n  selector: 'context-menu',\n  styles: [`\n    .cdk-overlay-container {\n      position: fixed;\n      z-index: 1000;\n      pointer-events: none;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n    }\n    .ngx-contextmenu.cdk-overlay-pane {\n      position: absolute;\n      pointer-events: auto;\n      box-sizing: border-box;\n    }\n  `],\n  template: ` `,\n})\nexport class ContextMenuComponent implements OnDestroy {\n  @Input() public menuClass = \"\";\n  @Input() public autoFocus = false;\n  @Input() public useBootstrap4 = false;\n  @Input() public disabled = false;\n  @Output() public close: EventEmitter<CloseContextMenuEvent> = new EventEmitter();\n  @Output() public open: EventEmitter<IContextMenuClickEvent> = new EventEmitter();\n  @ContentChildren(ContextMenuItemDirective) public menuItems: QueryList<ContextMenuItemDirective>;\n  @ViewChild('menu') public menuElement: ElementRef;\n  public visibleMenuItems: ContextMenuItemDirective[] = [];\n\n  public links: ILinkConfig[] = [];\n  public item: any;\n  public event: MouseEvent | KeyboardEvent;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private _contextMenuService: ContextMenuService,\n    private changeDetector: ChangeDetectorRef,\n    private elementRef: ElementRef,\n    @Optional()\n    @Inject(CONTEXT_MENU_OPTIONS) private options: IContextMenuOptions,\n  ) {\n    if (options) {\n      this.autoFocus = options.autoFocus;\n      this.useBootstrap4 = options.useBootstrap4;\n    }\n    this.subscription.add(_contextMenuService.show.subscribe(menuEvent => {\n      this.onMenuEvent(menuEvent);\n    }));\n  }\n\n  public ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  public onMenuEvent(menuEvent: IContextMenuClickEvent): void {\n    if (this.disabled) {\n      return;\n    }\n    const { contextMenu, event, item } = menuEvent;\n    if (contextMenu && contextMenu !== this) {\n      return;\n    }\n    this.event = event;\n    this.item = item;\n    this.setVisibleMenuItems();\n    this._contextMenuService.openContextMenu({ ...menuEvent, menuItems: this.visibleMenuItems, menuClass: this.menuClass });\n    this._contextMenuService.close.asObservable().pipe(first()).subscribe(closeEvent => this.close.emit(closeEvent));\n    this.open.next(menuEvent);\n  }\n\n  public isMenuItemVisible(menuItem: ContextMenuItemDirective): boolean {\n    return this.evaluateIfFunction(menuItem.visible);\n  }\n\n  public setVisibleMenuItems(): void {\n    this.visibleMenuItems = this.menuItems.filter(menuItem => this.isMenuItemVisible(menuItem));\n  }\n\n  public evaluateIfFunction(value: any): any {\n    if (value instanceof Function) {\n      return value(this.item);\n    }\n    return value;\n  }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { ContextMenuAttachDirective } from './contextMenu.attach.directive';\nimport { ContextMenuComponent } from './contextMenu.component';\nimport { ContextMenuItemDirective } from './contextMenu.item.directive';\nimport { IContextMenuOptions } from './contextMenu.options';\nimport { ContextMenuService } from './contextMenu.service';\nimport { CONTEXT_MENU_OPTIONS } from './contextMenu.tokens';\nimport { ContextMenuContentComponent } from './contextMenuContent.component';\n\n@NgModule({\n  declarations: [\n    ContextMenuAttachDirective,\n    ContextMenuComponent,\n    ContextMenuContentComponent,\n    ContextMenuItemDirective,\n  ],\n  entryComponents: [\n    ContextMenuContentComponent,\n  ],\n  exports: [\n    ContextMenuAttachDirective,\n    ContextMenuComponent,\n    ContextMenuItemDirective,\n  ],\n  imports: [\n    CommonModule,\n    OverlayModule,\n  ],\n})\nexport class ContextMenuModule {\n  public static forRoot(options?: IContextMenuOptions): ModuleWithProviders {\n    return {\n      ngModule: ContextMenuModule,\n      providers: [\n        ContextMenuService,\n        {\n          provide: CONTEXT_MENU_OPTIONS,\n          useValue: options,\n        },\n      ],\n    };\n  }\n}\n"]}